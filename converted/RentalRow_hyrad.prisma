model RentalRow {
  @@map("hyrad")

  rentalRowId String @id(map: "pkhyrad") @map("keyhyrad") @db.Char(15)
  contractId String @map("keyhyobj") @db.Char(15) // Based on the domain reference "Kontrakt"
  rentalArticleId String @map("keycmart") @db.Char(15) // Based on previous conversion "Hyresartikel"
  allocationToCompleteId String? @map("keycmobj") @db.Char(15) // Based on previous conversion "Fördela hela på"
  objectId String? @map("keycmobj2") @db.Char(15) // Renamed based on the domain reference "Objekt"
  periodId String? @map("keyhyavg") @db.Char(15) // Based on the domain reference "Avgäldsperiod"
  indexClauseId String? @map("keyhyink") @db.Char(15) // Based on the domain reference "Indexklausul"
  unitId String @map("keycmuni") @db.Char(15) // Based on the domain reference "Enhet"
  summaryRowId String? @map("keyhysum") @db.Char(15) // Based on the domain reference "Summarad"
  indexSerieId String? @map("keycmind") @db.Char(15) // Based on the domain reference "Indexserie"
  baseIndexId String? @map("keycminv") @db.Char(15) // Based on the domain reference "Basindex"
  currentIndexId String? @map("keycminv2") @db.Char(15) // Based on the domain reference "Aktuellt index"
  firstIndexChangeId String? @map("keycminv3") @db.Char(15) // Based on the domain reference "First index change"
  readingFromId String? @map("keydrval") @db.Char(15) // Based on the domain reference "Avläsning fr.o.m."
  readingToId String? @map("keydrval2") @db.Char(15) // Based on the domain reference "Avläsning t.o.m."
  linkedContactId String? @map("keyhyavk") @db.Char(15) // Based on the domain reference "Kopplad kontakt"
  turnoverRentId String? @map("keyhytoo") @db.Char(15) // Based on the domain reference "Omsättningshyra"
  deviatingCompanyId String? @map("keycmcmp") @db.Char(15) // Based on the domain reference "Avvikande företag"
  periodicPaymentId String? @map("keylnprd") @db.Char(15) // Based on the domain reference "Periodic payment"
  extraMaintenanceFeeId String? @map("keylnemf") @db.Char(15) // Based on the domain reference "Extra underhållsavgift"
  number Float? @map("antal") // Based on the domain reference "Antal"
  order Int? @map("sortering") @db.SmallInt // Based on the domain reference "Ordning"
  fromDate DateTime? @map("fdate") @db.DateTime // Based on the domain reference "Fr.o.m."
  toDate DateTime? @map("tdate") @db.DateTime // Based on the domain reference "T.o.m."
  yearPartFrom String? @map("fromper") @db.Char(4) // Based on the domain reference "Del av år fr.o.m."
  yearPartTo String? @map("tomper") @db.Char(4) // Based on the domain reference "Del av år t.o.m."
  referringFrom DateTime? @map("relatefrom") @db.DateTime // Based on the domain reference "Avser fr.o.m."
  excludeTo DateTime? @map("relateto") @db.DateTime // Based on the domain reference "Undantag t.o.m. datum"
  noticeText String? @map("avitext") @db.Char(80) // Renamed based on context
  allocation String? @map("fordelning") @db.Char(1) // Renamed based on domain reference "Fördela intäkt på Hyresobjekt"
  baseRentAmount Float? @map("bashyratot") @db.Money // Based on the domain reference "Bashyra"
  indexShareAmount Float? @map("indexandel") @db.Real // Based on the domain reference "Indexandel"
  changeMonths Int @default(3, map: "DF__hyrad__chngmnths__271E01CD") @map("chngmnths") @db.SmallInt // Based on the domain reference "Change from (months after new index)"
  changeDayOfMonth Int @default(1, map: "DF__hyrad__chngdimnt__28122606") @map("chngdimnth") @db.TinyInt // Based on the domain reference "Change from (day in month)"
  annualRentAmount Float? @map("akthyratot") @db.Money // Based on the domain reference "Årshyra"
  changeFromYear Int? @map("forfromar") @db.SmallInt // Based on the domain reference "Förändras fr.o.m. år"
  changeIntervalYears Int? @map("forintar") @db.TinyInt // Based on the domain reference "Årsintervall. förändring"
  rowType Int @map("rowtype") @db.TinyInt // Based on domain knowledge
  indexChangeFrom String? @map("indexper") @db.Char(4) // Based on the domain reference "Indexändring fr.o.m."
  indexChangeYear Int? @map("indexperar") @db.TinyInt // Based on the domain reference "År indexändring"
  newIndexMonth Int? @map("newindexm") @db.TinyInt // Based on the domain reference "Ny indexmånad"
  exceptionYear Int? @map("excepyear") @db.SmallInt // Based on the domain reference "Undantag t.o.m. år"
  exceptionMonth Int? @map("excepmonth") @db.TinyInt // Based on the domain reference "Undantag t.o.m. månad"
  minimumRent Int @default(0, map: "DF__hyrad__minrent__29064A3F") @map("minrent") @db.TinyInt // Based on the domain reference "Minimal hyra"
  noticeDate DateTime? @map("noticedate") @db.DateTime // Based on the naming convention
  timestamp String @map("timestamp") @db.Char(10) // TODO: Verify usage of timestamp

  hyfra hyfra[] // TODO: rename hyfra to new model name when available
  rentalArticle cmart @relation(fields: [rentalArticleId], references: [keycmart], onUpdate: NoAction, map: "fkhyradkeycmart")
  cmcmp cmcmp? @relation(fields: [deviatingCompanyId], references: [keycmcmp], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycmcmp")
  indexSerie cmind? @relation(fields: [indexSerieId], references: [keycmind], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycmind")
  baseIndex cminv? @relation("hyrad_keycminvTocminv", fields: [baseIndexId], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycminv")
  currentIndex cminv? @relation("hyrad_keycminv2Tocminv", fields: [currentIndexId], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycminv2")
  firstIndexChange cminv? @relation("hyrad_keycminv3Tocminv", fields: [firstIndexChangeId], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycminv3")
  allocationToComplete cmobj? @relation("hyrad_keycmobjTocmobj", fields: [allocationToCompleteId], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycmobj")
  object cmobj? @relation("hyrad_keycmobj2Tocmobj", fields: [objectId], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycmobj2")
  unit cmuni @relation(fields: [unitId], references: [keycmuni], onUpdate: NoAction, map: "fkhyradkeycmuni")
  readingFrom drval? @relation("hyrad_keydrvalTodrval", fields: [readingFromId], references: [keydrval], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeydrval")
  readingTo drval? @relation("hyrad_keydrval2Todrval", fields: [readingToId], references: [keydrval], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeydrval2")
  linkedContact hyavk? @relation(fields: [linkedContactId], references: [keyhyavk], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeyhyavk")
  indexClause hyink? @relation(fields: [indexClauseId], references: [keyhyink], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeyhyink")
  contract hyobj @relation(fields: [contractId], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyradkeyhyobj")
  summaryRow hysum? @relation(fields: [summaryRowId], references: [keyhysum], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeyhysum")
  vlutf vlutf[] // TODO: rename vlutf to new model name when available

  @@index([rentalArticleId], map: "fkhyradcmart")
  @@index([indexSerieId], map: "fkhyradcmind")
  @@index([baseIndexId], map: "fkhyradcminv")
  @@index([currentIndexId], map: "fkhyradcminv2")
  @@index([firstIndexChangeId], map: "fkhyradcminv3")
  @@index([allocationToCompleteId], map: "fkhyradcmobj")
  @@index([objectId], map: "fkhyradcmobj2")
  @@index([unitId], map: "fkhyradcmuni")
  @@index([readingFromId], map: "fkhyraddrval1")
  @@index([readingToId], map: "fkhyraddrval2")
  @@index([linkedContactId], map: "fkhyradhyavk")
  @@index([indexClauseId], map: "fkhyradhyink")
  @@index([contractId], map: "fkhyradhyobj")
  @@index([summaryRowId], map: "fkhyradhysum")
  @@index([contractId, rentalArticleId, fromDate, toDate], map: "inhyrad_1PV0O2PPC")
}