model ResourceGroup {
  @@map("cmrgr")
  
  resourceGroupId String @id(map: "pkcmrgr") @map("keycmrgr") @db.Char(15)
  planningTypeId String? @map("keybaret") @db.Char(15) // TODO: confirm if "Resursplaneringstyp" translates directly to "planningTypeId"
  code String @map("code") @db.VarChar(10)
  name String? @map("caption") @db.VarChar(30) // TODO: confirm if "Ben√§mning" translates directly to "name"
  notificationMode Int @default(0, map: "DF__cmrgr__resmail__0A06B702") @map("resmail") @db.TinyInt
  emailNotification Int @default(0, map: "DF__cmrgr__mailnoti__0AFADB3B") @map("mailnoti") @db.TinyInt
  includedInPlanboard Int @default(0, map: "DF__cmrgr__incplanbr__0BEEFF74") @map("incplanbrd") @db.TinyInt
  timestamp String @map("timestamp") @db.Char(10) // TODO: confirm if 'timestamp' needs a different naming convention

  aocap aocap[]
  aorml aorml[]
  aoupp aoupp[]
  barek barek[]
  cmrgk cmrgk[]
  baret baret? @relation(fields: [planningTypeId], references: [keybaret], onUpdate: NoAction, map: "fkcmrgrkeybaret") // TODO: rename 'baret' relation when new name is available
  lbbes lbbes[] // TODO: rename 'lbbes' relation when new name is available
  skund skund[] // TODO: rename 'skund' relation when new name is available
  
  @@index([planningTypeId], map: "fkcmrgrbaret")
}