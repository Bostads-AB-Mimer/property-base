model RentalObjectType {
  @@map("hyint")

  rentalObjectTypeId String @id(map: "pkhyint") @map("keyhyint") @db.Char(15)
  queueTypeId String? @map("keybkkty") @db.Char(15) // TODO: Confirm this relationship in a later pass
  rentalObjectTypeCode String @map("code") @db.Char(10)
  description String? @map("caption") @db.Char(30)
  minimumAge Int? @map("minage") @db.TinyInt
  maximumAge Int? @map("maxage") @db.TinyInt
  housingType Int @default(0, map: "DF__hyint__lmcat__66796CD3") @map("lmcat") @db.TinyInt
  isPublished Int @default(0, map: "DF__hyint__publicera__676D910C") @map("publiceras") @db.TinyInt
  apartmentInspection Int @default(1, map: "DF__hyint__lbcreate__6861B545") @map("lbcreate") @db.TinyInt
  turnoverStatistics Int @default(0, map: "DF__hyint__tuovisibl__6955D97E") @map("tuovisible") @db.TinyInt
  familySituation Int @default(0, map: "DF__hyint__familysit__6A49FDB7") @map("familysit") @db.TinyInt
  timestamp String @map("timestamp") @db.Char(10) // TODO: Consider renaming `timestamp` in a future pass

  hyinf RentalObjectInformation[] @relation("fkhyinfkeyhyint")
  queueType QueueType? @relation(fields: [queueTypeId], references: [queueTypeId], onDelete: NoAction, onUpdate: NoAction, map: "fkhyintkeybkkty") // Assuming QueueType from previous conversions

  @@index([queueTypeId], map: "fkhyintbkkty")
}