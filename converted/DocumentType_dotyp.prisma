model DocumentType {
  @@map("dotyp")

  documentTypeId String @id(map: "pkdotyp") @map("keydotyp") @db.Char(15)
  templateId String? @map("keydorev") @db.Char(15) // Referencing keydorev as Template, assuming a one-to-one relationship for templates
  categoryId String? @map("keycmtyp") @db.Char(15) // Using the previous conversion for cmtyp as TextType
  name String @unique(map: "akdotyp1") @map("caption") @db.VarChar(60) // caption renamed to name
  viewFlag Int @default(0, map: "DF__dotyp__viewer__3C007CA3") @map("viewer") @db.TinyInt // Assuming viewer is a flag indicating a set state
  timestamp String @map("timestamp") @db.Char(10) // TODO: Assess timestamp usage further and rename

  formTemplates FormTemplate[] @relation("fkbsdefkeydotyp") // Converted bsdef to FormTemplate and added relation name
  documents Document[] @relation("fkdorevkeydotyp") // Converted dorev to Document and added relation name

  @@index([categoryId], map: "fkdotypcmtyp")
  // @@index([templateId], map: "fkdotypdorev") // TODO: Commented out due to potential missing relation mapping
}