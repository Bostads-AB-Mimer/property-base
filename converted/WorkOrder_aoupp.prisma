model WorkOrder {
  @@map("aoupp")
  
  workOrderId String @id(map: "pkaoupp") @map("keyaoupp") @db.Char(15)
  moduleId String @map("keysymdl") @db.Char(15) // Assuming 'Modul' translates to 'moduleId'
  workOrderCategoryId String? @map("keyaokat") @db.Char(15) // Assuming 'Arbetsorderkategori' translates to 'workOrderCategoryId'
  originId String? @map("keyaoorg") @db.Char(15) // Assuming 'Ursprung' translates to 'originId'
  workOrderTypeId String? @map("keyaotyp") @db.Char(15) // Assuming 'Arbetsordertyp' translates to 'workOrderTypeId'
  projectId String? @map("keyprprj") @db.Char(15) // Assuming 'Projekt' translates to 'projectId'
  subProjectId String? @map("keyprppr") @db.Char(15) // Assuming 'Delprojekt' translates to 'subProjectId'
  propertyObjectId String? @map("keycmobj") @db.Char(15) // Assuming 'Placering' translates to 'propertyObjectId'
  companyId String? @map("keycmcmp") @db.Char(15) // Assuming 'Företag' translates to 'companyId'
  reporterContactId String? @map("keycmctc") @db.Char(15) // Assuming 'Anmälare' translates to 'reporterContactId'
  resourceContactId String? @map("keycmctc2") @db.Char(15) // Assuming 'Resurs' translates to 'resourceContactId'
  payerContactId String? @map("keycmctc3") @db.Char(15) // Assuming 'Betalare' translates to 'payerContactId'
  customerContactId String? @map("keycmctc4") @db.Char(15) // Assuming 'Kund' translates to 'customerContactId'
  performerContactId String? @map("keycmctc5") @db.Char(15) // Assuming 'Utförare' translates to 'performerContactId'
  managerContactId String? @map("keycmctc6") @db.Char(15) // Assuming 'Handläggare' translates to 'managerContactId'
  supplierContactId String? @map("keycmctc7") @db.Char(15) // Assuming 'Leverantör' translates to 'supplierContactId'
  resourceGroupId String? @map("keycmrgr") @db.Char(15) // Assuming 'Resursgrupp' translates to 'resourceGroupId'
  accessId String? @map("keyaotlt") @db.Char(15) // Assuming 'Tillträde' translates to 'accessId'
  waitingForId String? @map("keyaovrp") @db.Char(15) // Assuming 'Väntar på' translates to 'waitingForId'
  priorityId String? @map("keyaopri") @db.Char(15) // Assuming 'Prioritet' translates to 'priorityId'
  module2Id String? @map("keysymdl2") @db.Char(15) // TODO: Verify purpose and relation for 'keysymdl2'
  sprintId String? @map("keyaospt") @db.Char(15) // Assuming 'Sprint' translates to 'sprintId'
  plannedDeliveryDateId String? @map("keyaospt2") @db.Char(15) // Assuming 'Planned delivery date' translates to 'plannedDeliveryDateId'
  closureReasonId String? @map("keyaocrd") @db.Char(15) // Assuming 'Avslutningsorsak' translates to 'closureReasonId'
  versionId String? @map("keyaover") @db.Char(15) // Assuming 'Version' translates to 'versionId'
  fixVersionId String? @map("keyaover2") @db.Char(15) // Assuming 'Fixversion' translates to 'fixVersionId'
  desiredVersionId String? @map("keyaover3") @db.Char(15) // Assuming 'Önskad version' translates to 'desiredVersionId'
  teamId String? @map("keyaotea") @db.Char(15) // Assuming 'Team' translates to 'teamId'
  workflowId String? @map("keyaowfd") @db.Char(15) // Assuming 'Workflow' translates to 'workflowId'
  stepInWorkflowId String? @map("keyaowfs") @db.Char(15) // Assuming 'The step' translates to 'stepInWorkflowId'
  blockTimeId String? @map("keycmpbt") @db.Char(15) // Assuming 'Blocktid' translates to 'blockTimeId'
  contractId String? @map("keyhyobj") @db.Char(15) // Assuming 'Kontrakt' translates to 'contractId'
  transactionDeductionTypeId String? @map("keyprdct") @db.Char(15) // Assuming 'Avdragstyp' translates to 'transactionDeductionTypeId'
  mainGroupId String? @map("keyskafa") @db.Char(15) // Assuming 'AFF Huvudgrupp' translates to 'mainGroupId'
  actionGroupLevel1Id String? @map("keyskafb") @db.Char(15) // Assuming 'AFF Åtgärdsgrupp nivå 1' translates to 'actionGroupLevel1Id'
  actionGroupLevel2Id String? @map("keyskafc") @db.Char(15) // Assuming 'AFF Åtgärdsgrupp nivå 2' translates to 'actionGroupLevel2Id'
  measurementTypeId String? @map("keydrmts") @db.Char(15) // Assuming 'Mätslag' translates to 'measurementTypeId'
  code String @unique(map: "akaoupp10") @map("code") @db.VarChar(30)
  description String? @map("caption") @db.VarChar(60) // Assuming 'Benämning' translates to 'description'
  createdDate DateTime @map("time") @db.DateTime // Assuming 'Skapad tidpunkt' translates to 'createdDate'
  createdDateShort DateTime @map("shorttime") @db.DateTime // Assuming 'Skapad datum' translates to 'createdDateShort'
  plannedStartDate DateTime? @map("timestart") @db.DateTime // Assuming 'Starttid' translates to 'plannedStartDate'
  plannedStartDateShort DateTime? @map("shortstart") @db.DateTime // Assuming 'Startdatum' translates to 'plannedStartDateShort'
  signature String? @map("signatur") @db.VarChar(80)
  reference String? @map("referens") @db.VarChar(60)
  noteToReporter String? @map("notinote") @db.VarChar(4000) // Assuming 'Kommentar till anmälare' translates to 'noteToReporter'
  emailToReporter String? @map("notimail") @db.VarChar(60) // Assuming 'E-postadress' translates to 'emailToReporter'
  phoneToReporter String? @map("notiphone") @db.VarChar(60) // Assuming 'Telefon' translates to 'phoneToReporter'
  customField2 String? @map("extrdynfld") @db.VarChar(60) // Assuming 'Fritt fält 2' translates to 'customField2'
  comment String? @map("placnot") @db.VarChar(60)
  carriedOut Int @default(1, map: "DF__aoupp__utfors__1830C3F8") @map("utfors") @db.TinyInt // Assuming 'Utförs' translates to 'carriedOut'
  priorityGroup Int @default(0, map: "DF__aoupp__upppriogr__1924E831") @map("upppriogr") @db.TinyInt // Assuming 'Prioritetsgrupp' translates to 'priorityGroup'
  rank Int @default(0, map: "DF__aoupp__upprank__1A190C6A") @map("upprank") @db.SmallInt // Assuming 'Ranking' translates to 'rank'
  databaseChange Int @default(0, map: "DF__aoupp__dbchange__1B0D30A3") @map("dbchange") @db.TinyInt // Assuming 'Databasförändring' translates to 'databaseChange'
  toBeInvoiced Int @default(0, map: "DF__aoupp__fakt__1C0154DC") @map("fakt") @db.TinyInt // Assuming 'Faktureras' translates to 'toBeInvoiced'
  status Int @default(0, map: "DF__aoupp__status__1CF57915") @map("status") @db.TinyInt
  riskStatus Int @default(0, map: "DF__aoupp__dangstat__1DE99D4E") @map("dangstat") @db.TinyInt // Assuming 'Riskstatus' translates to 'riskStatus'
  sent Int @default(0, map: "DF__aoupp__utskriven__1EDDC187") @map("utskriven") @db.TinyInt // Assuming 'Skickad' translates to 'sent'
  automaticOrderCreated Int @default(0, map: "DF__aoupp__ikcreated__1FD1E5C0") @map("ikcreated") @db.TinyInt // Assuming 'Automatisk beställning skapad' translates to 'automaticOrderCreated'
  deduction Int @default(0, map: "DF__aoupp__rotdeduct__20C609F9") @map("rotdeduct") @db.TinyInt // Assuming 'Avdrag' translates to 'deduction'
  mobilityStatus Int @default(0, map: "DF__aoupp__mobstatus__21BA2E32") @map("mobstatus") @db.TinyInt // Assuming 'Mobilitetsstatus' translates to 'mobilityStatus'
  warranty Int @default(0, map: "DF__aoupp__warranty__22AE526B") @map("warranty") @db.TinyInt
  complaintCount Int @default(0, map: "DF__aoupp__compcnt__23A276A4") @map("compcnt") @db.TinyInt // Assuming 'Klagomål' translates to 'complaintCount'
  policeReport Int @default(0, map: "DF__aoupp__policerep__24969ADD") @map("policerep") @db.TinyInt // Assuming 'Polisanmälan' translates to 'policeReport'
  policeReportNumber String? @map("policeno") @db.VarChar(30) // Assuming 'Polisanmälannummer' translates 'policeReportNumber'
  damageReport Int @default(0, map: "DF__aoupp__damagerep__258ABF16") @map("damagerep") @db.TinyInt // Assuming 'Skadeanmälan' translates to 'damageReport'
  damageReportNumber String? @map("damageno") @db.VarChar(30) // Assuming 'Skadeanmälans IMS-nummer' translates to 'damageReportNumber'
  energyOptimization Int @default(0, map: "DF__aoupp__energopt__267EE34F") @map("energopt") @db.TinyInt // Assuming 'Energioptimering' translates to 'energyOptimization'
  deviationDegree Int @default(0, map: "DF__aoupp__energstat__27730788") @map("energstat") @db.TinyInt // Assuming 'Avvikelsegrad' translates to 'deviationDegree'
  newsletterHelpTextNeeded Int @default(0, map: "DF__aoupp__wrhelptex__28672BC1") @map("wrhelptext") @db.TinyInt // Assuming 'News letter / Helptext is needed' translates to 'newsletterHelpTextNeeded'
  manualTextNeeded Int @default(0, map: "DF__aoupp__wrmanual__295B4FFA") @map("wrmanual") @db.TinyInt // Assuming 'Text i manual behövs' translates to 'manualTextNeeded'
  motivation String? @map("nodebres") @db.VarChar(200) // Assuming 'Motivering' translates to 'motivation'
  plannedExecutionDate DateTime? @map("planexec") @db.DateTime // Assuming 'Planerat utförandedatum' translates to 'plannedExecutionDate'
  noteToPlannedExecutionDate String? @map("planenote") @db.VarChar(Max) // Assuming 'Kommentar till planerat utförandedatum' translates to 'noteToPlannedExecutionDate'
  noteToResource String? @map("execnote") @db.VarChar(Max) // Assuming 'Kommentar till resurs' translates to 'noteToResource'
  dueDate DateTime? @map("timeforf") @db.DateTime // Assuming 'Förfallotid' translates to 'dueDate'
  dueDateShort DateTime? @map("shortforf") @db.DateTime // Assuming 'Förfallodatum' translates to 'dueDateShort'
  finishedDate DateTime? @map("timeend") @db.DateTime // Assuming 'Avslutad tidpunkt' translates to 'finishedDate'
  finishedDateShort DateTime? @map("shortend") @db.DateTime // Assuming 'Avslutad datum' translates to 'finishedDateShort'
  lastChanged DateTime? @map("lastchged") @db.DateTime // Assuming 'Senast ändrad' translates to 'lastChanged'
  type Int? @map("upptype") @db.TinyInt
  workOrderType Int @default(0, map: "DF__aoupp__debtype__2A4F7433") @map("debtype") @db.TinyInt // Assuming 'Typ' translates to 'workOrderType'
  platform Int @default(0, map: "DF__aoupp__platform__2B43986C") @map("platform") @db.TinyInt
  createdFrom Int @default(1, map: "DF__aoupp__source__2C37BCA5") @map("source") @db.TinyInt // Assuming 'Skapad från' translates to 'createdFrom'
  doNotPublishToNotifier Int @default(0, map: "DF__aoupp__hidenotif__2D2BE0DE") @map("hidenotif") @db.TinyInt // Assuming 'Don´t publish to the notifier' translates to 'doNotPublishToNotifier'
  blocked Int @default(0, map: "DF__aoupp__blocked__2E200517") @map("blocked") @db.TinyInt 
  timestamp String @map("timestamp") @db.Char(10) // TODO: Change timestamp later when knowing more about its usage 

  appointment aocap[] // Assuming aocap translates to 'appointment', keep the relation name as is
  reminderTransaction aorml[] // Renamed based on context but keeping the original relation name
  // TODO: Determine what 'aosta' represents and consider renaming
  interestedParty aoufr[] // Assuming 'aoufr' relates to 'interestedParty' based on context
  workOrderCategory aokat? @relation(fields: [workOrderCategoryId], references: [keyaokat], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaokat")
  priority aopri? @relation(fields: [priorityId], references: [keyaopri], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaopri")
  access aotlt? @relation(fields: [accessId], references: [keyaotlt], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaotlt")
  workOrderTypeRelation aotyp? @relation(fields: [workOrderTypeId], references: [keyaotyp], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaotyp")
  company cmcmp? @relation(fields: [companyId], references: [keycmcmp], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmcmp")
  contactReporter cmctc_aoupp_keycmctcTocmctc cmctc? @relation("aoupp_keycmctcTocmctc", fields: [reporterContactId], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc")
  contactResource cmctc_aoupp_keycmctc2Tocmctc cmctc? @relation("aoupp_keycmctc2Tocmctc", fields: [resourceContactId], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc2")
  contactPayer cmctc_aoupp_keycmctc3Tocmctc cmctc? @relation("aoupp_keycmctc3Tocmctc", fields: [payerContactId], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc3")
  contactCustomer cmctc_aoupp_keycmctc4Tocmctc cmctc? @relation("aoupp_keycmctc4Tocmctc", fields: [customerContactId], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc4")
  contactPerformer cmctc_aoupp_keycmctc5Tocmctc cmctc? @relation("aoupp_keycmctc5Tocmctc", fields: [performerContactId], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc5")
  contactManager cmctc_aoupp_keycmctc6Tocmctc cmctc? @relation("aoupp_keycmctc6Tocmctc", fields: [managerContactId], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc6")
  contactSupplier cmctc_aoupp_keycmctc7Tocmctc cmctc? @relation("aoupp_keycmctc7Tocmctc", fields: [supplierContactId], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc7")
  propertyObject cmobj? @relation(fields: [propertyObjectId], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmobj")
  resourceGroup cmrgr? @relation(fields: [resourceGroupId], references: [keycmrgr], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmrgr")
  measurementType drmts? @relation(fields: [measurementTypeId], references: [keydrmts], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeydrmts")
  contract hyobj? @relation(fields: [contractId], references: [keyhyobj], onUpdate: NoAction, map: "fkaouppkeyhyobj")
  subProject prppr? @relation(fields: [subProjectId], references: [keyprppr], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyprppr")
  project prprj? @relation(fields: [projectId], references: [keyprprj], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyprprj")
  mainGroup skafa? @relation(fields: [mainGroupId], references: [keyskafa], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyskafa")
  actionGroupLevel1 skafb? @relation(fields: [actionGroupLevel1Id], references: [keyskafb], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyskafb")
  actionGroupLevel2 skafc? @relation(fields: [actionGroupLevel2Id], references: [keyskafc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyskafc")
  aoupr aoupr[] // TODO: Determine what 'aoupr' represents and consider renaming

  @@index([workOrderCategoryId], map: "fkaouppaokat")
  @@index([priorityId], map: "fkaouppaopri")
  @@index([accessId], map: "fkaouppaotlt")
  @@index([workOrderTypeId], map: "fkaouppaotyp")
  @@index([fixVersionId], map: "fkaouppaover2")
  @@index([desiredVersionId], map: "fkaouppaover3")
  @@index([companyId], map: "fkaouppcmcmp")
  @@index([reporterContactId], map: "fkaouppcmctc")
  @@index([resourceContactId], map: "fkaouppcmctc2")
  @@index([payerContactId], map: "fkaouppcmctc3")
  @@index([customerContactId], map: "fkaouppcmctc4")
  @@index([performerContactId], map: "fkaouppcmctc5")
  @@index([managerContactId], map: "fkaouppcmctc6")
  @@index([supplierContactId], map: "fkaouppcmctc7")
  @@index([propertyObjectId], map: "fkaouppcmobj")
  @@index([resourceGroupId], map: "fkaouppcmrgr")
  @@index([contractId], map: "fkaoupphyobj")
  @@index([subProjectId], map: "fkaouppprppr")
  @@index([projectId], map: "fkaouppprprj")
  @@index([mainGroupId], map: "fkaouppskafa")
  @@index([actionGroupLevel1Id], map: "fkaouppskafb")
  @@index([actionGroupLevel2Id], map: "fkaouppskafc")
  @@index([moduleId], map: "fkaouppsymdl")
  @@index([module2Id], map: "fkaouppsymdl2")
  @@index([description, status, type], map: "inaoupp1")
  @@index([createdDate], map: "inaoupp11")
  @@index([propertyObjectId, type, createdDateShort], map: "inaoupp2")
  @@index([resourceContactId, workOrderId, status, plannedStartDateShort, companyId], map: "inaoupp3")
  @@index([companyId, status], map: "inaoupp4")
  @@index([toBeInvoiced, status, createdDateShort], map: "inaoupp5")
  @@index([propertyObjectId, type, workOrderId, createdDateShort], map: "inaoupp6")
  @@index([createdDateShort, type, signature], map: "inaoupp7")
  @@index([signature, type, status], map: "inaoupp8")
}