generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model aigkk {
  keyaigkk  String @id(map: "pkaigkk") @db.Char(15)
  keyaiobt  String @db.Char(15)
  keyaigkw  String @db.Char(15)
  timestamp String @db.Char(10)
  aigkw     aigkw  @relation(fields: [keyaigkw], references: [keyaigkw], onDelete: Cascade, onUpdate: NoAction, map: "fkaigkkkeyaigkw ")
  aiobt     aiobt  @relation(fields: [keyaiobt], references: [keyaiobt], onDelete: Cascade, onUpdate: NoAction, map: "fkaigkkkeyaiobt ")

  @@index([keyaigkw], map: "fkaigkkaigkw")
  @@index([keyaiobt], map: "fkaigkkaiobt")
}

model aigkw {
  keyaigkw  String  @id(map: "pkaigkw") @db.Char(15)
  caption   String  @unique(map: "akaigkw") @db.VarChar(60)
  timestamp String  @db.Char(10)
  aigkk     aigkk[]
  aiinv     aiinv[]
  aiobt     aiobt[]
}

model aiinv {
  keyaiinv                     String  @id(map: "pkaiinv") @db.Char(15)
  keyaiobt                     String  @db.Char(15)
  keyaigkw                     String? @db.Char(15)
  keyaimat                     String? @db.Char(15)
  keycmobj                     String  @unique(map: "akaiinv") @db.Char(15)
  keycmctc                     String? @db.Char(15)
  keycmctc2                    String? @db.Char(15)
  kword                        String? @db.VarChar(60)
  kdescr                       String? @db.VarChar(2000)
  manudescr                    String? @db.VarChar(2000)
  partcnt                      Int     @default(0, map: "DF__aiinv__partcnt__59438416") @db.SmallInt
  insurno                      String? @db.VarChar(60)
  tmploc                       String? @db.VarChar(2000)
  hasphoto                     Int     @default(0, map: "DF__aiinv__hasphoto__5A37A84F") @db.TinyInt
  deasserted                   Int     @default(0, map: "DF__aiinv__deasserte__5B2BCC88") @db.TinyInt
  ismissing                    Int     @default(0, map: "DF__aiinv__ismissing__5C1FF0C1") @db.TinyInt
  sold                         Int     @default(0, map: "DF__aiinv__sold__5D1414FA") @db.TinyInt
  stolen                       Int     @default(0, map: "DF__aiinv__stolen__5E083933") @db.TinyInt
  outofuse                     Int     @default(0, map: "DF__aiinv__outofuse__5EFC5D6C") @db.TinyInt
  speccond                     Int     @default(0, map: "DF__aiinv__speccond__5FF081A5") @db.TinyInt
  timestamp                    String  @db.Char(10)
  aigkw                        aigkw?  @relation(fields: [keyaigkw], references: [keyaigkw], onUpdate: NoAction, map: "fkaiinvkeyaigkw ")
  aimat                        aimat?  @relation(fields: [keyaimat], references: [keyaimat], onUpdate: NoAction, map: "fkaiinvkeyaimat ")
  aiobt                        aiobt   @relation(fields: [keyaiobt], references: [keyaiobt], onUpdate: NoAction, map: "fkaiinvkeyaiobt ")
  cmctc_aiinv_keycmctcTocmctc  cmctc?  @relation("aiinv_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkaiinvkeycmctc")
  cmctc_aiinv_keycmctc2Tocmctc cmctc?  @relation("aiinv_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaiinvkeycmctc2")
  cmobj                        cmobj   @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkaiinvkeycmobj")

  @@index([keyaigkw], map: "fkaiinvaigkw")
  @@index([keyaimat], map: "fkaiinvaimat")
  @@index([keyaiobt], map: "fkaiinvaiobt")
  @@index([keycmctc], map: "fkaiinvcmctc")
  @@index([keycmctc2], map: "fkaiinvcmctc2")
}

model aimak {
  keyaimak  String @id(map: "pkaimak") @db.Char(15)
  keyaimat  String @db.Char(15)
  keyaiobt  String @db.Char(15)
  timestamp String @db.Char(10)
  aimat     aimat  @relation(fields: [keyaimat], references: [keyaimat], onDelete: Cascade, onUpdate: NoAction, map: "fkaimakkeyaimat ")
  aiobt     aiobt  @relation(fields: [keyaiobt], references: [keyaiobt], onUpdate: NoAction, map: "fkaimakkeyaiobt ")

  @@index([keyaimat], map: "fkaimakaimat")
  @@index([keyaiobt], map: "fkaimakcmobt")
}

model aimat {
  keyaimat  String  @id(map: "pkaimat") @db.Char(15)
  caption   String  @unique(map: "akaimat") @db.VarChar(60)
  timestamp String  @db.Char(10)
  aiinv     aiinv[]
  aimak     aimak[]
  aiobt     aiobt[]
}

model aiobt {
  keyaiobt  String  @id(map: "pkaiobt") @db.Char(15)
  keyaigkw  String? @db.Char(15)
  keyaimat  String? @db.Char(15)
  caption   String  @unique(map: "akaiobt") @db.VarChar(60)
  timestamp String  @db.Char(10)
  aigkk     aigkk[]
  aiinv     aiinv[]
  aimak     aimak[]
  aigkw     aigkw?  @relation(fields: [keyaigkw], references: [keyaigkw], onUpdate: NoAction, map: "fkaiobtkeyaigkw ")
  aimat     aimat?  @relation(fields: [keyaimat], references: [keyaimat], onUpdate: NoAction, map: "fkaiobtkeyaimat ")

  @@index([keyaigkw], map: "fkaiobtaigkw")
  @@index([keyaimat], map: "fkaiobtaimat")
}

model alkat {
  keyalkat  String   @id(map: "pkalkat") @db.Char(15)
  code      String   @db.VarChar(30)
  caption   String   @db.VarChar(30)
  taxprcnt  Decimal? @db.Decimal(15, 10)
  taxcalc   Int      @default(0, map: "DF__alkat__taxcalc__6DAB1881") @db.TinyInt
  incsum    Int      @default(0, map: "DF__alkat__incsum__6E9F3CBA") @db.TinyInt
  timestamp String   @db.Char(10)
  alobj     alobj[]
}

model alkop {
  keyalkop  String  @id(map: "PK__alkop__69C6B1F5") @db.Char(15)
  keyalobj  String  @db.Char(15)
  keyalobr  String? @db.Char(15)
  keycmobj  String? @db.Char(15)
  keyrevrr  String? @db.Char(15)
  keyrevrt  String? @db.Char(15)
  type      Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keyalobj], map: "fkalkopalobj")
  @@index([keyalobr], map: "fkalkopalobr")
  @@index([keycmobj], map: "fkalkopcmobj")
  @@index([keyrevrr], map: "fkalkoprevrr")
  @@index([keyrevrt], map: "fkalkoprevrt")
}

model alobj {
  keyalobj   String    @id(map: "pkalobj") @db.Char(15)
  keyalkat   String?   @db.Char(15)
  keyaltyp   String?   @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keycmctc   String?   @db.Char(15)
  type       Int       @db.TinyInt
  code       String    @db.VarChar(30)
  caption    String?   @db.VarChar(40)
  objstatus  Int       @db.TinyInt
  invcode    String?   @db.Char(10)
  histmethod Int       @db.TinyInt
  depperiods Int       @db.SmallInt
  prcnt      Decimal   @default(0, map: "DF__alobj__prcnt__66DD7656") @db.Decimal(13, 10)
  annprcnt   Decimal   @default(0, map: "DF__alobj__annprcnt__67D19A8F") @db.Decimal(13, 10)
  calcmethod Int       @db.TinyInt
  backlog    Int?
  corrmethod Int       @db.TinyInt
  capcmethod Int       @db.TinyInt
  closed     Int       @db.TinyInt
  sold       Int       @db.TinyInt
  theft      Int       @default(0, map: "DF__alobj__theft__68C5BEC8") @db.TinyInt
  discarded  Int       @db.TinyInt
  changedate DateTime? @db.DateTime
  guarantyto DateTime? @db.DateTime
  servsettlm String?   @db.VarChar(30)
  theftid    String?   @db.VarChar(30)
  barcode    String?   @db.VarChar(30)
  extrainfo  String?   @db.VarChar(150)
  extrainfo2 String?   @db.VarChar(150)
  altdepper  Int?      @db.SmallInt
  altchanged DateTime? @db.DateTime
  nocalcdepr Int       @default(0, map: "DF__alobj__nocalcdep__69B9E301") @db.TinyInt
  fiscfuldep Int       @default(0, map: "DF__alobj__fiscfulde__6AAE073A") @db.TinyInt
  fiscclosed Int       @default(0, map: "DF__alobj__fiscclose__6BA22B73") @db.TinyInt
  marketval  Float?    @db.Money
  p1         String    @db.Char(10)
  p2         String    @db.Char(10)
  p3         String    @db.Char(10)
  p4         String    @db.Char(10)
  p5         String    @db.Char(10)
  p6         String    @db.Char(10)
  p7         String    @db.Char(10)
  p8         String    @db.Char(10)
  p9         String    @db.Char(10)
  p10        String    @db.Char(10)
  timestamp  String    @db.Char(10)
  alkat      alkat?    @relation(fields: [keyalkat], references: [keyalkat], onUpdate: NoAction, map: "fkalobjkeyalkat")
  altyp      altyp?    @relation(fields: [keyaltyp], references: [keyaltyp], map: "fkalobjkeyaltyp ")
  cmcmp      cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: Cascade, map: "fkalobjkeycmcmp")
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkalobjkeycmctc")

  @@index([keyalkat], map: "fkalobjalkat")
  @@index([keyaltyp], map: "fkalobjaltyp")
  @@index([keycmcmp], map: "fkalobjcmcmp")
  @@index([keycmctc], map: "fkalobjcmctc")
}

model alobr {
  keyalobr   String  @id(map: "PK__alobr__0C31A3E9") @db.Char(15)
  keyalobj   String  @db.Char(15)
  keyrevrt   String? @db.Char(15)
  year       Int     @db.SmallInt
  period     Int     @db.SmallInt
  buy        Float   @db.Money
  buynotded  Float   @db.Money
  sell       Float   @db.Money
  sellnotded Float   @db.Money
  invest     Float   @default(0, map: "DF__alobr__invest__0D25C822") @db.Money
  appreciate Float   @db.Money
  depreciate Float   @db.Money
  calcdepr   Float   @db.Money
  icalcdepr  Float   @db.Money
  acalcdepr  Float   @db.Money
  interest   Float   @db.Money
  annuity    Float   @db.Money
  extrainfo  String? @db.Char(40)
  zerohist   Int     @default(0, map: "DF__alobr__zerohist__0E19EC5B") @db.TinyInt
  timestamp  String  @db.Char(10)

  @@index([keyalobj], map: "fkalobralobj")
  @@index([keyrevrt], map: "fkalobrrevrt")
}

model alouk {
  keyalouk  String  @id(map: "PK__alouk__463E49ED") @db.Char(15)
  keyalobj  String? @db.Char(15)
  keyalobj2 String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keyalobj], map: "fkaloukalobj")
  @@index([keyalobj2], map: "fkaloukalobj2")
}

model alsce {
  keyalsce  String @id(map: "PK__alsce__6CA31EA0") @db.Char(15)
  code      String @db.Char(3)
  caption   String @db.Char(30)
  timestamp String @db.Char(10)
}

model alsck {
  keyalsck  String @id(map: "PK__alsck__6D9742D9") @db.Char(15)
  keyalsce  String @db.Char(15)
  keyrevrt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keyalsce], map: "fkalsckalsce")
  @@index([keyrevrt], map: "fkalsckrevrt")
}

model altyp {
  keyaltyp  String  @id(map: "PK__altyp__7E8D9008") @db.Char(15)
  caption   String  @db.Char(30)
  repabkod  Int     @default(0, map: "DF__altyp__repabkod__7F81B441") @db.TinyInt
  timestamp String  @db.Char(10)
  alobj     alobj[]
}

model ambas {
  keyambas                     String    @id(map: "pkambas") @db.Char(15)
  keyamvvn                     String    @db.Char(15)
  keycmobj                     String?   @db.Char(15)
  keycmart                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmind                     String?   @db.Char(15)
  keycminv                     String?   @db.Char(15)
  keycminv2                    String?   @db.Char(15)
  keycode                      String?   @db.Char(15)
  inclubas                     Int       @default(1, map: "DF__ambas__inclubas__6BF7312E") @db.TinyInt
  cntrfdate                    DateTime? @db.Date
  cntrtdate                    DateTime? @db.Date
  cntagrdate                   DateTime? @db.Date
  cntrnbr                      String?   @db.VarChar(60)
  cntrname                     String?   @db.VarChar(60)
  cntrconpt                    String?   @db.VarChar(60)
  fdate                        DateTime? @db.Date
  tdate                        DateTime? @db.Date
  hystatus                     Int       @default(0, map: "DF__ambas__hystatus__6CEB5567") @db.TinyInt
  advicetxt                    String?   @db.VarChar(70)
  typecode                     String    @db.VarChar(15)
  typecapt                     String    @db.VarChar(60)
  robjcode                     String    @db.VarChar(30)
  amount                       Float     @default(0, map: "DF__ambas__amount__6DDF79A0") @db.Money
  marketrent                   Float     @default(0, map: "DF__ambas__marketren__6ED39DD9") @db.Money
  orgrent                      Float     @default(0, map: "DF__ambas__orgrent__6FC7C212") @db.Money
  sharearea                    Float     @default(0, map: "DF__ambas__sharearea__70BBE64B") @db.Money
  indexshare                   Float     @default(0, map: "DF__ambas__indexshar__71B00A84") @db.Money
  turnperd                     Float     @default(0, map: "DF__ambas__turnperd__72A42EBD") @db.Money
  turnresul                    Float     @default(0, map: "DF__ambas__turnresul__739852F6") @db.Money
  stponperc                    Float     @default(0, map: "DF__ambas__stponperc__748C772F") @db.Money
  stponestar                   Float     @default(0, map: "DF__ambas__stponesta__75809B68") @db.Money
  stponestp                    Float     @default(0, map: "DF__ambas__stponestp__7674BFA1") @db.Money
  stptwperc                    Float     @default(0, map: "DF__ambas__stptwperc__7768E3DA") @db.Money
  stptwestar                   Float     @default(0, map: "DF__ambas__stptwesta__785D0813") @db.Money
  stptwestp                    Float     @default(0, map: "DF__ambas__stptwestp__79512C4C") @db.Money
  stpthperc                    Float     @default(0, map: "DF__ambas__stpthperc__7A455085") @db.Money
  stpthestar                   Float     @default(0, map: "DF__ambas__stpthesta__7B3974BE") @db.Money
  stpthestp                    Float     @default(0, map: "DF__ambas__stpthestp__7C2D98F7") @db.Money
  stpfoperc                    Float     @default(0, map: "DF__ambas__stpfoperc__7D21BD30") @db.Money
  stpfoestar                   Float     @default(0, map: "DF__ambas__stpfoesta__7E15E169") @db.Money
  stpfoestp                    Float     @default(0, map: "DF__ambas__stpfoestp__7F0A05A2") @db.Money
  stpfvperc                    Float     @default(0, map: "DF__ambas__stpfvperc__7FFE29DB") @db.Money
  stpfvestar                   Float     @default(0, map: "DF__ambas__stpfvesta__00F24E14") @db.Money
  stpfvestp                    Float     @default(0, map: "DF__ambas__stpfvestp__01E6724D") @db.Money
  turncrryer                   Float     @default(0, map: "DF__ambas__turncrrye__02DA9686") @db.Money
  turnlstyer                   Float     @default(0, map: "DF__ambas__turnlstye__03CEBABF") @db.Money
  typetext                     String    @db.VarChar(60)
  timestamp                    String    @db.Char(10)
  amvvn                        amvvn     @relation(fields: [keyamvvn], references: [keyamvvn], onDelete: Cascade, onUpdate: NoAction, map: "fkambaskeyamvvn")
  cmart                        cmart?    @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkambaskeycmart")
  cmctc                        cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkambaskeycmctc")
  cmind                        cmind?    @relation(fields: [keycmind], references: [keycmind], onDelete: NoAction, onUpdate: NoAction, map: "fkambaskeycmind ")
  cminv_ambas_keycminvTocminv  cminv?    @relation("ambas_keycminvTocminv", fields: [keycminv], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkambaskeycminv ")
  cminv_ambas_keycminv2Tocminv cminv?    @relation("ambas_keycminv2Tocminv", fields: [keycminv2], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkambaskeycminv2 ")
  cmobj                        cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkambaskeycmobj ")

  @@index([keyamvvn], map: "fkambasamvvn")
  @@index([keycmart], map: "fkambascmart")
  @@index([keycmctc], map: "fkambascmctc")
  @@index([keycmind], map: "fkambascmind")
  @@index([keycminv], map: "fkambascminv")
  @@index([keycminv2], map: "fkambascminv2")
  @@index([keycmobj], map: "fkambascmobj")
}

model ambko {
  keyambko  String @id(map: "pkambko") @db.Char(15)
  keycmobj  String @unique(map: "akambko") @db.Char(15)
  timestamp String @db.Char(10)
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkambkokeycmobj ")
}

model amero {
  keyamero  String @id(map: "pkamero") @db.Char(15)
  keyamlvh  String @db.Char(15)
  caption   String @db.VarChar(60)
  amount    Float  @default(0, map: "DF__amero__amount__0D5824F9") @db.Money
  timestamp String @db.Char(10)
  amlvh     amlvh  @relation(fields: [keyamlvh], references: [keyamlvh], onDelete: Cascade, onUpdate: NoAction, map: "fkaoerokeyamlvh ")

  @@unique([keyamlvh, caption], map: "akamero")
}

model amext {
  keyamext   String  @id(map: "pkamext") @db.Char(15)
  keyamvvn   String  @db.Char(15)
  keycmctc   String  @db.Char(15)
  marketrent Int     @default(0, map: "DF__amext__marketren__1128B5DD")
  opercost   Int     @default(0, map: "DF__amext__opercost__121CDA16")
  adjustment Int     @default(0, map: "DF__amext__adjustmen__1310FE4F")
  marketval  Int     @default(0, map: "DF__amext__marketval__14052288")
  yield      Decimal @default(0, map: "DF__amext__yield__14F946C1") @db.Decimal(5, 2)
  note       String? @db.VarChar(300)
  timestamp  String  @db.Char(10)
  amvvn      amvvn   @relation(fields: [keyamvvn], references: [keyamvvn], onDelete: Cascade, onUpdate: NoAction, map: "fkamextkeyamvvn")
  cmctc      cmctc   @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkamextkeycmctc")

  @@index([keyamvvn], map: "fkamextamvvn")
  @@index([keycmctc], map: "fkamextcmctc")
}

model amlcc {
  keyamlcc  String @id(map: "pkamlcc") @db.Char(15)
  keyamlcp  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  amlcp     amlcp  @relation(fields: [keyamlcp], references: [keyamlcp], onDelete: Cascade, onUpdate: NoAction, map: "fkamlcckeyamlcp ")
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkamlcckeycmobj")

  @@unique([keyamlcp, keycmobj], map: "akamlcc1")
  @@index([keyamlcp], map: "fkamlccamlcp")
  @@index([keycmobj], map: "fkamlcccmobj")
}

model amlcp {
  keyamlcp  String  @id(map: "pkamlcp") @db.Char(15)
  keycmobj  String  @unique(map: "akamlcp1") @db.Char(15)
  timestamp String  @db.Char(10)
  amlcc     amlcc[]
  cmobj     cmobj   @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkamlcpkeycmobj")

  @@index([keycmobj], map: "fkamlcpcmobj")
}

model amlvh {
  keyamlvh   String  @id(map: "pkamlvh") @db.Char(15)
  keycmobj   String? @db.Char(15)
  keyamvat   String? @db.Char(15)
  curryear   Int     @db.SmallInt
  edition    Int     @default(1, map: "DF__amlvh__edition__752B95AD") @db.SmallInt
  lvhstatus  Int     @default(0, map: "DF__amlvh__lvhstatus__761FB9E6") @db.TinyInt
  coowner    Int     @default(0, map: "DF__amlvh__coowner__7713DE1F") @db.TinyInt
  underconst Int     @default(0, map: "DF__amlvh__undercons__78080258") @db.TinyInt
  rentunit   Int     @default(1, map: "DF__amlvh__rentunit__78FC2691") @db.TinyInt
  rfdeliver  Int     @default(1, map: "DF__amlvh__rfdeliver__79F04ACA") @db.TinyInt
  rentunavg  Int     @default(1, map: "DF__amlvh__rentunavg__7AE46F03") @db.TinyInt
  wasrental  Int     @default(1, map: "DF__amlvh__wasrental__7BD8933C") @db.TinyInt
  proptype   Int     @default(1, map: "DF__amlvh__proptype__7CCCB775") @db.TinyInt
  proptypemu Int     @default(1, map: "DF__amlvh__proptypem__7DC0DBAE") @db.TinyInt
  leasedpart Decimal @default(0, map: "DF__amlvh__leasedpar__7EB4FFE7") @db.Decimal(13, 2)
  actgrossin Decimal @default(0, map: "DF__amlvh__actgrossi__7FA92420") @db.Decimal(13, 2)
  cyearleas  Decimal @default(0, map: "DF__amlvh__cyearleas__009D4859") @db.Decimal(13, 2)
  lryearleas Decimal @default(0, map: "DF__amlvh__lryearlea__01916C92") @db.Decimal(13, 2)
  styearleas Decimal @default(0, map: "DF__amlvh__styearlea__028590CB") @db.Decimal(13, 2)
  stleaspart Decimal @default(0, map: "DF__amlvh__stleaspar__0379B504") @db.Decimal(13, 2)
  sttotal    Decimal @default(0, map: "DF__amlvh__sttotal__046DD93D") @db.Decimal(13, 2)
  styearinc  Decimal @default(0, map: "DF__amlvh__styearinc__0561FD76") @db.Decimal(13, 2)
  avgyearlea Decimal @default(0, map: "DF__amlvh__avgyearle__065621AF") @db.Decimal(13, 2)
  avglyearle Decimal @default(0, map: "DF__amlvh__avglyearl__074A45E8") @db.Decimal(13, 2)
  avgtwoyear Decimal @default(0, map: "DF__amlvh__avgtwoyea__083E6A21") @db.Decimal(13, 2)
  avgallyear Decimal @default(0, map: "DF__amlvh__avgallyea__09328E5A") @db.Decimal(13, 2)
  avgleasum  Decimal @default(0, map: "DF__amlvh__avgleasum__0A26B293") @db.Decimal(13, 2)
  cgrosslea  Decimal @default(0, map: "DF__amlvh__cgrosslea__0B1AD6CC") @db.Decimal(13, 2)
  crentvalpt Decimal @default(0, map: "DF__amlvh__crentvalp__0C0EFB05") @db.Decimal(13, 2)
  ccalcfact  Decimal @default(0, map: "DF__amlvh__ccalcfact__0D031F3E") @db.Decimal(13, 2)
  cleaseval  Decimal @default(0, map: "DF__amlvh__cleaseval__0DF74377") @db.Decimal(13, 2)
  notleaprty Int     @default(1, map: "DF__amlvh__notleaprt__0EEB67B0") @db.TinyInt
  notleaarea Decimal @default(0, map: "DF__amlvh__notleaare__0FDF8BE9") @db.Decimal(13, 2)
  notleacren Decimal @default(0, map: "DF__amlvh__notleacre__10D3B022") @db.Decimal(13, 2)
  notlearevp Decimal @default(0, map: "DF__amlvh__notlearev__11C7D45B") @db.Decimal(13, 2)
  notleaclfr Decimal @default(0, map: "DF__amlvh__notleaclf__12BBF894") @db.Decimal(13, 2)
  notleavsum Decimal @default(0, map: "DF__amlvh__notleavsu__13B01CCD") @db.Decimal(13, 2)
  rentvpart  Decimal @default(0.9, map: "DF__amlvh__rentvpart__14A44106") @db.Decimal(8, 2)
  valtimeprc Decimal @default(0, map: "DF__amlvh__valtimepr__1598653F") @db.Decimal(13, 2)
  propready  Decimal @default(100, map: "DF__amlvh__propready__168C8978") @db.Decimal(6, 2)
  propmvalue Decimal @default(0, map: "DF__amlvh__propmvalu__1780ADB1") @db.Decimal(13, 2)
  prctmvalue Decimal @default(0, map: "DF__amlvh__prctmvalu__1874D1EA") @db.Decimal(13, 2)
  durconsum  Decimal @default(0, map: "DF__amlvh__durconsum__1968F623") @db.Decimal(13, 2)
  marketval  Decimal @default(0, map: "DF__amlvh__marketval__1A5D1A5C") @db.Decimal(13, 2)
  finalvl    Decimal @default(0, map: "DF__amlvh__finalvl__1B513E95") @db.Decimal(13, 2)
  finalvlop  Decimal @default(0, map: "DF__amlvh__finalvlop__1C4562CE") @db.Decimal(13, 2)
  finalvlsum Decimal @default(0, map: "DF__amlvh__finalvlsu__1D398707") @db.Decimal(13, 2)
  timestamp  String  @db.Char(10)
  amero      amero[]
  cmobj      cmobj?  @relation(fields: [keycmobj], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkamlvhkeycmobj ")
  amvat      amvat?  @relation(fields: [keyamvat], references: [keyamvat], onDelete: NoAction, onUpdate: NoAction, map: "fkaolvhkeyamvat ")
  amlvr      amlvr[]

  @@index([keyamvat], map: "fkamlvhamvat")
  @@index([keycmobj], map: "fkamlvhcmobj")
}

model amlvr {
  keyamlvr  String @id(map: "pkamlvr") @db.Char(15)
  keyamlvh  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  amlvh     amlvh  @relation(fields: [keyamlvh], references: [keyamlvh], onDelete: Cascade, onUpdate: NoAction, map: "fkamlvrkeyamlvh")
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkamlvrkeycmobj")

  @@index([keyamlvh], map: "fkamlvramlvh")
  @@index([keycmobj], map: "fkamlvrcmobj")
}

model amvar {
  keyamvar   String    @id(map: "pkamvar") @db.Char(15)
  keyamvvn   String    @db.Char(15)
  keycmobj   String?   @db.Char(15)
  keycode    String    @db.Char(15)
  typecode   String    @db.VarChar(15)
  typecapt   String    @db.VarChar(60)
  robjcode   String    @db.VarChar(30)
  incluvar   Int       @default(1, map: "DF__amvar__incluvar__19BDFBDE") @db.TinyInt
  amount     Float     @default(0, map: "DF__amvar__amount__1AB22017") @db.Money
  marketrent Float     @default(0, map: "DF__amvar__marketren__1BA64450") @db.Money
  lstdebdate DateTime? @db.Date
  timestamp  String    @db.Char(10)
  amvvn      amvvn     @relation(fields: [keyamvvn], references: [keyamvvn], onDelete: Cascade, onUpdate: NoAction, map: "fkamvarkeyamvvn")
  cmobj      cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkamvarkeycmobj ")

  @@index([keyamvvn], map: "fkamvaramvvn")
  @@index([keycmobj], map: "fkamvarcmobj")
}

model amvat {
  keyamvat  String  @id(map: "pkamvat") @db.Char(15)
  caption   String  @unique(map: "akamvat1") @db.VarChar(60)
  timestamp String  @db.Char(10)
  amlvh     amlvh[]
  balot     balot[]
}

model amvsg {
  keyamvsg   String  @id(map: "pkamvsg") @db.Char(15)
  keycmvat   String? @db.Char(15)
  curryear   Int     @unique(map: "akamvsg") @db.SmallInt
  calcrent   Decimal @default(0, map: "DF__amvsg__calcrent__7728ECB8") @db.Decimal(13, 2)
  calcfactor Decimal @default(0, map: "DF__amvsg__calcfacto__781D10F1") @db.Decimal(13, 4)
  prcmarket  Decimal @default(72, map: "DF__amvsg__prcmarket__7911352A") @db.Decimal(8, 2)
  rentvpart  Decimal @default(0.9, map: "DF__amvsg__rentvpart__7A055963") @db.Decimal(8, 2)
  valprcnt   Decimal @default(60, map: "DF__amvsg__valprcnt__7AF97D9C") @db.Decimal(8, 2)
  yield      Decimal @default(4.95, map: "DF__amvsg__yield__7BEDA1D5") @db.Decimal(8, 2)
  sqmrent    Decimal @default(0, map: "DF__amvsg__sqmrent__7CE1C60E") @db.Decimal(10, 4)
  timestamp  String  @db.Char(10)
  cmvat      cmvat?  @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkamvsgkeycmvat ")

  @@index([keycmvat], map: "fkamvsgcmvat")
}

model amvvn {
  keyamvvn   String   @id(map: "pkamvvn") @db.Char(15)
  keycmobj   String   @db.Char(15)
  vvnstatus  Int      @default(0, map: "DF__amvvn__vvnstatus__7E87C9DA") @db.TinyInt
  createdate DateTime @db.Date
  exeval1    String?  @db.VarChar(60)
  exeval1val Decimal  @default(0, map: "DF__amvvn__exeval1va__7F7BEE13") @db.Decimal(13, 2)
  exeval2    String?  @db.VarChar(60)
  exeval2val Decimal  @default(0, map: "DF__amvvn__exeval2va__0070124C") @db.Decimal(13, 2)
  comment    String?  @db.VarChar(Max)
  adjustnote String?  @db.VarChar(200)
  adjrentmin Decimal  @default(0, map: "DF__amvvn__adjrentmi__01643685") @db.Decimal(13, 2)
  adjrentmax Decimal  @default(0, map: "DF__amvvn__adjrentma__02585ABE") @db.Decimal(13, 2)
  minrentnot String?  @db.VarChar(200)
  marketval  Decimal  @default(0, map: "DF__amvvn__marketval__034C7EF7") @db.Decimal(13, 2)
  yield      Decimal  @default(0, map: "DF__amvvn__yield__0440A330") @db.Decimal(13, 2)
  conrentsum Decimal  @default(0, map: "DF__amvvn__conrentsu__0534C769") @db.Decimal(13, 2)
  marrentsum Decimal  @default(0, map: "DF__amvvn__marrentsu__0628EBA2") @db.Decimal(13, 2)
  commerpart Decimal  @default(0, map: "DF__amvvn__commerpar__071D0FDB") @db.Decimal(13, 2)
  businesval Decimal  @default(0, map: "DF__amvvn__businesva__08113414") @db.Decimal(13, 2)
  parkingval Decimal  @default(0, map: "DF__amvvn__parkingva__0905584D") @db.Decimal(13, 2)
  advertval  Decimal  @default(0, map: "DF__amvvn__advertval__09F97C86") @db.Decimal(13, 2)
  opyield    Decimal  @default(0, map: "DF__amvvn__opyield__0AEDA0BF") @db.Decimal(13, 2)
  propertax  Int      @default(0, map: "DF__amvvn__propertax__0BE1C4F8")
  owned      Decimal  @default(0, map: "DF__amvvn__owned__0CD5E931") @db.Decimal(5, 2)
  leasefee   Int      @default(0, map: "DF__amvvn__leasefee__0DCA0D6A")
  rentcosts  Int      @default(0, map: "DF__amvvn__rentcosts__0EBE31A3")
  othercosts Int      @default(0, map: "DF__amvvn__othercost__0FB255DC")
  timestamp  String   @db.Char(10)
  ambas      ambas[]
  amext      amext[]
  amvar      amvar[]
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkamvvnkeycmobj ")
  amyoc      amyoc[]

  @@index([keycmobj], map: "fkamvvncmobj")
}

model amyoc {
  keyamyoc  String  @id(map: "pkamyoc") @db.Char(15)
  keyamvvn  String  @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keycmvat  String  @db.Char(15)
  yield     Decimal @default(0, map: "DF__amyoc__yield__360534D1") @db.Decimal(9, 2)
  opcost    Decimal @default(0, map: "DF__amyoc__opcost__36F9590A") @db.Decimal(9, 2)
  timestamp String  @db.Char(10)
  amvvn     amvvn   @relation(fields: [keyamvvn], references: [keyamvvn], onDelete: Cascade, onUpdate: NoAction, map: "fkamyockeyamvvn")
  cmvat     cmvat   @relation(fields: [keycmvat], references: [keycmvat], onDelete: Cascade, onUpdate: NoAction, map: "fkamyockeycmvat ")

  @@index([keyamvvn], map: "fkamyocamvvn")
  @@index([keycmvat], map: "fkamyoccmvat")
}

model aoacc {
  keyaoacc  String @id(map: "pkaoacc") @db.Char(15)
  keyaotyp  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)
  aotyp     aotyp  @relation(fields: [keyaotyp], references: [keyaotyp], onDelete: Cascade, onUpdate: NoAction, map: "fkaoacckeyaotyp")

  @@unique([keyaotyp, keysygrp], map: "akaoacc")
  @@index([keyaotyp], map: "fkaoaccaotyp")
  @@index([keysygrp], map: "fkaoaccsygrp")
}

model aoatb {
  keyaoatb  String @id(map: "pkaoatb") @db.Char(15)
  keyaobdl  String @db.Char(15)
  keypuatg  String @db.Char(15)
  timestamp String @db.Char(10)
  aobdl     aobdl  @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: Cascade, onUpdate: NoAction, map: "fkaoatbkeyaobdl ")
  puatg     puatg  @relation(fields: [keypuatg], references: [keypuatg], onDelete: Cascade, onUpdate: NoAction, map: "fkaoatbkeypuatg")

  @@unique([keyaobdl, keypuatg], map: "akaoatb1")
  @@index([keyaobdl], map: "fkaoatbaobdl")
  @@index([keypuatg], map: "fkaoatbpuatg")
}

model aoatg {
  keyaoatg  String  @id(map: "pkaoatg") @db.Char(15)
  code      String  @unique(map: "akaoatg1") @db.VarChar(10)
  caption   String? @db.VarChar(70)
  publish   Int     @default(0, map: "DF__aoatg__publish__2179EDD4") @db.TinyInt
  isactive  Int     @default(1, map: "DF__aoatg__isactive__226E120D") @db.TinyInt
  timestamp String  @db.Char(10)
  aokaa     aokaa[]
  aopar     aopar[]
  aorte     aorte[]
  aosta     aosta[]
  aoupr     aoupr[]
}

model aoatr {
  keyaoatr  String @id(map: "pkaoatr") @db.Char(15)
  keyaoupp  String @db.Char(15)
  keyaoupp2 String @db.Char(15)
  relkind   Int    @default(0, map: "DF__aoatr__relkind__2ECACCD0") @db.TinyInt
  timeunit  Int    @default(0, map: "DF__aoatr__timeunit__2FBEF109") @db.SmallInt
  period    Int    @default(0, map: "DF__aoatr__period__30B31542") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keyaoupp], map: "fkaoatraoupp")
  @@index([keyaoupp2], map: "fkaoatraoupp2")
}

model aobde {
  keyaobde  String @id(map: "pkaobde") @db.Char(15)
  keyaobdl  String @db.Char(15)
  keyaodet  String @db.Char(15)
  timestamp String @db.Char(10)
  aobdl     aobdl  @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: Cascade, map: "fkaobdekeyaobdl ")
  aodet     aodet  @relation(fields: [keyaodet], references: [keyaodet], onDelete: Cascade, map: "fkaobdekeyaodet ")

  @@unique([keyaobdl, keyaodet], map: "akaobde1")
  @@index([keyaobdl], map: "fkaobdeaobdl")
  @@index([keyaodet], map: "fkaobdeaodet")
}

model aobdf {
  keyaobdf  String @id(map: "pkaobdf") @db.Char(15)
  keyaobdl  String @db.Char(15)
  keyaofel  String @db.Char(15)
  timestamp String @db.Char(10)
  aobdl     aobdl  @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: Cascade, onUpdate: NoAction, map: "fkaobdfkeyaobdl ")
  aofel     aofel  @relation(fields: [keyaofel], references: [keyaofel], onDelete: Cascade, onUpdate: NoAction, map: "fkaobdfkeyaofel ")

  @@unique([keyaobdl, keyaofel], map: "akaobdf1")
  @@index([keyaobdl], map: "fkaobdfaobdl")
  @@index([keyaofel], map: "fkaobdfaofel")
}

model aobdl {
  keyaobdl  String  @id(map: "pkaobdl") @db.Char(15)
  code      String  @unique(map: "akaobdl1") @db.VarChar(10)
  caption   String? @db.VarChar(70)
  useao     Int     @default(1, map: "DF__aobdl__useao__254A7EB8") @db.TinyInt
  uselb     Int     @default(1, map: "DF__aobdl__uselb__263EA2F1") @db.TinyInt
  publish   Int     @default(0, map: "DF__aobdl__publish__2732C72A") @db.TinyInt
  isactive  Int     @default(1, map: "DF__aobdl__isactive__2826EB63") @db.TinyInt
  timestamp String  @db.Char(10)
  aoatb     aoatb[]
  aobde     aobde[]
  aobdf     aobdf[]
  aobdt     aobdt[]
  aobsb     aobsb[]
  aopar     aopar[]
  aopbd     aopbd[]
  aorte     aorte[]
  aosta     aosta[]
  aoupr     aoupr[]
  bakmp     bakmp[]
  ikktp     ikktp[]
  lbanm     lbanm[]
  lbrtr     lbrtr[]
}

model aobdt {
  keyaobdt  String @id(map: "pkaobdt") @db.Char(15)
  keyaobdl  String @db.Char(15)
  keylbant  String @db.Char(15)
  timestamp String @db.Char(10)
  aobdl     aobdl  @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: Cascade, onUpdate: NoAction, map: "fkaobdtkeyaobdl ")
  lbant     lbant  @relation(fields: [keylbant], references: [keylbant], onDelete: Cascade, onUpdate: NoAction, map: "fkaobdtkeylbant ")

  @@unique([keyaobdl, keylbant], map: "akaobdt1")
  @@index([keyaobdl], map: "fkaobdtaobdl")
  @@index([keylbant], map: "fkaobdtlbant")
}

model aobsb {
  keyaobsb  String @id(map: "pkaobsb") @db.Char(15)
  keyaobdl  String @db.Char(15)
  keyskafb  String @db.Char(15)
  timestamp String @db.Char(10)
  aobdl     aobdl  @relation(fields: [keyaobdl], references: [keyaobdl], onUpdate: NoAction, map: "fkaobsbkeyaobdl ")
  skafb     skafb  @relation(fields: [keyskafb], references: [keyskafb], onUpdate: NoAction, map: "fkaobsbkeyskafb")

  @@unique([keyaobdl, keyskafb], map: "akaobsb1")
  @@index([keyaobdl], map: "fkaobsbaobdl")
  @@index([keyskafb], map: "fkaobsbskafb")
}

model aocap {
  keyaocap  String   @id(map: "pkaocap") @db.Char(15)
  keyaoupp  String   @db.Char(15)
  keycmctc  String?  @db.Char(15)
  keycmrgr  String?  @db.Char(15)
  caphead   String   @db.VarChar(250)
  capnote   String?  @db.VarChar(4000)
  starttime DateTime @db.DateTime
  endtime   DateTime @db.DateTime
  timestamp String   @db.Char(10)
  aoupp     aoupp    @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaocapkeyaoupp")
  cmctc     cmctc?   @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkaocapkeycmctc")
  cmrgr     cmrgr?   @relation(fields: [keycmrgr], references: [keycmrgr], onDelete: Cascade, onUpdate: NoAction, map: "fkaocapkeycmrgr")

  @@index([keyaoupp], map: "fkaocapaoupp")
  @@index([keycmctc], map: "fkaocapcmctc")
  @@index([keycmrgr], map: "fkaocapcmrgr")
}

model aocrd {
  keyaocrd  String  @id(map: "pkaocrd") @db.Char(15)
  keycrumt  String? @db.Char(15)
  code      String  @unique(map: "akaocrd") @db.VarChar(10)
  caption   String  @unique(map: "akaocrd2") @db.VarChar(60)
  timestamp String  @db.Char(10)
  crumt     crumt?  @relation(fields: [keycrumt], references: [keycrumt], onUpdate: NoAction, map: "fkaocrdkeycrumt")
  aoupp     aoupp[]

  @@index([keycrumt], map: "fkaocrdcrumt")
}

model aoctx {
  keyaoctx  String  @id(map: "pkaoctx") @db.Char(15)
  caption   String  @unique(map: "akaoctx1") @db.VarChar(60)
  timestamp String  @db.Char(10)
  aokax     aokax[]
}

model aodef {
  keyaodef  String @id(map: "pkaodef") @db.Char(15)
  keyaodet  String @db.Char(15)
  keyaofel  String @db.Char(15)
  timestamp String @db.Char(10)
  aodet     aodet  @relation(fields: [keyaodet], references: [keyaodet], onDelete: Cascade, onUpdate: NoAction, map: "fkaodefkeyaodet ")
  aofel     aofel  @relation(fields: [keyaofel], references: [keyaofel], onDelete: Cascade, onUpdate: NoAction, map: "fkaodefkeyaofel ")

  @@unique([keyaodet, keyaofel], map: "akaodef")
  @@index([keyaofel], map: "fkaodefaofel")
}

model aodet {
  keyaodet  String  @id(map: "pkaodet") @db.Char(15)
  code      String  @unique(map: "akaodet1") @db.VarChar(10)
  caption   String? @db.VarChar(70)
  useao     Int     @default(1, map: "DF__aodet__useao__2B03580E") @db.TinyInt
  uselb     Int     @default(1, map: "DF__aodet__uselb__2BF77C47") @db.TinyInt
  publish   Int     @default(0, map: "DF__aodet__publish__2CEBA080") @db.TinyInt
  isactive  Int     @default(1, map: "DF__aodet__isactive__2DDFC4B9") @db.TinyInt
  timestamp String  @db.Char(10)
  aobde     aobde[]
  aodef     aodef[]
  aodsc     aodsc[]
  aopar     aopar[]
  aorte     aorte[]
  aosta     aosta[]
  aoupr     aoupr[]
  lbanm     lbanm[]
  lbrtr     lbrtr[]
}

model aodgt {
  keyaodgt  String  @id(map: "pkaodgt") @db.Char(15)
  caption   String  @unique(map: "akaodgt1") @db.VarChar(50)
  descript  String  @db.VarChar(2000)
  timestamp String  @db.Char(10)
  aodra     aodra[]
}

model aodgv {
  keyaodgv  String @id(map: "pkaodgv") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keyaoupp  String @db.Char(15)
  descript  String @db.VarChar(4000)
  dgrstatus Int    @default(0, map: "DF__aodgv__dgrstatus__3557CECE") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keyaodgt], map: "fkaodgvaodgt")
  @@index([keyaoupp], map: "fkaodgvaoupp")
}

model aodld {
  keyaodld  String   @id(map: "pkaodld") @db.Char(15)
  keyaofil  String   @db.Char(15)
  keycmctc  String   @db.Char(15)
  keycmctc2 String   @db.Char(15)
  version   String   @db.VarChar(60)
  dldtime   DateTime @db.DateTime
  timestamp String   @db.Char(10)

  @@index([keyaofil], map: "fkaodldaofil")
  @@index([keycmctc], map: "fkaodldcmctc")
  @@index([keycmctc2], map: "fkaodldcmctc2")
}

model aodra {
  keyaodra  String @id(map: "pkaodra") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybaaot  String @db.Char(15)
  timestamp String @db.Char(10)
  aodgt     aodgt  @relation(fields: [keyaodgt], references: [keyaodgt], onDelete: Cascade, onUpdate: NoAction, map: "fkaodrakeyaodgt ")
  baaot     baaot  @relation(fields: [keybaaot], references: [keybaaot], onDelete: Cascade, onUpdate: NoAction, map: "fkaodrakeybaaot")

  @@unique([keyaodgt, keybaaot], map: "akaodra1")
  @@index([keyaodgt], map: "fkaodraaodgt")
  @@index([keybaaot], map: "fkaodrabaaot")
}

model aodrb {
  keyaodrb  String @id(map: "pkaodrb") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybabyt  String @db.Char(15)
  timestamp String @db.Char(10)
  babyt     babyt  @relation(fields: [keybabyt], references: [keybabyt], onDelete: Cascade, onUpdate: NoAction, map: "fkaodrbkeybabyt")

  @@unique([keyaodgt, keybabyt], map: "akaodrb1")
  @@index([keyaodgt], map: "fkaodrbaodgt")
  @@index([keybabyt], map: "fkaodrbbabyt")
}

model aodrd {
  keyaodrd  String @id(map: "pkaodrd") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybabdt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybabdt], map: "akaodrd1")
  @@index([keyaodgt], map: "fkaodrdaodgt")
  @@index([keybabdt], map: "fkaodrdbabdt")
}

model aodrf {
  keyaodrf  String @id(map: "pkaodrf") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybafet  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybafet], map: "akaodrf1")
  @@index([keyaodgt], map: "fkaodrfaodgt")
  @@index([keybafet], map: "fkaodrfbafet")
}

model aodrh {
  keyaodrh  String @id(map: "pkaodrh") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybahyt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybahyt], map: "akaodrh1")
  @@index([keyaodgt], map: "fkaodrhaodgt")
  @@index([keybahyt], map: "fkaodrhbahyt")
}

model aodrk {
  keyaodrk  String @id(map: "pkaodrk") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybakmt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybakmt], map: "akaodrk1")
  @@index([keyaodgt], map: "fkaodrkaodgt")
  @@index([keybakmt], map: "fkaodrkbakmt")
}

model aodrl {
  keyaodrl  String @id(map: "pkaodrl") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybalgt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybalgt], map: "akaodrl1")
  @@index([keyaodgt], map: "fkaodrlaodgt")
  @@index([keybalgt], map: "fkaodrlbalgt")
}

model aodro {
  keyaodro  String @id(map: "pkaodro") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybalot  String @db.Char(15)
  timestamp String @db.Char(10)
  balot     balot  @relation(fields: [keybalot], references: [keybalot], onDelete: Cascade, onUpdate: NoAction, map: "fkaodrokeybalot")

  @@unique([keyaodgt, keybalot], map: "akaodro1")
  @@index([keyaodgt], map: "fkaodroaodgt")
  @@index([keybalot], map: "fkaodrobalot")
}

model aodrp {
  keyaodrp  String @id(map: "pkaodrp") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybabpt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybabpt], map: "akaodrp1")
  @@index([keyaodgt], map: "fkaodrpaodgt")
  @@index([keybabpt], map: "fkaodrpbabpt")
}

model aodrr {
  keyaodrr  String @id(map: "pkaodrr") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybarut  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybarut], map: "akaodrr1")
  @@index([keyaodgt], map: "fkaodrraodgt")
  @@index([keybarut], map: "fkaodrrbarut")
}

model aodrs {
  keyaodrs  String @id(map: "pkaodrs") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybasyt  String @db.Char(15)
  timestamp String @db.Char(10)
  basyt     basyt  @relation(fields: [keybasyt], references: [keybasyt], onDelete: Cascade, onUpdate: NoAction, map: "fkaodrskeybasyt")

  @@unique([keyaodgt, keybasyt], map: "akaodrs1")
  @@index([keyaodgt], map: "fkaodrsaodgt")
  @@index([keybasyt], map: "fkaodrsbasyt")
}

model aodru {
  keyaodru  String @id(map: "pkaodru") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybauht  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybauht], map: "akaodru1")
  @@index([keyaodgt], map: "fkaodruaodgt")
  @@index([keybauht], map: "fkaodrubauht")
}

model aodry {
  keyaodry  String @id(map: "pkaodry") @db.Char(15)
  keyaodgt  String @db.Char(15)
  keybaytt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaodgt, keybaytt], map: "akaodry1")
  @@index([keyaodgt], map: "fkaodryaodgt")
  @@index([keybaytt], map: "fkaodrybaytt")
}

model aodsc {
  keyaodsc  String @id(map: "pkaodsc") @db.Char(15)
  keyaodet  String @db.Char(15)
  keyskafc  String @db.Char(15)
  timestamp String @db.Char(10)
  aodet     aodet  @relation(fields: [keyaodet], references: [keyaodet], onDelete: Cascade, onUpdate: NoAction, map: "fkaodsckeyaodet ")
  skafc     skafc  @relation(fields: [keyskafc], references: [keyskafc], onDelete: Cascade, onUpdate: NoAction, map: "fkaodsckeyskafc")

  @@unique([keyaodet, keyskafc], map: "akaodsc1")
  @@index([keyaodet], map: "fkaodscaodet")
  @@index([keyskafc], map: "fkaodscskafc")
}

model aoedo {
  keyaoedo  String    @id(map: "pkaoedo") @db.Char(15)
  keyaoupp  String?   @db.Char(15)
  keycmctc  String?   @db.Char(15)
  occurtime DateTime? @db.DateTime
  errordoc  String    @db.Xml
  timestamp String    @db.Char(10)
  aoupp     aoupp?    @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaoedokeyaoupp")
  cmctc     cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkaoedokeycmctc")

  @@index([keyaoupp], map: "fkaoedoaoupp")
  @@index([keycmctc], map: "fkaoedocmctc")
}

model aofel {
  keyaofel  String  @id(map: "pkaofel") @db.Char(15)
  code      String  @unique(map: "akaofel1") @db.VarChar(10)
  caption   String? @db.VarChar(70)
  publish   Int     @default(0, map: "DF__aofel__publish__30BC3164") @db.TinyInt
  isactive  Int     @default(1, map: "DF__aofel__isactive__31B0559D") @db.TinyInt
  timestamp String  @db.Char(10)
  aobdf     aobdf[]
  aodef     aodef[]
  aofsc     aofsc[]
  aopar     aopar[]
  aorte     aorte[]
  aosta     aosta[]
  aoupr     aoupr[]
}

model aofgc {
  keyaofgc  String @id(map: "pkaofgc") @db.Char(15)
  keyaofgr  String @db.Char(15)
  keysylng  String @db.Char(15)
  caption   String @db.VarChar(60)
  descr     String @db.VarChar(1500)
  timestamp String @db.Char(10)

  @@unique([keyaofgr, keysylng], map: "akaofgc1")
}

model aofgf {
  keyaofgf  String @id(map: "pkaofgf") @db.Char(15)
  keyaofgr  String @db.Char(15)
  filekind  Int    @default(0, map: "DF__aofgf__filekind__1D3B2AAC") @db.TinyInt
  sortorder Int    @default(0, map: "DF__aofgf__sortorder__1E2F4EE5") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keyaofgr], map: "fkaofgfaofgr")
}

model aofgr {
  keyaofgr  String  @id(map: "pkaofgr") @db.Char(15)
  keyaover  String  @db.Char(15)
  keysylmr  String? @db.Char(15)
  sortorder Int     @default(0, map: "DF__aofgr__sortorder__210BBB90") @db.TinyInt
  timestamp String  @db.Char(10)
  aofil     aofil[]

  @@index([keyaover], map: "fkaofgraover")
  @@index([keysylmr], map: "fkaofgrsylmr")
}

model aofic {
  keyaofic  String  @id(map: "pkaofic") @db.Char(15)
  keyaofil  String  @db.Char(15)
  keysylng  String  @db.Char(15)
  caption   String  @db.VarChar(60)
  note      String? @db.VarChar(1000)
  timestamp String  @db.Char(10)

  @@unique([keyaofil, keysylng], map: "akaofic1")
  @@index([keyaofil], map: "fkaoficaofil")
  @@index([keysylng], map: "fkaoficsylng")
}

model aofid {
  keyaofid  String  @id(map: "pkaofid") @db.Char(15)
  keyaofil  String  @db.Char(15)
  keycmctc  String  @db.Char(15)
  dedukind  Int     @default(0, map: "DF__aofid__dedukind__6F2AE4F5") @db.TinyInt
  reason    String? @db.VarChar(100)
  timestamp String  @db.Char(10)

  @@index([keyaofil], map: "fkaofidaofil")
  @@index([keycmctc], map: "fkaofidcmctc")
}

model aofil {
  keyaofil  String    @id(map: "pkaofil") @db.Char(15)
  keyaofgr  String    @db.Char(15)
  keyaover  String    @db.Char(15)
  keysylmr  String    @db.Char(15)
  keysylng  String?   @db.Char(15)
  keycmctc  String?   @db.Char(15)
  filepath  String    @db.VarChar(500)
  pubpath   String    @db.VarChar(500)
  buildtime DateTime  @db.DateTime
  pubtime   DateTime? @db.DateTime
  versionno String    @db.VarChar(30)
  published Int       @default(0, map: "DF__aofil__published__73679D1F") @db.TinyInt
  hasdeduct Int       @default(0, map: "DF__aofil__hasdeduct__745BC158") @db.TinyInt
  timestamp String    @db.Char(10)
  aofgr     aofgr     @relation(fields: [keyaofgr], references: [keyaofgr], onDelete: Cascade, onUpdate: NoAction, map: "fkaofilkeyaofgr ")
  aover     aover     @relation(fields: [keyaover], references: [keyaover], onDelete: Cascade, onUpdate: NoAction, map: "fkaofilkeyaover ")
  cmctc     cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkaofilkeycmctc")

  @@index([keyaofgr], map: "fkaofilaofgr")
  @@index([keyaover], map: "fkaofilaover")
  @@index([keycmctc], map: "fkaofilcmctc")
  @@index([keysylmr], map: "fkaofilsylmr")
  @@index([keysylng], map: "fkaofilsylng")
}

model aofsc {
  keyaofsc  String @id(map: "pkaofsc") @db.Char(15)
  keyaofel  String @db.Char(15)
  keyskafc  String @db.Char(15)
  timestamp String @db.Char(10)
  aofel     aofel  @relation(fields: [keyaofel], references: [keyaofel], onDelete: Cascade, onUpdate: NoAction, map: "fkaofsckeyaofel ")
  skafc     skafc  @relation(fields: [keyskafc], references: [keyskafc], onDelete: Cascade, onUpdate: NoAction, map: "fkaofsckeyskafc")

  @@unique([keyaofel, keyskafc], map: "akaofsc1")
  @@index([keyaofel], map: "fkaofscaofel")
  @@index([keyskafc], map: "fkaofscskafc")
}

model aohfc {
  keyaohfc  String @id(map: "pkaohfc") @db.Char(15)
  keyaohfx  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)
  aohfx     aohfx  @relation(fields: [keyaohfx], references: [keyaohfx], onDelete: Cascade, onUpdate: NoAction, map: "fkaohfckeyaohfx")
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkaohfckeycmctc")

  @@unique([keyaohfx, keycmctc], map: "akaohfc1")
  @@index([keyaohfx], map: "fkaohfcaohfx")
  @@index([keycmctc], map: "fkaohfccmctc")
}

model aohfm {
  keyaohfm  String @id(map: "pkaohfm") @db.Char(15)
  keyaohfx  String @db.Char(15)
  keysymdl  String @db.Char(15)
  timestamp String @db.Char(10)
  aohfx     aohfx  @relation(fields: [keyaohfx], references: [keyaohfx], onDelete: Cascade, onUpdate: NoAction, map: "fkaohfmkeyaohfx")

  @@unique([keyaohfx, keysymdl], map: "akaohfm1")
  @@index([keyaohfx], map: "fkaohfmaohfx")
  @@index([keysymdl], map: "fkaohfmsymdl")
}

model aohfv {
  keyaohfv  String @id(map: "pkaohfv") @db.Char(15)
  keyaohfx  String @db.Char(15)
  keyaover  String @db.Char(15)
  timestamp String @db.Char(10)
  aohfx     aohfx  @relation(fields: [keyaohfx], references: [keyaohfx], onDelete: Cascade, onUpdate: NoAction, map: "fkaohfvkeyaohfx")

  @@unique([keyaohfx, keyaover], map: "akaohfv1")
  @@index([keyaohfx], map: "fkaohfvaohfx")
  @@index([keyaover], map: "fkaohfvaover")
}

model aohfx {
  keyaohfx  String   @id(map: "pkaohfx") @db.Char(15)
  keyaoupp  String   @db.Char(15)
  fixdate   DateTime @db.DateTime
  swenote   String   @db.VarChar(Max)
  engnote   String   @db.VarChar(Max)
  custspec  Int      @default(0, map: "DF__aohfx__custspec__78773656") @db.TinyInt
  timestamp String   @db.Char(10)
  aohfc     aohfc[]
  aohfm     aohfm[]
  aohfv     aohfv[]
  aoupp     aoupp    @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaohfxkeyaoupp")

  @@index([keyaoupp], map: "fkaohfxaoupp")
}

model aoint {
  keyaoint  String @id(map: "pkaoint") @db.Char(15)
  keyaoupp  String @db.Char(15)
  timestamp String @db.Char(10)
  aoupp     aoupp  @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaointkeyaoupp")

  @@index([keyaoupp], map: "fkaointaoupp")
}

model aoitt {
  keyaoitt  String @id(map: "pkaoitt") @db.Char(15)
  invtext   String @db.VarChar(350)
  timestamp String @db.Char(10)
}

model aokaa {
  keyaokaa  String @id(map: "pkaokaa") @db.Char(15)
  keyaokat  String @db.Char(15)
  keyaoatg  String @db.Char(15)
  timestamp String @db.Char(10)
  aoatg     aoatg  @relation(fields: [keyaoatg], references: [keyaoatg], onDelete: Cascade, onUpdate: NoAction, map: "fkaokaakeyaoatg ")
  aokat     aokat  @relation(fields: [keyaokat], references: [keyaokat], onDelete: Cascade, onUpdate: NoAction, map: "fkaokaakeyaokat")

  @@unique([keyaokat, keyaoatg], map: "akaokaa1")
  @@index([keyaoatg], map: "fkaokaaaoatg")
  @@index([keyaokat], map: "fkaokaaaokat")
}

model aokac {
  keyaokac  String @id(map: "pkaokac") @db.Char(15)
  keyaokat  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keycmctc, keyaokat], map: "akaokac1")
  @@index([keyaokat], map: "fkaokacaokat")
  @@index([keycmctc], map: "fkaokaccmctc")
}

model aokag {
  keyaokag  String @id(map: "pkaokag") @db.Char(15)
  keyaokat  String @db.Char(15)
  keycmrgr  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keycmrgr, keyaokat], map: "akaokag1")
  @@index([keyaokat], map: "fkaokagaokat")
  @@index([keycmrgr], map: "fkaokagcmrgr")
}

model aokat {
  keyaokat                     String  @id(map: "pkaokat") @db.Char(15)
  keyaopri                     String? @db.Char(15)
  keyaopah                     String? @db.Char(15)
  keyatway                     String? @db.Char(15)
  keybaret                     String? @db.Char(15)
  keybaret2                    String? @db.Char(15)
  caption                      String  @unique(map: "akaokat") @db.VarChar(30)
  notiadmin                    Int     @default(0, map: "DF__aokat__notiadmin__63BEC505") @db.TinyInt
  forcemdl                     Int     @default(0, map: "DF__aokat__forcemdl__64B2E93E") @db.TinyInt
  forceprg                     Int     @default(0, map: "DF__aokat__forceprg__65A70D77") @db.TinyInt
  devprj                       Int     @default(0, map: "DF__aokat__devprj__669B31B0") @db.TinyInt
  printsort                    Int     @default(0, map: "DF__aokat__printsort__678F55E9") @db.SmallInt
  publish                      Int     @default(0, map: "DF__aokat__publish__68837A22") @db.TinyInt
  isactive                     Int     @default(1, map: "DF__aokat__isactive__69779E5B") @db.TinyInt
  smsalarm                     String? @db.VarChar(60)
  timestamp                    String  @db.Char(10)
  aokaa                        aokaa[]
  aopah                        aopah?  @relation(fields: [keyaopah], references: [keyaopah], onUpdate: NoAction, map: "fkaokatkeyaopah ")
  aopri                        aopri?  @relation(fields: [keyaopri], references: [keyaopri], onUpdate: NoAction, map: "fkaokatkeyaopri ")
  atway                        atway?  @relation(fields: [keyatway], references: [keyatway], onUpdate: NoAction, map: "fkaokatkeyatway")
  baret_aokat_keybaretTobaret  baret?  @relation("aokat_keybaretTobaret", fields: [keybaret], references: [keybaret], onUpdate: NoAction, map: "fkaokatkeybaret")
  baret_aokat_keybaret2Tobaret baret?  @relation("aokat_keybaret2Tobaret", fields: [keybaret2], references: [keybaret], onDelete: NoAction, onUpdate: NoAction, map: "fkaokatkeybaret2")
  aokax                        aokax[]
  aokco                        aokco[]
  aotyc                        aotyc[]
  aoupp                        aoupp[]
  tvpdg                        tvpdg[]

  @@index([keyaopah], map: "fkaokataopah")
  @@index([keyaopri], map: "fkaokataopri")
  @@index([keyatway], map: "fkaokatatway")
  @@index([keybaret], map: "fkaokatbaret")
  @@index([keybaret2], map: "fkaokatbaret2")
}

model aokax {
  keyaokax  String @id(map: "pkaokax") @db.Char(15)
  keyaokat  String @db.Char(15)
  keyaoctx  String @db.Char(15)
  timestamp String @db.Char(10)
  aoctx     aoctx  @relation(fields: [keyaoctx], references: [keyaoctx], onDelete: Cascade, onUpdate: NoAction, map: "fkaokaxkeyaoctx ")
  aokat     aokat  @relation(fields: [keyaokat], references: [keyaokat], onDelete: Cascade, onUpdate: NoAction, map: "fkaokaxkeyaokat")

  @@unique([keyaokat, keyaoctx], map: "akaokax1")
  @@index([keyaoctx], map: "fkaokaxaoctx")
  @@index([keyaokat], map: "fkaokaxaokat")
}

model aokco {
  keyaokco  String @id(map: "pkaokco") @db.Char(15)
  keyaokat  String @db.Char(15)
  keycrumt  String @db.Char(15)
  keydbfld  String @db.Char(15)
  dbfldval  String @db.VarChar(60)
  messkind  Int    @default(1, map: "DF__aokco__messkind__2E36AAC8") @db.TinyInt
  senderadr Int    @default(1, map: "DF__aokco__senderadr__2F2ACF01") @db.TinyInt
  mailadr   String @db.VarChar(200)
  receiver  Int    @default(1, map: "DF__aokco__receiver__301EF33A") @db.TinyInt
  timestamp String @db.Char(10)
  aokat     aokat  @relation(fields: [keyaokat], references: [keyaokat], onDelete: Cascade, onUpdate: NoAction, map: "fkaokcokeyaokat ")
  crumt     crumt  @relation(fields: [keycrumt], references: [keycrumt], onUpdate: NoAction, map: "fkaokcokeycrumt")

  @@index([keyaokat], map: "fkaokcoaokat")
  @@index([keycrumt], map: "fkaokcocrumt")
}

model aoloh {
  keyaoloh  String   @id(map: "pkaoloh") @db.Char(15)
  keysyusr  String   @db.Char(15)
  logdate   DateTime @db.DateTime
  exectime  Decimal  @default(0, map: "DF__aoloh__exectime__5C2F320C") @db.Decimal(8, 3)
  result    Int      @default(0, map: "DF__aoloh__result__5D235645")
  timestamp String   @db.Char(10)
  aolor     aolor[]

  @@index([keysyusr], map: "fkaolohsyusr")
}

model aolor {
  keyaolor  String @id(map: "pkaolor") @db.Char(15)
  keyaoloh  String @db.Char(15)
  slevel    String @db.VarChar(10)
  olevel    Int    @default(0, map: "DF__aolor__olevel__0E1B935B") @db.TinyInt
  spart     Int    @default(0, map: "DF__aolor__spart__0F0FB794") @db.TinyInt
  text      String @db.VarChar(30)
  timestamp String @db.Char(10)
  aoloh     aoloh  @relation(fields: [keyaoloh], references: [keyaoloh], onDelete: Cascade, onUpdate: NoAction, map: "fkaolorkeyaoloh ")

  @@index([keyaoloh], map: "fkaoloraoloh")
}

model aonwc {
  keyaonwc  String @id(map: "pkaonwc") @db.Char(15)
  keyaonwh  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaonwh, keycmctc], map: "akaonwc1")
  @@index([keyaonwh], map: "fkaonwcaonwh")
  @@index([keycmctc], map: "fkaonwccmctc")
}

model aonwh {
  keyaonwh  String   @id(map: "pkaonwh") @db.Char(15)
  keysyusr  String?  @db.Char(15)
  newsdate  DateTime @db.Date
  newstime  DateTime @db.Time
  enddate   DateTime @db.Date
  publish   Int      @default(0, map: "DF__aonwh__publish__3CF8F096") @db.TinyInt
  allcust   Int      @default(1, map: "DF__aonwh__allcust__3DED14CF") @db.TinyInt
  allver    Int      @default(1, map: "DF__aonwh__allver__3EE13908") @db.TinyInt
  alllice   Int      @default(1, map: "DF__aonwh__alllice__3FD55D41") @db.TinyInt
  alllcid   Int      @default(1, map: "DF__aonwh__alllcid__40C9817A") @db.TinyInt
  timestamp String   @db.Char(10)

  @@index([keysyusr], map: "fkaonwhsyusr")
}

model aonwk {
  keyaonwk  String @id(map: "pkaonwk") @db.Char(15)
  keyaonwh  String @db.Char(15)
  lcid      Int    @db.SmallInt
  timestamp String @db.Char(10)

  @@unique([keyaonwh, lcid], map: "akaonwk1")
  @@index([keyaonwh], map: "fkaonwkaonwh")
}

model aonwl {
  keyaonwl  String @id(map: "pkaonwl") @db.Char(15)
  keyaonwh  String @db.Char(15)
  keysylmr  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaonwh, keysylmr], map: "akaonwl1")
  @@index([keyaonwh], map: "fkaonwlaonwh")
  @@index([keysylmr], map: "fkaonwlsylmr")
}

model aonwt {
  keyaonwt  String @id(map: "pkaonwt") @db.Char(15)
  keyaonwh  String @db.Char(15)
  keysylng  String @db.Char(15)
  newshead  String @db.VarChar(150)
  newstext  String @db.VarChar(5000)
  timestamp String @db.Char(10)

  @@index([keyaonwh], map: "fkaonwtaonwh")
  @@index([keysylng], map: "fkaonwtsylng")
}

model aonwv {
  keyaonwv  String @id(map: "pkaonwv") @db.Char(15)
  keyaonwh  String @db.Char(15)
  keyaover  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaonwh, keyaover], map: "akaonwv1")
  @@index([keyaonwh], map: "fkaonwvaonwh")
}

model aoorg {
  keyaoorg  String  @id(map: "pkaoorg") @db.Char(15)
  caption   String  @unique(map: "akaoorg1") @db.VarChar(70)
  timestamp String  @db.Char(10)
  aoupp     aoupp[]
}

model aopah {
  keyaopah  String  @id(map: "pkaopah") @db.Char(15)
  caption   String  @unique(map: "akaopah1") @db.VarChar(60)
  descript  String  @db.VarChar(600)
  timestamp String  @db.Char(10)
  aokat     aokat[]
  aopar     aopar[]
}

model aopar {
  keyaopar  String  @id(map: "pkaopar") @db.Char(15)
  keyaopah  String  @db.Char(15)
  keyaopla  String? @db.Char(15)
  keyaobdl  String? @db.Char(15)
  keyaodet  String? @db.Char(15)
  keyaofel  String? @db.Char(15)
  keyaoatg  String? @db.Char(15)
  keybaret  String? @db.Char(15)
  caption   String  @db.VarChar(250)
  printsort Int     @default(0, map: "DF__aopar__printsort__12E04878") @db.TinyInt
  timestamp String  @db.Char(10)
  aoatg     aoatg?  @relation(fields: [keyaoatg], references: [keyaoatg], onDelete: Cascade, onUpdate: NoAction, map: "fkaoparkeyaoatg ")
  aobdl     aobdl?  @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: Cascade, onUpdate: NoAction, map: "fkaoparkeyaobdl ")
  aodet     aodet?  @relation(fields: [keyaodet], references: [keyaodet], onDelete: Cascade, onUpdate: NoAction, map: "fkaoparkeyaodet ")
  aofel     aofel?  @relation(fields: [keyaofel], references: [keyaofel], onDelete: Cascade, onUpdate: NoAction, map: "fkaoparkeyaofel ")
  aopah     aopah   @relation(fields: [keyaopah], references: [keyaopah], onDelete: Cascade, onUpdate: NoAction, map: "fkaoparkeyaopah ")
  aopla     aopla?  @relation(fields: [keyaopla], references: [keyaopla], onDelete: Cascade, onUpdate: NoAction, map: "fkaoparkeyaopla ")
  baret     baret?  @relation(fields: [keybaret], references: [keybaret], onUpdate: NoAction, map: "fkaoparkeybaret")

  @@index([keyaoatg], map: "fkaoparaoatg")
  @@index([keyaobdl], map: "fkaoparaobdl")
  @@index([keyaodet], map: "fkaoparaodet")
  @@index([keyaofel], map: "fkaoparaofel")
  @@index([keyaopah], map: "fkaoparaopah")
  @@index([keyaopla], map: "fkaoparaopla")
  @@index([keybaret], map: "fkaoparbaret")
}

model aopbd {
  keyaopbd  String @id(map: "pkaopbd") @db.Char(15)
  keyaopla  String @db.Char(15)
  keyaobdl  String @db.Char(15)
  timestamp String @db.Char(10)
  aobdl     aobdl  @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: Cascade, onUpdate: NoAction, map: "fkaopbdkeyaobdl ")
  aopla     aopla  @relation(fields: [keyaopla], references: [keyaopla], onDelete: Cascade, onUpdate: NoAction, map: "fkaopdbkeyaopla ")

  @@unique([keyaobdl, keyaopla], map: "akaopbd1")
  @@index([keyaobdl], map: "fkaopbdaobdl")
  @@index([keyaopla], map: "fkaopbdaopla")
}

model aopby {
  keyaopby  String @id(map: "pkaopby") @db.Char(15)
  keyaopla  String @db.Char(15)
  keybabyt  String @db.Char(15)
  timestamp String @db.Char(10)
  aopla     aopla  @relation(fields: [keyaopla], references: [keyaopla], onDelete: Cascade, onUpdate: NoAction, map: "fkaopbykeyaopla ")
  babyt     babyt  @relation(fields: [keybabyt], references: [keybabyt], onDelete: Cascade, onUpdate: NoAction, map: "fkaopbykeybabyt ")

  @@index([keyaopla], map: "fkaopbyaopla")
  @@index([keybabyt], map: "fkaopbybabyt")
}

model aopla {
  keyaopla  String  @id(map: "pkaopla") @db.Char(15)
  code      String  @unique(map: "akaopla1") @db.VarChar(10)
  caption   String? @db.VarChar(70)
  lbactive  Int     @default(0, map: "DF__aopla__lbactive__348CC248") @db.TinyInt
  lbcontrol Int     @default(1, map: "DF__aopla__lbcontrol__3580E681") @db.TinyInt
  useao     Int     @default(1, map: "DF__aopla__useao__36750ABA") @db.TinyInt
  uselb     Int     @default(1, map: "DF__aopla__uselb__37692EF3") @db.TinyInt
  publish   Int     @default(0, map: "DF__aopla__publish__385D532C") @db.TinyInt
  isactive  Int     @default(1, map: "DF__aopla__isactive__39517765") @db.TinyInt
  timestamp String  @db.Char(10)
  aopar     aopar[]
  aopbd     aopbd[]
  aopby     aopby[]
  aoplo     aoplo[]
  aopsa     aopsa[]
  aorte     aorte[]
  aosta     aosta[]
  aoupr     aoupr[]
  barum     barum[]
  lbanm     lbanm[]
  lbpla     lbpla[]
  lbrtr     lbrtr[]
  puatx     puatx[]
}

model aoplo {
  keyaoplo  String @id(map: "pkaoplo") @db.Char(15)
  keyaopla  String @db.Char(15)
  keycmobt  String @db.Char(15)
  timestamp String @db.Char(10)
  aopla     aopla  @relation(fields: [keyaopla], references: [keyaopla], onDelete: Cascade, onUpdate: NoAction, map: "fkaoplokeyaopla ")
  cmobt     cmobt  @relation(fields: [keycmobt], references: [keycmobt], onDelete: Cascade, onUpdate: NoAction, map: "fkaoplokeycmobt ")

  @@unique([keyaopla, keycmobt], map: "akaoplo")
  @@index([keycmobt], map: "fkaoplocmobt")
}

model aoprc {
  keyaoprc  String @id(map: "pkaoprc") @db.Char(15)
  keyaopri  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keycmctc, keyaopri], map: "akaoprc1")
  @@index([keyaopri], map: "fkaoprcaopri")
  @@index([keycmctc], map: "fkaoprccmctc")
}

model aopri {
  keyaopri  String  @id(map: "pkaopri") @db.Char(15)
  keybaret  String? @db.Char(15)
  code      String  @unique(map: "akaopri") @db.VarChar(30)
  tidmax    Int?
  tidregel  String? @db.Char(1)
  alertsms  Int     @default(0, map: "DF__aopri__alertsms__222D7900") @db.TinyInt
  demreso   Int     @default(0, map: "DF__aopri__demreso__23219D39") @db.TinyInt
  plancolor Int     @default(0, map: "DF__aopri__plancolor__2415C172") @db.TinyInt
  planprio  Int     @default(0, map: "DF__aopri__planprio__2509E5AB") @db.TinyInt
  printsort Int     @default(0, map: "DF__aopri__printsort__25FE09E4") @db.SmallInt
  timestamp String  @db.Char(10)
  aokat     aokat[]
  baret     baret?  @relation(fields: [keybaret], references: [keybaret], onUpdate: NoAction, map: "fkaoprikeybaret")
  aoupp     aoupp[]
  prprj     prprj[]

  @@index([keybaret], map: "fkaopribaret")
}

model aopsa {
  keyaopsa  String @id(map: "pkaopsa") @db.Char(15)
  keyaopla  String @db.Char(15)
  keyskafa  String @db.Char(15)
  timestamp String @db.Char(10)
  aopla     aopla  @relation(fields: [keyaopla], references: [keyaopla], onDelete: Cascade, onUpdate: NoAction, map: "fkaopsakeyaopla ")
  skafa     skafa  @relation(fields: [keyskafa], references: [keyskafa], onDelete: Cascade, onUpdate: NoAction, map: "fkaopsakeyskafa")

  @@unique([keyaopla, keyskafa], map: "akaopsa1")
  @@index([keyaopla], map: "fkaopsaaopla")
  @@index([keyskafa], map: "fkaopsaskafa")
}

model aorel {
  keyaorel  String @id(map: "PK__aorel__57F2E5D4") @db.Char(15)
  keyaoupp  String @db.Char(15)
  keyaoupp2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaoupp, keyaoupp2], map: "akaorel1")
  @@index([keyaoupp], map: "fkaorelaoupp")
  @@index([keyaoupp2], map: "fkaorelaoupp2")
}

model aorml {
  keyaorml                     String   @id(map: "pkaorml") @db.Char(15)
  keyaoupp                     String   @db.Char(15)
  keysyusr                     String?  @db.Char(15)
  keycmrgr                     String?  @db.Char(15)
  keycmctc                     String?  @db.Char(15)
  keycmctc6                    String?  @db.Char(15)
  sendtime                     DateTime @db.DateTime
  uppstatus                    Int      @default(0, map: "DF__aorml__uppstatus__2164DF3B") @db.TinyInt
  msgtype                      Int      @default(0, map: "DF__aorml__msgtype__22590374") @db.TinyInt
  timestamp                    String   @db.Char(10)
  aoupp                        aoupp    @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaormlkeyaoupp")
  cmctc_aorml_keycmctcTocmctc  cmctc?   @relation("aorml_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkaormlkeycmctc")
  cmctc_aorml_keycmctc6Tocmctc cmctc?   @relation("aorml_keycmctc6Tocmctc", fields: [keycmctc6], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaormlkeycmctc6")
  cmrgr                        cmrgr?   @relation(fields: [keycmrgr], references: [keycmrgr], onDelete: Cascade, onUpdate: NoAction, map: "fkaormlkeycmrgr")

  @@index([keyaoupp], map: "fkaormlaoupp")
  @@index([keycmctc], map: "fkaormlcmctc")
  @@index([keycmctc6], map: "fkaormlcmctc6")
  @@index([keycmrgr], map: "fkaormlcmrgr")
  @@index([keysyusr], map: "fkaormlsyusr")
}

model aornt {
  keyaornt  String @id(map: "pkaornt") @db.Char(15)
  caption   String @unique(map: "akaornt") @db.VarChar(60)
  descript  String @db.VarChar(600)
  swetext   String @db.VarChar(5000)
  engtext   String @db.VarChar(5000)
  isdefault Int    @default(0, map: "DF__aornt__isdefault__2F184020") @db.TinyInt
  timestamp String @db.Char(10)
}

model aorte {
  keyaorte   String  @id(map: "pkaorte") @db.Char(15)
  keyaopla   String? @db.Char(15)
  keyaobdl   String? @db.Char(15)
  keyaodet   String? @db.Char(15)
  keyaofel   String? @db.Char(15)
  keyaoatg   String? @db.Char(15)
  keybaret   String? @db.Char(15)
  keycmsfd   String? @db.Char(15)
  esttime    Decimal @default(0, map: "DF__aorte__esttime__118CFCE3") @db.Decimal(10, 4)
  resourneed Int     @default(1, map: "DF__aorte__resournee__1281211C") @db.TinyInt
  portalcode String  @db.VarChar(30)
  portblock  Int     @default(0, map: "DF__aorte__portblock__13754555") @db.TinyInt
  timestamp  String  @db.Char(10)
  aoatg      aoatg?  @relation(fields: [keyaoatg], references: [keyaoatg], onDelete: Cascade, onUpdate: NoAction, map: "fkaortekeyaoatg ")
  aobdl      aobdl?  @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: Cascade, onUpdate: NoAction, map: "fkaortekeyaobdl ")
  aodet      aodet?  @relation(fields: [keyaodet], references: [keyaodet], onDelete: Cascade, onUpdate: NoAction, map: "fkaortekeyaodet ")
  aofel      aofel?  @relation(fields: [keyaofel], references: [keyaofel], onDelete: Cascade, onUpdate: NoAction, map: "fkaortekeyaofel ")
  aopla      aopla?  @relation(fields: [keyaopla], references: [keyaopla], onDelete: Cascade, onUpdate: NoAction, map: "fkaortekeyaopla ")
  baret      baret?  @relation(fields: [keybaret], references: [keybaret], onDelete: Cascade, onUpdate: NoAction, map: "fkaortekeybaret")

  @@index([keyaoatg], map: "fkaorteaoatg")
  @@index([keyaobdl], map: "fkaorteaobdl")
  @@index([keyaodet], map: "fkaorteaodet")
  @@index([keyaofel], map: "fkaorteaofel")
  @@index([keyaopla], map: "fkaorteaopla")
  @@index([keybaret], map: "fkaortebaret")
}

model aospt {
  keyaospt                     String    @id(map: "pkaospt") @db.Char(15)
  spnumber                     Int       @unique(map: "akaospt1") @db.SmallInt
  startdate                    DateTime? @db.Date
  enddate                      DateTime? @db.Date
  reldate                      DateTime? @db.Date
  relver1                      String?   @db.VarChar(15)
  relver2                      String?   @db.VarChar(15)
  relver3                      String?   @db.VarChar(15)
  timestamp                    String    @db.Char(10)
  aoupp_aoupp_keyaosptToaospt  aoupp[]   @relation("aoupp_keyaosptToaospt")
  aoupp_aoupp_keyaospt2Toaospt aoupp[]   @relation("aoupp_keyaospt2Toaospt")
}

model aosta {
  keyaosta  String  @id(map: "pkaosta") @db.Char(15)
  keyaoupp  String  @db.Char(15)
  keyaopla  String? @db.Char(15)
  keyaobdl  String? @db.Char(15)
  keyaodet  String? @db.Char(15)
  keyaofel  String? @db.Char(15)
  keyaoatg  String? @db.Char(15)
  timestamp String  @db.Char(10)
  aoatg     aoatg?  @relation(fields: [keyaoatg], references: [keyaoatg], onDelete: NoAction, onUpdate: NoAction, map: "fkaostakeyaoatg ")
  aobdl     aobdl?  @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: NoAction, onUpdate: NoAction, map: "fkaostakeyaobdl ")
  aodet     aodet?  @relation(fields: [keyaodet], references: [keyaodet], onDelete: NoAction, onUpdate: NoAction, map: "fkaostakeyaodet ")
  aofel     aofel?  @relation(fields: [keyaofel], references: [keyaofel], onDelete: NoAction, onUpdate: NoAction, map: "fkaostakeyaofel ")
  aopla     aopla?  @relation(fields: [keyaopla], references: [keyaopla], onDelete: NoAction, onUpdate: NoAction, map: "fkaostakeyaopla ")
  aoupp     aoupp   @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaostakeyaoupp")

  @@index([keyaoatg], map: "fkaostaaoatg")
  @@index([keyaobdl], map: "fkaostaaobdl")
  @@index([keyaodet], map: "fkaostaaodet")
  @@index([keyaofel], map: "fkaostaaofel")
  @@index([keyaopla], map: "fkaostaaopla")
  @@index([keyaoupp], map: "fkaostaaoupp")
}

model aotea {
  keyaotea  String  @id(map: "pkaotea") @db.Char(15)
  caption   String  @unique(map: "akaotea") @db.VarChar(60)
  extid     Int     @default(0, map: "DF__aotea__extid__31F9CC75") @db.TinyInt
  exttext   String? @db.VarChar(60)
  timestamp String  @db.Char(10)
  aoupp     aoupp[]
}

model aotla {
  keyaotla  String @id(map: "pkaotla") @db.Char(15)
  keyaotlt  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)
  aotlt     aotlt  @relation(fields: [keyaotlt], references: [keyaotlt], onDelete: Cascade, onUpdate: NoAction, map: "fkaotlakeyaotlt ")

  @@unique([keyaotlt, keysygrp], map: "akaotla1")
  @@index([keyaotlt], map: "fkaotlaaotlt")
  @@index([keysygrp], map: "fkaotlasygrp")
}

model aotlt {
  keyaotlt  String  @id(map: "pkaotlt") @db.Char(15)
  caption   String  @unique(map: "akaotlt1") @db.VarChar(30)
  publish   Int     @default(0, map: "DF__aotlt__publish__7424A43C") @db.TinyInt
  timestamp String  @db.Char(10)
  aotla     aotla[]
  aoupp     aoupp[]
  lbbes     lbbes[]
}

model aotyc {
  keyaotyc  String @id(map: "pkaotyc") @db.Char(15)
  keyaotyp  String @db.Char(15)
  keyaokat  String @db.Char(15)
  timestamp String @db.Char(10)
  aokat     aokat  @relation(fields: [keyaokat], references: [keyaokat], onDelete: Cascade, onUpdate: NoAction, map: "fkaotyckeyaokat")
  aotyp     aotyp  @relation(fields: [keyaotyp], references: [keyaotyp], onDelete: Cascade, onUpdate: NoAction, map: "fkaotyckeyaotyp")

  @@unique([keyaotyp, keyaokat], map: "akaotyc1")
  @@index([keyaokat], map: "fkaotycaokat")
  @@index([keyaotyp], map: "fkaotycaotyp")
}

model aotyf {
  keyaotyf   String @id(map: "pkaotyf") @db.Char(15)
  keyaotyp   String @db.Char(15)
  keydbfld   String @db.Char(15)
  tyfsetting Int    @default(0, map: "DF__aotyf__tyfsettin__34D63920") @db.TinyInt
  timestamp  String @db.Char(10)

  @@unique([keyaotyp, keydbfld], map: "akaotyf")
  @@index([keyaotyp], map: "fkaotyfaotyp")
}

model aotyp {
  keyaotyp  String  @id(map: "pkaotyp") @db.Char(15)
  keyaowfd  String? @db.Char(15)
  keybaret  String? @db.Char(15)
  caption   String  @unique(map: "akaotyp") @db.VarChar(60)
  incsum    Int     @default(0, map: "DF__aotyp__incsum__31F4ACCB") @db.TinyInt
  autonoti  Int     @default(1, map: "DF__aotyp__autonoti__32E8D104") @db.TinyInt
  printsort Int     @default(0, map: "DF__aotyp__printsort__33DCF53D") @db.SmallInt
  timestamp String  @db.Char(10)
  aoacc     aoacc[]
  aotyc     aotyc[]
  aowfd     aowfd?  @relation(fields: [keyaowfd], references: [keyaowfd], onUpdate: NoAction, map: "fkaotypkeyaowfd ")
  baret     baret?  @relation(fields: [keybaret], references: [keybaret], onUpdate: NoAction, map: "fkaotypkeybaret")
  aoupp     aoupp[]

  @@index([keyaowfd], map: "fkaotypaowfd")
  @@index([keybaret], map: "fkaotypbaret")
}

model aoucc {
  keyaoucc  String @id(map: "pkaoucc") @db.Char(15)
  keycmcuz  String @db.Char(15)
  keyaoupp  String @db.Char(15)
  timestamp String @db.Char(10)
  aoupp     aoupp  @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaoucckeyaoupp")

  @@unique([keycmcuz, keyaoupp], map: "akaoucc1")
}

model aoudl {
  keyaoudl  String   @id(map: "pkaoudl") @db.Char(15)
  keyaoupp  String   @db.Char(15)
  logmess   String   @db.VarChar(Max)
  lognode   String   @db.VarChar(50)
  logsource Int      @default(0, map: "DF__aoudl__logsource__3606D876") @db.TinyInt
  publish   Int      @default(0, map: "DF__aoudl__publish__36FAFCAF") @db.TinyInt
  logdate   DateTime @db.Date
  logtime   DateTime @db.Time
  timestamp String   @db.Char(10)

  @@index([keyaoupp], map: "fkaoudlaoupp")
}

model aoufr {
  keyaoufr  String @id(map: "pkaoufr") @db.Char(15)
  keyaoupp  String @db.Char(15)
  keycmctc  String @db.Char(15)
  notkind   Int    @default(0, map: "DF__aoufr__notkind__65B89C46") @db.TinyInt
  timestamp String @db.Char(10)
  aoupp     aoupp  @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaoufrkeyaoupp")
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkaoufrkeycmctc")

  @@index([keyaoupp], map: "fkaoufraoupp")
  @@index([keycmctc], map: "fkaoufrcmctc")
}

model aoupd {
  keyaoupd  String @id(map: "pkaoupd") @db.Char(15)
  updheader String @unique(map: "akaoupd") @db.VarChar(60)
  upddescr  String @db.VarChar(4000)
  timestamp String @db.Char(10)
}

model aoupp {
  keyaoupp                     String    @id(map: "pkaoupp") @db.Char(15)
  keysymdl                     String    @db.Char(15)
  keyaokat                     String?   @db.Char(15)
  keyaoorg                     String?   @db.Char(15)
  keyaotyp                     String?   @db.Char(15)
  keyprprj                     String?   @db.Char(15)
  keyprppr                     String?   @db.Char(15)
  keycmobj                     String?   @db.Char(15)
  keycmcmp                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmctc3                    String?   @db.Char(15)
  keycmctc4                    String?   @db.Char(15)
  keycmctc5                    String?   @db.Char(15)
  keycmctc6                    String?   @db.Char(15)
  keycmctc7                    String?   @db.Char(15)
  keycmrgr                     String?   @db.Char(15)
  keyaotlt                     String?   @db.Char(15)
  keyaovrp                     String?   @db.Char(15)
  keyaopri                     String?   @db.Char(15)
  keysymdl2                    String?   @db.Char(15)
  keyaospt                     String?   @db.Char(15)
  keyaospt2                    String?   @db.Char(15)
  keyaocrd                     String?   @db.Char(15)
  keyaover                     String?   @db.Char(15)
  keyaover2                    String?   @db.Char(15)
  keyaover3                    String?   @db.Char(15)
  keyaotea                     String?   @db.Char(15)
  keyaowfd                     String?   @db.Char(15)
  keyaowfs                     String?   @db.Char(15)
  keycmpbt                     String?   @db.Char(15)
  keyhyobj                     String?   @db.Char(15)
  keyprdct                     String?   @db.Char(15)
  keyskafa                     String?   @db.Char(15)
  keyskafb                     String?   @db.Char(15)
  keyskafc                     String?   @db.Char(15)
  keydrmts                     String?   @db.Char(15)
  code                         String    @unique(map: "akaoupp10") @db.VarChar(30)
  caption                      String?   @db.VarChar(60)
  time                         DateTime  @db.DateTime
  shorttime                    DateTime  @db.DateTime
  timestart                    DateTime? @db.DateTime
  shortstart                   DateTime? @db.DateTime
  signatur                     String?   @db.VarChar(80)
  referens                     String?   @db.VarChar(60)
  notinote                     String?   @db.VarChar(4000)
  notimail                     String?   @db.VarChar(60)
  notiphone                    String?   @db.VarChar(60)
  extrdynfld                   String?   @db.VarChar(60)
  placnot                      String?   @db.VarChar(60)
  utfors                       Int       @default(1, map: "DF__aoupp__utfors__5143E3FD") @db.TinyInt
  upppriogr                    Int       @default(0, map: "DF__aoupp__upppriogr__52380836") @db.TinyInt
  upprank                      Int       @default(0, map: "DF__aoupp__upprank__532C2C6F") @db.SmallInt
  dbchange                     Int       @default(0, map: "DF__aoupp__dbchange__542050A8") @db.TinyInt
  fakt                         Int       @default(0, map: "DF__aoupp__fakt__551474E1") @db.TinyInt
  status                       Int       @default(0, map: "DF__aoupp__status__5608991A") @db.TinyInt
  dangstat                     Int       @default(0, map: "DF__aoupp__dangstat__56FCBD53") @db.TinyInt
  utskriven                    Int       @default(0, map: "DF__aoupp__utskriven__57F0E18C") @db.TinyInt
  ikcreated                    Int       @default(0, map: "DF__aoupp__ikcreated__58E505C5") @db.TinyInt
  rotdeduct                    Int       @default(0, map: "DF__aoupp__rotdeduct__59D929FE") @db.TinyInt
  mobstatus                    Int       @default(0, map: "DF__aoupp__mobstatus__5ACD4E37") @db.TinyInt
  warranty                     Int       @default(0, map: "DF__aoupp__warranty__5BC17270") @db.TinyInt
  compcnt                      Int       @default(0, map: "DF__aoupp__compcnt__5CB596A9") @db.TinyInt
  policerep                    Int       @default(0, map: "DF__aoupp__policerep__5DA9BAE2") @db.TinyInt
  policeno                     String?   @db.VarChar(30)
  damagerep                    Int       @default(0, map: "DF__aoupp__damagerep__5E9DDF1B") @db.TinyInt
  damageno                     String?   @db.VarChar(30)
  energopt                     Int       @default(0, map: "DF__aoupp__energopt__5F920354") @db.TinyInt
  energstat                    Int       @default(0, map: "DF__aoupp__energstat__6086278D") @db.TinyInt
  wrhelptext                   Int       @default(0, map: "DF__aoupp__wrhelptex__617A4BC6") @db.TinyInt
  wrmanual                     Int       @default(0, map: "DF__aoupp__wrmanual__626E6FFF") @db.TinyInt
  nodebres                     String?   @db.VarChar(200)
  planexec                     DateTime? @db.DateTime
  planenote                    String?   @db.VarChar(Max)
  execnote                     String?   @db.VarChar(Max)
  timeforf                     DateTime? @db.DateTime
  shortforf                    DateTime? @db.DateTime
  timeend                      DateTime? @db.DateTime
  shortend                     DateTime? @db.DateTime
  lastchged                    DateTime? @db.DateTime
  upptype                      Int       @db.TinyInt
  debtype                      Int       @default(0, map: "DF__aoupp__debtype__63629438") @db.TinyInt
  platform                     Int       @default(0, map: "DF__aoupp__platform__6456B871") @db.TinyInt
  source                       Int       @default(1, map: "DF__aoupp__source__654ADCAA") @db.TinyInt
  hidenotif                    Int       @default(0, map: "DF__aoupp__hidenotif__663F00E3") @db.TinyInt
  blocked                      Int       @default(0, map: "DF__aoupp__blocked__6733251C") @db.TinyInt
  timestamp                    String    @db.Char(10)
  aocap                        aocap[]
  aoedo                        aoedo[]
  aohfx                        aohfx[]
  aoint                        aoint[]
  aorml                        aorml[]
  aosta                        aosta[]
  aoucc                        aoucc[]
  aoufr                        aoufr[]
  aocrd                        aocrd?    @relation(fields: [keyaocrd], references: [keyaocrd], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaocrd")
  aokat                        aokat?    @relation(fields: [keyaokat], references: [keyaokat], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaokat")
  aoorg                        aoorg?    @relation(fields: [keyaoorg], references: [keyaoorg], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaoorg")
  aopri                        aopri?    @relation(fields: [keyaopri], references: [keyaopri], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaopri")
  aospt_aoupp_keyaosptToaospt  aospt?    @relation("aoupp_keyaosptToaospt", fields: [keyaospt], references: [keyaospt], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaospt")
  aospt_aoupp_keyaospt2Toaospt aospt?    @relation("aoupp_keyaospt2Toaospt", fields: [keyaospt2], references: [keyaospt], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaospt2")
  aotea                        aotea?    @relation(fields: [keyaotea], references: [keyaotea], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaotea")
  aotlt                        aotlt?    @relation(fields: [keyaotlt], references: [keyaotlt], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaotlt")
  aotyp                        aotyp?    @relation(fields: [keyaotyp], references: [keyaotyp], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaotyp")
  aover_aoupp_keyaoverToaover  aover?    @relation("aoupp_keyaoverToaover", fields: [keyaover], references: [keyaover], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaover")
  aover_aoupp_keyaover2Toaover aover?    @relation("aoupp_keyaover2Toaover", fields: [keyaover2], references: [keyaover], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaover2")
  aover_aoupp_keyaover3Toaover aover?    @relation("aoupp_keyaover3Toaover", fields: [keyaover3], references: [keyaover], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaover3")
  aovrp                        aovrp?    @relation(fields: [keyaovrp], references: [keyaovrp], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaovrp")
  aowfs                        aowfs?    @relation(fields: [keyaowfs], references: [keyaowfs], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyaowfs")
  cmcmp                        cmcmp?    @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmcmp")
  cmctc_aoupp_keycmctcTocmctc  cmctc?    @relation("aoupp_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc")
  cmctc_aoupp_keycmctc2Tocmctc cmctc?    @relation("aoupp_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc2")
  cmctc_aoupp_keycmctc3Tocmctc cmctc?    @relation("aoupp_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc3")
  cmctc_aoupp_keycmctc4Tocmctc cmctc?    @relation("aoupp_keycmctc4Tocmctc", fields: [keycmctc4], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc4")
  cmctc_aoupp_keycmctc5Tocmctc cmctc?    @relation("aoupp_keycmctc5Tocmctc", fields: [keycmctc5], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc5")
  cmctc_aoupp_keycmctc6Tocmctc cmctc?    @relation("aoupp_keycmctc6Tocmctc", fields: [keycmctc6], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc6")
  cmctc_aoupp_keycmctc7Tocmctc cmctc?    @relation("aoupp_keycmctc7Tocmctc", fields: [keycmctc7], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmctc7")
  cmobj                        cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmobj")
  cmpbt                        cmpbt?    @relation(fields: [keycmpbt], references: [keycmpbt], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmpbt")
  cmrgr                        cmrgr?    @relation(fields: [keycmrgr], references: [keycmrgr], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeycmrgr")
  drmts                        drmts?    @relation(fields: [keydrmts], references: [keydrmts], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeydrmts")
  hyobj                        hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkaouppkeyhyobj")
  prdct                        prdct?    @relation(fields: [keyprdct], references: [keyprdct], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyprdct")
  prppr                        prppr?    @relation(fields: [keyprppr], references: [keyprppr], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyprppr")
  prprj                        prprj?    @relation(fields: [keyprprj], references: [keyprprj], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyprprj")
  skafa                        skafa?    @relation(fields: [keyskafa], references: [keyskafa], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyskafa")
  skafb                        skafb?    @relation(fields: [keyskafb], references: [keyskafb], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyskafb")
  skafc                        skafc?    @relation(fields: [keyskafc], references: [keyskafc], onDelete: NoAction, onUpdate: NoAction, map: "fkaouppkeyskafc")
  aoupr                        aoupr[]
  aouro                        aouro[]
  aovte                        aovte[]

  @@index([keyaocrd], map: "fkaouppaocrd")
  @@index([keyaokat], map: "fkaouppaokat")
  @@index([keyaopri], map: "fkaouppaopri")
  @@index([keyaospt], map: "fkaouppaospt")
  @@index([keyaotea], map: "fkaouppaotea")
  @@index([keyaotlt], map: "fkaouppaotlt")
  @@index([keyaotyp], map: "fkaouppaotyp")
  @@index([keyaover], map: "fkaouppaover")
  @@index([keyaover2], map: "fkaouppaover2")
  @@index([keyaover3], map: "fkaouppaover3")
  @@index([keyaovrp], map: "fkaouppaovrp")
  @@index([keyaowfd], map: "fkaouppaowfd")
  @@index([keyaowfs], map: "fkaouppaowfs")
  @@index([keycmcmp], map: "fkaouppcmcmp")
  @@index([keycmctc], map: "fkaouppcmctc")
  @@index([keycmctc2], map: "fkaouppcmctc2")
  @@index([keycmctc3], map: "fkaouppcmctc3")
  @@index([keycmctc4], map: "fkaouppcmctc4")
  @@index([keycmctc5], map: "fkaouppcmctc5")
  @@index([keycmctc6], map: "fkaouppcmctc6")
  @@index([keycmctc7], map: "fkaouppcmctc7")
  @@index([keycmobj], map: "fkaouppcmobj")
  @@index([keycmpbt], map: "fkaouppcmpbt")
  @@index([keycmrgr], map: "fkaouppcmrgr")
  @@index([keyhyobj], map: "fkaoupphyobj")
  @@index([keyprppr], map: "fkaouppprppr")
  @@index([keyprprj], map: "fkaouppprprj")
  @@index([keyskafa], map: "fkaouppskafa")
  @@index([keyskafb], map: "fkaouppskafb")
  @@index([keyskafc], map: "fkaouppskafc")
  @@index([keysymdl], map: "fkaouppsymdl")
  @@index([keysymdl2], map: "fkaouppsymdl2")
  @@index([caption, status, upptype], map: "inaoupp1")
  @@index([time], map: "inaoupp11")
  @@index([keycmobj, upptype, shorttime], map: "inaoupp2")
  @@index([keycmctc2, keyaoupp, status, shortstart, keycmcmp], map: "inaoupp3")
  @@index([keycmcmp, status], map: "inaoupp4")
  @@index([fakt, status, shorttime], map: "inaoupp5")
  @@index([keycmobj, upptype, keyaoupp, shorttime], map: "inaoupp6")
  @@index([shorttime, upptype, signatur], map: "inaoupp7")
  @@index([signatur, upptype, status], map: "inaoupp8")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model aoupp_PA191203_keyaouppkeyaopri {
  keyaoupp String  @db.Char(15)
  keyaopri String? @db.Char(15)

  @@ignore
}

model aoupr {
  keyaoupr  String    @id(map: "pkaoupr") @db.Char(15)
  keyaoupp  String    @db.Char(15)
  keyaopla  String?   @db.Char(15)
  keyaobdl  String?   @db.Char(15)
  keyaodet  String?   @db.Char(15)
  keyaofel  String?   @db.Char(15)
  keyaoatg  String?   @db.Char(15)
  keycode   String?   @db.Char(15)
  keycode2  String?   @db.Char(15)
  caption   String?   @db.VarChar(250)
  devnote   String?   @db.VarChar(1000)
  uprstatus Int       @default(0, map: "DF__aoupr__uprstatus__7016FA7F") @db.TinyInt
  perfdate  DateTime? @db.Date
  debit     Int       @default(0, map: "DF__aoupr__debit__710B1EB8") @db.TinyInt
  printsort Int       @default(0, map: "DF__aoupr__printsort__71FF42F1") @db.TinyInt
  timestamp String    @db.Char(10)
  aoatg     aoatg?    @relation(fields: [keyaoatg], references: [keyaoatg], onDelete: NoAction, onUpdate: NoAction, map: "fkaouprkeyaoatg ")
  aobdl     aobdl?    @relation(fields: [keyaobdl], references: [keyaobdl], onDelete: NoAction, onUpdate: NoAction, map: "fkaouprkeyaobdl ")
  aodet     aodet?    @relation(fields: [keyaodet], references: [keyaodet], onDelete: NoAction, onUpdate: NoAction, map: "fkaouprkeyaodet ")
  aofel     aofel?    @relation(fields: [keyaofel], references: [keyaofel], onDelete: NoAction, onUpdate: NoAction, map: "fkaouprkeyaofel ")
  aopla     aopla?    @relation(fields: [keyaopla], references: [keyaopla], onDelete: NoAction, onUpdate: NoAction, map: "fkaouprkeyaopla ")
  aoupp     aoupp     @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaouprkeyaoupp")
  skaok     skaok[]
  staok     staok[]

  @@index([keyaoatg], map: "fkaoupraoatg")
  @@index([keyaobdl], map: "fkaoupraobdl")
  @@index([keyaodet], map: "fkaoupraodet")
  @@index([keyaofel], map: "fkaoupraofel")
  @@index([keyaopla], map: "fkaoupraopla")
  @@index([keyaoupp], map: "fkaoupraoupp")
  @@index([keycode], map: "fkaouprcode")
}

model aourl {
  keyaourl  String  @id(map: "pkaourl") @db.Char(15)
  caption   String  @unique(map: "akaourl") @db.VarChar(60)
  timestamp String  @db.Char(10)
  aouro     aouro[]
}

model aouro {
  keyaouro  String  @id(map: "pkaouro") @db.Char(15)
  keyaoupp  String  @db.Char(15)
  keyaourl  String  @db.Char(15)
  keycmctc  String? @db.Char(15)
  descript  String  @db.VarChar(500)
  urostatus Int     @default(0, map: "DF__aouro__urostatus__7A9488F2") @db.TinyInt
  sortorder Int     @default(0, map: "DF__aouro__sortorder__7B88AD2B") @db.SmallInt
  timestamp String  @db.Char(10)
  aoupp     aoupp   @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaourokeyaoupp")
  aourl     aourl   @relation(fields: [keyaourl], references: [keyaourl], onDelete: Cascade, onUpdate: NoAction, map: "fkaourokeyaourl ")
  cmctc     cmctc?  @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkaourokeycmctc")

  @@index([keyaoupp], map: "fkaouroaoupp")
  @@index([keyaourl], map: "fkaouroaourl")
  @@index([keycmctc], map: "fkaourocmctc")
}

model aovbc {
  keyaovbc  String @id(map: "pkaovbc") @db.Char(15)
  keyaover  String @db.Char(15)
  frompath  String @db.VarChar(3000)
  topath    String @db.VarChar(3000)
  timestamp String @db.Char(10)
  aover     aover  @relation(fields: [keyaover], references: [keyaover], onDelete: Cascade, onUpdate: NoAction, map: "fkaovbckeyaover")

  @@index([keyaover], map: "fkaovbcaover")
}

model aover {
  keyaover                     String    @id(map: "pkaover") @db.Char(15)
  caption                      String    @unique(map: "akaover1") @db.VarChar(10)
  vertype                      Int       @default(1, map: "DF__aover__vertype__6A7D5163") @db.TinyInt
  status                       Int       @default(1, map: "DF__aover__status__6B71759C") @db.TinyInt
  builddat                     DateTime? @db.DateTime
  releasedat                   DateTime? @db.DateTime
  timestamp                    String    @db.Char(10)
  aofil                        aofil[]
  aoupp_aoupp_keyaoverToaover  aoupp[]   @relation("aoupp_keyaoverToaover")
  aoupp_aoupp_keyaover2Toaover aoupp[]   @relation("aoupp_keyaover2Toaover")
  aoupp_aoupp_keyaover3Toaover aoupp[]   @relation("aoupp_keyaover3Toaover")
  aovbc                        aovbc[]
  aowbc                        aowbc[]
  cmctc_cmctc_keyaoverToaover  cmctc[]   @relation("cmctc_keyaoverToaover")
  cmctc_cmctc_keyaover2Toaover cmctc[]   @relation("cmctc_keyaover2Toaover")
}

model aovrp {
  keyaovrp  String  @id(map: "pkaovrp") @db.Char(15)
  caption   String  @unique(map: "akaovrp1") @db.VarChar(30)
  isalert   Int     @default(0, map: "DF__aovrp__isalert__70A3BED7") @db.TinyInt
  publish   Int     @default(0, map: "DF__aovrp__publish__7197E310") @db.TinyInt
  timestamp String  @db.Char(10)
  aoupp     aoupp[]
}

model aovte {
  keyaovte  String   @id(map: "pkaovte") @db.Char(15)
  keyaoupp  String   @db.Char(15)
  keycmctc  String   @db.Char(15)
  votedate  DateTime @db.DateTime
  votes     Int      @default(1, map: "DF__aovte__votes__295D1946") @db.TinyInt
  timestamp String   @db.Char(10)
  aoupp     aoupp    @relation(fields: [keyaoupp], references: [keyaoupp], onDelete: Cascade, onUpdate: NoAction, map: "fkaovtekeyaoupp")
  cmctc     cmctc    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkaovtekeycmctc")

  @@unique([keyaoupp, keycmctc], map: "akaovte")
  @@index([keyaoupp], map: "fkaovteaoupp")
  @@index([keycmctc], map: "fkaovtecmctc")
}

model aowbc {
  keyaowbc  String @id(map: "pkaowbc") @db.Char(15)
  keyaover  String @db.Char(15)
  keycmctc  String @db.Char(15)
  alwaysinc Int    @default(1, map: "DF__aowbc__alwaysinc__67D75C24") @db.TinyInt
  timestamp String @db.Char(10)
  aover     aover  @relation(fields: [keyaover], references: [keyaover], onDelete: Cascade, onUpdate: NoAction, map: "fkaowbckeyaover")
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkaowbckeycmctc")

  @@unique([keyaover, keycmctc], map: "akaowbc1")
  @@index([keyaover], map: "fkaowbcaover")
  @@index([keycmctc], map: "fkaowbccmctc")
}

model aowbd {
  keyaowbd  String @id(map: "pkaowbd") @db.Char(15)
  keycmctc  String @db.Char(15)
  prodkey   String @db.VarChar(36)
  upgrcode  String @db.VarChar(36)
  fldpath   String @db.VarChar(400)
  descript  String @db.VarChar(400)
  hassaml   Int    @default(0, map: "DF__aowbd__hassaml__04CD0099") @db.TinyInt
  iscr      Int    @default(0, map: "DF__aowbd__iscr__05C124D2") @db.TinyInt
  mkeextra  Int    @default(0, map: "DF__aowbd__mkeextra__06B5490B") @db.TinyInt
  isdev     Int    @default(0, map: "DF__aowbd__isdev__07A96D44") @db.TinyInt
  hascustad Int    @default(1, map: "DF__aowbd__hascustad__089D917D") @db.TinyInt
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkaowbdkeycmctc")

  @@index([keycmctc], map: "fkaowbdcmctc")
}

model aowfa {
  keyaowfa   String @id(map: "pkaowfa") @db.Char(15)
  keyaowfs   String @db.Char(15)
  acttype    Int    @default(0, map: "DF__aowfa__acttype__0CBB47DC") @db.SmallInt
  actsetting String @db.Xml
  timestamp  String @db.Char(10)

  @@index([keyaowfs], map: "fkaowfaaowfs")
}

model aowfc {
  keyaowfc   String  @id(map: "pkaowfc") @db.Char(15)
  keyaowfr   String  @db.Char(15)
  acttype    Int     @default(0, map: "DF__aowfc__acttype__0F97B487") @db.SmallInt
  actsetting String  @db.Xml
  timestamp  String  @db.Char(10)
  aowfu      aowfu[]

  @@index([keyaowfr], map: "fkaowfcaowfr")
}

model aowfd {
  keyaowfd  String  @id(map: "pkaowfd") @db.Char(15)
  caption   String  @unique(map: "akaowfd1") @db.VarChar(60)
  isactive  Int     @default(1, map: "DF__aowfd__isactive__77AFA210") @db.TinyInt
  timestamp String  @db.Char(10)
  aotyp     aotyp[]
}

model aowfr {
  keyaowfr  String @id(map: "pkaowfr") @db.Char(15)
  keyaowfs  String @db.Char(15)
  keyaowfs2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyaowfs, keyaowfs2], map: "akaowfr1")
  @@index([keyaowfs], map: "fkaowfraowfs")
  @@index([keyaowfs2], map: "fkaowfraowfs2")
}

model aowfs {
  keyaowfs  String  @id(map: "pkaowfs") @db.Char(15)
  keyaowfd  String  @db.Char(15)
  descrtext String  @db.VarChar(1500)
  sortorder Int     @default(0, map: "DF__aowfs__sortorder__1738D64F") @db.SmallInt
  isstart   Int     @default(0, map: "DF__aowfs__isstart__182CFA88") @db.TinyInt
  isend     Int     @default(0, map: "DF__aowfs__isend__19211EC1") @db.TinyInt
  timestamp String  @db.Char(10)
  aoupp     aoupp[]

  @@index([keyaowfd], map: "fkaowfsaowfd")
}

model aowfu {
  keyaowfu  String @id(map: "pkaowfu") @db.Char(15)
  keyaowfc  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)
  aowfc     aowfc  @relation(fields: [keyaowfc], references: [keyaowfc], onDelete: Cascade, onUpdate: NoAction, map: "fkaowfukeyaowfc ")

  @@unique([keyaowfc, keysygrp], map: "akaowfu")
}

model atadm {
  keyatadm  String  @id(map: "PK__atadm__4A0EDAD1") @db.Char(15)
  keyattyp  String  @db.Char(15)
  keycmcmp  String? @db.Char(15)
  keycmctc  String  @db.Char(15)
  timestamp String  @db.Char(10)

  @@unique([keyattyp, keycmcmp, keycmctc], map: "akatadm1")
  @@index([keyattyp], map: "fkatadmattyp")
  @@index([keycmcmp], map: "fkatadmcmcmp")
  @@index([keycmctc], map: "fkatadmcmctc")
}

model atati {
  keyatati  String    @id(map: "pkatati") @db.Char(15)
  keycmctc  String    @db.Char(15)
  keyatrol  String    @db.Char(15)
  priority  Int       @default(1, map: "DF__atati__priority__305B9CC6") @db.TinyInt
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  atrol     atrol     @relation(fields: [keyatrol], references: [keyatrol], onDelete: Cascade, onUpdate: NoAction, map: "fkatatikeyatrol")
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkatatikeycmctc")

  @@index([keyatrol], map: "fkatatiatrol")
  @@index([keycmctc], map: "fkataticmctc")
  @@index([keyatrol, priority, keyatati, keycmctc, fdate, tdate], map: "inatati_4CZ0FCC55")
  @@index([keycmctc, keyatati, priority, keyatrol, fdate, tdate], map: "inatati_4CZ0FCC5O")
}

model atatr {
  keyatatr  String    @id(map: "PK__atatr__12748D24") @db.Char(15)
  keycmcmp  String    @db.Char(15)
  keyattyp  String    @db.Char(15)
  keyatwak  String    @db.Char(15)
  keydbtbl  String?   @db.Char(15)
  keycode   String?   @db.Char(15)
  amount    Float?    @db.Money
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  partno    Int?      @db.TinyInt
  fpart     String?   @db.Char(10)
  tpart     String?   @db.Char(10)
  dayno     Int?      @db.TinyInt
  timestamp String    @db.Char(10)

  @@index([keyattyp], map: "fkatatrattyp")
  @@index([keyatwak], map: "fkatatratwak")
  @@index([keycmcmp], map: "fkatatrcmcmp")
  @@index([keycode], map: "fkatatrcode")
  @@index([keydbtbl], map: "fkatatrdbtbl")
}

model atats {
  keyatats   String    @id(map: "pkatats") @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keyattyp   String    @db.Char(15)
  keyatwak   String?   @db.Char(15)
  keyatblt   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keycmctc   String    @db.Char(15)
  keydbtbl   String    @db.Char(15)
  keycode    String    @db.Char(15)
  status     Int       @default(0, map: "DF__atats__status__352051E3") @db.TinyInt
  createtime DateTime  @db.DateTime
  createdate DateTime  @db.DateTime
  atexpdate  DateTime  @db.DateTime
  attime     DateTime? @db.DateTime
  atdate     DateTime? @db.DateTime
  lastrem    DateTime? @db.DateTime
  signature  String    @db.VarChar(80)
  timestamp  String    @db.Char(10)
  atblt      atblt?    @relation(fields: [keyatblt], references: [keyatblt], onUpdate: NoAction, map: "fkatatskeyatblt ")
  attyp      attyp     @relation(fields: [keyattyp], references: [keyattyp], onDelete: Cascade, onUpdate: NoAction, map: "fkatatskeyattyp")
  atwak      atwak?    @relation(fields: [keyatwak], references: [keyatwak], onUpdate: NoAction, map: "fkatatskeyatwak ")
  cmcmp      cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: Cascade, onUpdate: NoAction, map: "fkatatskeycmcmp")
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkatatskeycmctc")

  @@index([keyatblt], map: "fkatatsatblt")
  @@index([keyattyp], map: "fkatatsattyp")
  @@index([keyatwak], map: "fkatatsatwak")
  @@index([keycmcmp], map: "fkatatscmcmp")
  @@index([keycmctc], map: "fkatatscmctc")
  @@index([keycode], map: "fkatatscode")
  @@index([keydbtbl], map: "fkatatsdbtbl")
  @@index([keysyusr], map: "fkatatssyusr")
  @@index([keydbtbl, status], map: "inatats_4CZ0FFHRR")
  @@index([keyatwak, keyatats, status, keycmctc, keyattyp, keycode], map: "inatats_4CZ0FFHSA")
  @@index([status, keyatats, keyattyp, keycode], map: "inatats_4CZ0FFHST")
}

model atblt {
  keyatblt  String  @id(map: "pkatblt") @db.Char(15)
  descrtext String  @db.VarChar(80)
  timestamp String  @db.Char(10)
  atats     atats[]
}

model atrem {
  keyatrem  String   @id(map: "PK__atrem__52A420D2") @db.Char(15)
  keyatats  String   @db.Char(15)
  keycmctc  String   @db.Char(15)
  keycmctc2 String   @db.Char(15)
  remtime   DateTime @db.DateTime
  remdate   DateTime @db.DateTime
  type      Int      @db.TinyInt
  timestamp String   @db.Char(10)

  @@index([keyatats], map: "fkatrematats")
  @@index([keycmctc], map: "fkatremcmctc")
  @@index([keycmctc2], map: "fkatremcmctc2")
}

model atrol {
  keyatrol  String  @id(map: "pkatrol") @db.Char(15)
  code      String  @unique(map: "akatrol1") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  atati     atati[]
}

model attyp {
  keyattyp  String  @id(map: "pkattyp") @db.Char(15)
  keysymdl  String  @db.Char(15)
  code      String  @unique(map: "akattyp1") @db.VarChar(10)
  caption   String? @db.VarChar(60)
  typorder  Int     @default(0, map: "DF__attyp__typorder__34E3A857") @db.TinyInt
  active    Int     @default(0, map: "DF__attyp__active__35D7CC90") @db.TinyInt
  timestamp String  @db.Char(10)
  atats     atats[]

  @@index([keysymdl], map: "fkattypsymdl")
}

model atwak {
  keyatwak  String  @id(map: "PK__atwak__585CFA28") @db.Char(15)
  keyatrol  String  @db.Char(15)
  keyatwat  String  @db.Char(15)
  atno      Int     @db.TinyInt
  timestamp String  @db.Char(10)
  atats     atats[]

  @@unique([keyatwat, keyatrol], map: "akatwak1")
  @@index([keyatrol], map: "fkatwakatrol")
  @@index([keyatwat], map: "fkatwakatwat")
}

model atwat {
  keyatwat  String @id(map: "PK__atwat__5A45429A") @db.Char(15)
  keyatway  String @db.Char(15)
  keyattyp  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keyatway, keyattyp], map: "akatwat1")
  @@index([keyattyp], map: "fkatwatattyp")
  @@index([keyatway], map: "fkatwatatway")
}

model atway {
  keyatway  String  @id(map: "pkatway") @db.Char(15)
  code      String  @unique(map: "akatway1") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  aokat     aokat[]
  cmcmp     cmcmp[]
  cmres     cmres[]
  krfkh     krfkh[]
  prprj     prprj[]
  prtyp     prtyp[]
  rekpl     rekpl[]
  revrt     revrt[]
}

model avark {
  keyavark  String   @id(map: "pkavark") @db.Char(15)
  keyhyobj  String   @db.Char(15)
  keycmart  String   @db.Char(15)
  keycmind  String?  @db.Char(15)
  keycminv  String?  @db.Char(15)
  keycminv2 String?  @db.Char(15)
  keycmvat  String?  @db.Char(15)
  suppartno String?  @db.VarChar(30)
  caption   String?  @db.VarChar(60)
  basprice  Float?   @db.Money
  price     Float    @db.Money
  factor    Decimal? @db.Decimal(5, 1)
  prcntdisc Decimal? @db.Decimal(5, 1)
  timestamp String   @db.Char(10)
  cmart     cmart    @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkavarkkeycmart")
  cmind     cmind?   @relation(fields: [keycmind], references: [keycmind], onDelete: NoAction, onUpdate: NoAction, map: "fkavarkkeycmind ")
  cmvat     cmvat?   @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkavarkkeycmvat ")
  hyobj     hyobj    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkavarkkeyhyobj")

  @@index([keycmart], map: "fkavarkcmart")
  @@index([keycmind], map: "fkavarkcmind")
  @@index([keycminv], map: "fkavarkcminv")
  @@index([keycminv2], map: "fkavarkcminv2")
  @@index([keycmvat], map: "fkavarkcmvat")
  @@index([keyhyobj], map: "fkavarkhyobj")
}

model avfkh {
  keyavfkh   String   @id(map: "pkavfkh") @db.Char(15)
  keyhyobj   String   @db.Char(15)
  keylrfkh   String   @db.Char(15)
  periodfrom DateTime @db.Date
  periodto   DateTime @db.Date
  timestamp  String   @db.Char(10)
  hyobj      hyobj    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkavfkhkeyhyobj")
  lrfkh      lrfkh    @relation(fields: [keylrfkh], references: [keylrfkh], onDelete: Cascade, onUpdate: NoAction, map: "fkavfkhkeylrfkh")

  @@index([periodfrom, periodto], map: "avfkhfdatetdate")
  @@index([keyhyobj], map: "avfkhkeyhyobj")
  @@index([keylrfkh], map: "avfkhkeylrfkh")
}

model avkop {
  keyavkop  String   @id(map: "pkavkop") @db.Char(15)
  keyhyobj  String   @db.Char(15)
  keydbtbl  String   @db.Char(15)
  keysymdl  String?  @db.Char(15)
  keycode   String   @db.Char(15)
  andel     Decimal? @db.Decimal(6, 1)
  amount    Float    @default(0, map: "DF__avkop__amount__2E6E34AA") @db.Money
  timestamp String   @db.Char(10)

  @@index([keycode], map: "fkavkopcode")
  @@index([keydbtbl], map: "fkavkopdbtbl")
  @@index([keyhyobj], map: "fkavkophyobj")
  @@index([keysymdl], map: "fkavkopsymdl")
}

model baacc {
  keybaacc  String    @id(map: "pkbaacc") @db.Char(15)
  keycmobj  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@unique([keycmctc, keycmobj], map: "akbaacc1")
  @@index([keycmctc], map: "fkbaacccmctc")
  @@index([keycmobj], map: "fkbaacccmobj")
}

model baaob {
  keybaaob   String   @id(map: "pkbaaob") @db.Char(15)
  keycmobj   String   @unique(map: "akbaaob1") @db.Char(15)
  keybaaot   String?  @db.Char(15)
  code       String   @db.VarChar(30)
  caption    String?  @db.VarChar(30)
  deletemark Int      @default(0, map: "DF__baaob__deletemar__01418681") @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  baaot      baaot?   @relation(fields: [keybaaot], references: [keybaaot], onUpdate: NoAction, map: "fkbaaobkeybaaot ")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbaaobkeycmobj")

  @@index([keybaaot], map: "fkbaaobbaaot")
  @@index([fdate], map: "inbaaob_1A00UAQF4")
  @@index([tdate], map: "inbaaob_1A00UAQGB")
  @@index([caption], map: "inbaaob_1A00UAQHL")
  @@index([code], map: "inbaaob_1A00UAQIK")
}

model baaot {
  keybaaot  String  @id(map: "pkbaaot") @db.Char(15)
  keypuatt  String? @db.Char(15)
  code      String  @unique(map: "akbaaot") @db.VarChar(15)
  caption   String? @db.VarChar(60)
  issystem  Int     @default(0, map: "DF__baaot__issystem__1D88BF74") @db.TinyInt
  timestamp String  @db.Char(10)
  aodra     aodra[]
  baaob     baaob[]
  puatt     puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbaaotkeypuatt ")

  @@index([keypuatt], map: "fkbaaotpuatt")
}

model baass {
  keybaass  String    @id(map: "pkbaass") @db.Char(15)
  keycmobj  String    @db.Char(15)
  fdate     DateTime? @db.Date
  year      Int       @default(0, map: "DF__baass__year__1661A0EF") @db.SmallInt
  assessval Float     @default(0, map: "DF__baass__assessval__1755C528") @db.Money
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbaasskeycmobj")

  @@index([keycmobj], map: "fkbaasscmobj")
}

model babag {
  keybabag   String    @id(map: "pkbabag") @db.Char(15)
  keycmobj   String    @unique(map: "akbabag") @db.Char(15)
  keybabap   String?   @db.Char(15)
  keybabaw   String?   @db.Char(15)
  keybabar   String?   @db.Char(15)
  keybabau   String?   @db.Char(15)
  keybabao   String?   @db.Char(15)
  keybabay   String?   @db.Char(15)
  keybabai   String?   @db.Char(15)
  objtypcode String    @db.VarChar(10)
  buildid    String    @db.VarChar(20)
  buildyear  Int?      @db.SmallInt
  objsurface Decimal   @db.Decimal(10, 2)
  spacename  String?   @db.VarChar(70)
  extrafld1  String?   @db.VarChar(70)
  extrafld2  String?   @db.VarChar(70)
  extrafld3  String?   @db.VarChar(70)
  extrafld4  String?   @db.VarChar(70)
  extradate1 DateTime? @db.Date
  extradate2 DateTime? @db.Date
  timestamp  String    @db.Char(10)
  babai      babai?    @relation(fields: [keybabai], references: [keybabai], onUpdate: NoAction, map: "fkbabagkeybabai ")
  babao      babao?    @relation(fields: [keybabao], references: [keybabao], onUpdate: NoAction, map: "fkbabagkeybabao ")
  babap      babap?    @relation(fields: [keybabap], references: [keybabap], onUpdate: NoAction, map: "fkbabagkeybabap ")
  babar      babar?    @relation(fields: [keybabar], references: [keybabar], onUpdate: NoAction, map: "fkbabagkeybabar ")
  babau      babau?    @relation(fields: [keybabau], references: [keybabau], onUpdate: NoAction, map: "fkbabagkeybabau ")
  babaw      babaw?    @relation(fields: [keybabaw], references: [keybabaw], onUpdate: NoAction, map: "fkbabagkeybabaw ")
  babay      babay?    @relation(fields: [keybabay], references: [keybabay], onUpdate: NoAction, map: "fkbabagkeybabay ")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkbabagkeycmobj ")

  @@index([keybabai], map: "fkbabagbabai")
  @@index([keybabao], map: "fkbabagbabao")
  @@index([keybabap], map: "fkbabagbabap")
  @@index([keybabar], map: "fkbabagbabar")
  @@index([keybabau], map: "fkbabagbabau")
  @@index([keybabaw], map: "fkbabagbabaw")
  @@index([keybabay], map: "fkbabagbabay")
}

model babai {
  keybabai  String  @id(map: "pkbabai") @db.Char(15)
  code      String  @unique(map: "akbabai") @db.VarChar(15)
  caption   String  @unique(map: "akbabai2") @db.VarChar(70)
  timestamp String  @db.Char(10)
  babag     babag[]
}

model babao {
  keybabao  String  @id(map: "pkbabao") @db.Char(15)
  code      String  @unique(map: "akbabao") @db.VarChar(15)
  caption   String  @unique(map: "akbabao2") @db.VarChar(70)
  timestamp String  @db.Char(10)
  babag     babag[]
}

model babap {
  keybabap  String  @id(map: "pkbabap") @db.Char(15)
  code      String  @unique(map: "akbabap") @db.VarChar(15)
  caption   String  @unique(map: "akbabap2") @db.VarChar(70)
  timestamp String  @db.Char(10)
  babag     babag[]
}

model babar {
  keybabar  String  @id(map: "pkbabar") @db.Char(15)
  code      String  @unique(map: "akbabar") @db.VarChar(15)
  caption   String  @unique(map: "akbabar2") @db.VarChar(70)
  timestamp String  @db.Char(10)
  babag     babag[]
}

model babau {
  keybabau  String  @id(map: "pkbabau") @db.Char(15)
  code      String  @unique(map: "akbabau") @db.VarChar(15)
  caption   String  @unique(map: "akbabau2") @db.VarChar(70)
  timestamp String  @db.Char(10)
  babag     babag[]
}

model babaw {
  keybabaw  String  @id(map: "pkbabaw") @db.Char(15)
  code      String  @unique(map: "akbabaw") @db.VarChar(15)
  caption   String  @unique(map: "akbabaw2") @db.VarChar(70)
  timestamp String  @db.Char(10)
  babag     babag[]
}

model babay {
  keybabay  String  @id(map: "pkbabay") @db.Char(15)
  code      String  @unique(map: "akbabay") @db.VarChar(15)
  caption   String  @unique(map: "akbabay2") @db.VarChar(70)
  timestamp String  @db.Char(10)
  babag     babag[]
}

model babdl {
  keybabdl   String   @id(map: "pkbabdl") @db.Char(15)
  keycmobj   String   @unique(map: "akbaabdl1") @db.Char(15)
  keybabdt   String?  @db.Char(15)
  code       String   @db.VarChar(30)
  caption    String?  @db.VarChar(30)
  byggnadsar Int?     @db.SmallInt
  ombyggar   Int?     @db.SmallInt
  deletemark Int      @default(0, map: "DF__babdl__deletemar__0CF83246") @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  babdt      babdt?   @relation(fields: [keybabdt], references: [keybabdt], onUpdate: NoAction, map: "fkbabdlkeybabdt ")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbabdlkeycmobj")

  @@index([keybabdt], map: "fkbabdlbabdt")
  @@index([tdate], map: "inbabdl_1IF0H255F")
  @@index([fdate], map: "inbabdl_1IF0H256A")
  @@index([code], map: "inbabdl_1IF0H2576")
  @@index([caption], map: "inbabdl_1IF0H258D")
}

model babdt {
  keybabdt  String  @id(map: "pkbabdt") @db.Char(15)
  keypuatt  String? @db.Char(15)
  code      String  @unique(map: "akbabdt") @db.VarChar(15)
  caption   String? @db.VarChar(60)
  issystem  Int     @default(0, map: "DF__babdt__issystem__21595058") @db.TinyInt
  timestamp String  @db.Char(10)
  babdl     babdl[]
  puatt     puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbabdtkeypuatt ")

  @@index([keypuatt], map: "fkbabdtpuatt")
}

model bablo {
  keybablo  String  @id(map: "pkbablo") @db.Char(15)
  keybanbh  String  @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  banbh     banbh   @relation(fields: [keybanbh], references: [keybanbh], onUpdate: NoAction, map: "fkbablokeybanbh")
  babyg     babyg[]
  bayta     bayta[]

  @@unique([keybanbh, code], map: "akbablo")
  @@index([keybanbh], map: "fkbablobanbh")
}

model babps {
  keybabps   String   @id(map: "pkbabps") @db.Char(15)
  keycmobj   String   @unique(map: "akbabps1") @db.Char(15)
  keybabpt   String   @db.Char(15)
  keyvcacl   String?  @db.Char(15)
  code       String   @db.VarChar(30)
  caption    String?  @db.VarChar(30)
  heltgarage Int      @default(0, map: "DF__babps__heltgarag__1382E6C0") @db.TinyInt
  platsnr    String?  @db.VarChar(30)
  varmgarage Int      @default(0, map: "DF__babps__varmgarag__14770AF9") @db.TinyInt
  el         Int      @default(0, map: "DF__babps__el__156B2F32") @db.TinyInt
  takgarage  Int      @default(0, map: "DF__babps__takgarage__165F536B") @db.TinyInt
  motorvarm  Int      @default(0, map: "DF__babps__motorvarm__175377A4") @db.TinyInt
  uppgang    String?  @db.VarChar(20)
  deletemark Int      @default(0, map: "DF__babps__deletemar__18479BDD") @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  babpt      babpt    @relation(fields: [keybabpt], references: [keybabpt], onUpdate: NoAction, map: "fkbabpskeybabpt ")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbabpskeycmobj ")
  vcacl      vcacl?   @relation(fields: [keyvcacl], references: [keyvcacl], onUpdate: NoAction, map: "fkbabpskeyvcacl ")

  @@index([keybabpt], map: "fkbabpsbabpt")
  @@index([keyvcacl], map: "fkbabpsvcacl")
  @@index([fdate], map: "inbabps_2BR0UA5PM")
  @@index([tdate], map: "inbabps_2BR0UA5QI")
  @@index([code], map: "inbabps_2BR0UA5RD")
  @@index([caption], map: "inbabps_2BR0UA5T7")
}

model babpt {
  keybabpt   String  @id(map: "pkbabpt") @db.Char(15)
  keypuatt   String? @db.Char(15)
  code       String  @unique(map: "akbabpt") @db.VarChar(15)
  caption    String? @db.VarChar(60)
  vat        Int     @default(0, map: "DF__babpt__vat__2529E13C") @db.TinyInt
  terwithdwe Int     @default(0, map: "DF__babpt__terwithdw__261E0575") @db.TinyInt
  issystem   Int     @default(0, map: "DF__babpt__issystem__271229AE") @db.TinyInt
  timestamp  String  @db.Char(10)
  babps      babps[]
  puatt      puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbabptkeypuatt ")

  @@index([keypuatt], map: "fkbabptpuatt")
}

model babuf {
  keybabuf   String   @id(map: "pkbabuf") @db.Char(15)
  keycmobj   String   @unique(map: "akbabuf1") @db.Char(15)
  keyobjcmp  String?  @db.Char(15)
  keyobjfen  String?  @db.Char(15)
  keyobjfst  String?  @db.Char(15)
  keyobjbyg  String?  @db.Char(15)
  keyobjyta  String?  @db.Char(15)
  keyobjaob  String?  @db.Char(15)
  keyobjbdl  String?  @db.Char(15)
  keyobjvan  String?  @db.Char(15)
  keyobjsys  String?  @db.Char(15)
  keyobjlok  String?  @db.Char(15)
  keyobjlgh  String?  @db.Char(15)
  keyobjbps  String?  @db.Char(15)
  keyobjhyr  String?  @db.Char(15)
  keyobjuhe  String?  @db.Char(15)
  keyobjprt  String?  @db.Char(15)
  keyobjrum  String?  @db.Char(15)
  keyobjkmp  String?  @db.Char(15)
  keyobjkmp2 String?  @db.Char(15)
  keyobjinf  String?  @db.Char(15)
  code       String?  @db.VarChar(30)
  caption    String?  @db.VarChar(60)
  cmpcode    String?  @db.VarChar(10)
  cmpcaption String?  @db.VarChar(60)
  fencode    String?  @db.VarChar(30)
  fencaption String?  @db.VarChar(60)
  fstcode    String?  @db.VarChar(30)
  fstcaption String?  @db.VarChar(60)
  bygcode    String?  @db.VarChar(30)
  bygcaption String?  @db.VarChar(60)
  ytacode    String?  @db.VarChar(30)
  ytacaption String?  @db.VarChar(30)
  aobcode    String?  @db.VarChar(30)
  aobcaption String?  @db.VarChar(30)
  bdlcode    String?  @db.VarChar(30)
  bdlcaption String?  @db.VarChar(30)
  vancode    String?  @db.VarChar(30)
  vancaption String?  @db.VarChar(30)
  syscode    String?  @db.VarChar(30)
  syscaption String?  @db.VarChar(60)
  lokcode    String?  @db.VarChar(30)
  lokcaption String?  @db.VarChar(30)
  lghcode    String?  @db.VarChar(30)
  lghcaption String?  @db.VarChar(30)
  bpscode    String?  @db.VarChar(30)
  bpscaption String?  @db.VarChar(30)
  hyrcode    String?  @db.VarChar(10)
  hyrcaption String?  @db.VarChar(30)
  uhecode    String?  @db.VarChar(30)
  uhecaption String?  @db.VarChar(30)
  prtcode    String?  @db.VarChar(30)
  prtcaption String?  @db.VarChar(30)
  rumcode    String?  @db.VarChar(30)
  rumcaption String?  @db.VarChar(30)
  kmpcode    String?  @db.VarChar(30)
  kmpcaption String?  @db.VarChar(60)
  kmpcode2   String?  @db.VarChar(30)
  kmpcapt2   String?  @db.VarChar(60)
  hyresid    String?  @db.VarChar(30)
  deletemark Int      @default(0, map: "DF__babuf__deletemar__45FBA578") @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, map: "fkbabufkeycmobj")

  @@index([keyobjaob], map: "fkbabufobjaob")
  @@index([keyobjbdl], map: "fkbabufobjbdl")
  @@index([keyobjbps], map: "fkbabufobjbps")
  @@index([keyobjbyg], map: "fkbabufobjbyg")
  @@index([keyobjcmp], map: "fkbabufobjcmp")
  @@index([keyobjfen], map: "fkbabufobjfen")
  @@index([keyobjfst], map: "fkbabufobjfst")
  @@index([keyobjhyr], map: "fkbabufobjhyr")
  @@index([keyobjinf], map: "fkbabufobjinf")
  @@index([keyobjkmp], map: "fkbabufobjkmp")
  @@index([keyobjlgh], map: "fkbabufobjlgh")
  @@index([keyobjlok], map: "fkbabufobjlok")
  @@index([keyobjprt], map: "fkbabufobjprt")
  @@index([keyobjrum], map: "fkbabufobjrum")
  @@index([keyobjsys], map: "fkbabufobjsys")
  @@index([keyobjuhe], map: "fkbabufobjuhe")
  @@index([keyobjvan], map: "fkbabufobjvan")
  @@index([keyobjyta], map: "fkbabufobjyta")
  @@index([deletemark, keybabuf, keyobjcmp, keycmobj], map: "inbabuf1")
  @@index([keyobjfen, deletemark, keycmobj, keybabuf], map: "inbabuf2")
  @@index([keyobjfen, keyobjbyg, keycmobj], map: "inbabuf3")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model babuf_PA210525_cmp999 {
  keybabuf   String   @db.Char(15)
  keycmobj   String   @db.Char(15)
  keyobjcmp  String?  @db.Char(15)
  keyobjfen  String?  @db.Char(15)
  keyobjfst  String?  @db.Char(15)
  keyobjbyg  String?  @db.Char(15)
  keyobjyta  String?  @db.Char(15)
  keyobjaob  String?  @db.Char(15)
  keyobjbdl  String?  @db.Char(15)
  keyobjvan  String?  @db.Char(15)
  keyobjsys  String?  @db.Char(15)
  keyobjlok  String?  @db.Char(15)
  keyobjlgh  String?  @db.Char(15)
  keyobjbps  String?  @db.Char(15)
  keyobjhyr  String?  @db.Char(15)
  keyobjuhe  String?  @db.Char(15)
  keyobjprt  String?  @db.Char(15)
  keyobjrum  String?  @db.Char(15)
  keyobjkmp  String?  @db.Char(15)
  keyobjkmp2 String?  @db.Char(15)
  keyobjinf  String?  @db.Char(15)
  code       String?  @db.VarChar(30)
  caption    String?  @db.VarChar(60)
  cmpcode    String?  @db.VarChar(10)
  cmpcaption String?  @db.VarChar(60)
  fencode    String?  @db.VarChar(30)
  fencaption String?  @db.VarChar(60)
  fstcode    String?  @db.VarChar(30)
  fstcaption String?  @db.VarChar(60)
  bygcode    String?  @db.VarChar(30)
  bygcaption String?  @db.VarChar(60)
  ytacode    String?  @db.VarChar(30)
  ytacaption String?  @db.VarChar(30)
  aobcode    String?  @db.VarChar(30)
  aobcaption String?  @db.VarChar(30)
  bdlcode    String?  @db.VarChar(30)
  bdlcaption String?  @db.VarChar(30)
  vancode    String?  @db.VarChar(30)
  vancaption String?  @db.VarChar(30)
  syscode    String?  @db.VarChar(30)
  syscaption String?  @db.VarChar(60)
  lokcode    String?  @db.VarChar(30)
  lokcaption String?  @db.VarChar(30)
  lghcode    String?  @db.VarChar(30)
  lghcaption String?  @db.VarChar(30)
  bpscode    String?  @db.VarChar(30)
  bpscaption String?  @db.VarChar(30)
  hyrcode    String?  @db.VarChar(10)
  hyrcaption String?  @db.VarChar(30)
  uhecode    String?  @db.VarChar(30)
  uhecaption String?  @db.VarChar(30)
  prtcode    String?  @db.VarChar(30)
  prtcaption String?  @db.VarChar(30)
  rumcode    String?  @db.VarChar(30)
  rumcaption String?  @db.VarChar(30)
  kmpcode    String?  @db.VarChar(30)
  kmpcaption String?  @db.VarChar(60)
  kmpcode2   String?  @db.VarChar(30)
  kmpcapt2   String?  @db.VarChar(60)
  hyresid    String?  @db.VarChar(30)
  deletemark Int      @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)

  @@ignore
}

model babvt {
  keybabvt  String  @id(map: "pkbabvt") @db.Char(15)
  caption   String  @unique(map: "akbabvt1") @db.VarChar(30)
  reduction Int     @default(0, map: "DF__babvt__reduction__7406BB9D") @db.TinyInt
  timestamp String  @db.Char(10)
  babyv     babyv[]
}

model babya {
  keybabya  String  @id(map: "pkbabya") @db.Char(15)
  code      String  @unique(map: "akbabya1") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  babyg     babyg[]
  bafst     bafst[]
  bayta     bayta[]
}

model babyb {
  keybabyb  String  @id(map: "pkbabyb") @db.Char(15)
  code      String  @unique(map: "akbabyb1") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  babyg     babyg[]
  bafst     bafst[]
  bayta     bayta[]
}

model babyc {
  keybabyc  String  @id(map: "pkbabyc") @db.Char(15)
  code      String  @unique(map: "akbabyc1") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  babyg     babyg[]
  bafst     bafst[]
  bayta     bayta[]
}

model babyg {
  keybabyg   String    @id(map: "pkbabyg") @db.Char(15)
  keycmobj   String    @unique(map: "akbabyg1") @db.Char(15)
  keybabyt   String?   @db.Char(15)
  keybabya   String?   @db.Char(15)
  keybabyb   String?   @db.Char(15)
  keybabyc   String?   @db.Char(15)
  keybanbh   String?   @db.Char(15)
  keybablo   String?   @db.Char(15)
  keybacls   String?   @db.Char(15)
  keybahea   String?   @db.Char(15)
  code       String    @db.VarChar(30)
  caption    String?   @db.VarChar(60)
  beskrivn   String?   @db.VarChar(60)
  byggnadsar Int?      @db.SmallInt
  ombyggar   Int?      @db.SmallInt
  valueyear  Int?      @db.SmallInt
  uppvarmn   String?   @db.VarChar(20)
  brandklass String?   @db.VarChar(20)
  forsklass  String?   @db.VarChar(20)
  forsvarde  Int?
  lmvhusnr   String?   @db.VarChar(14)
  assyear    Int?      @db.SmallInt
  grade      Int       @default(0, map: "DF__babyg__grade__7EDC9D61") @db.TinyInt
  socialplan Int       @default(0, map: "DF__babyg__socialpla__7FD0C19A") @db.TinyInt
  socialfrom DateTime? @db.Date
  socialto   DateTime? @db.Date
  sharecarea Int?      @db.SmallInt
  deletemark Int       @default(0, map: "DF__babyg__deletemar__00C4E5D3") @db.TinyInt
  fdate      DateTime  @db.DateTime
  tdate      DateTime  @db.DateTime
  hylaststrt DateTime? @db.DateTime
  hylaststop DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  bablo      bablo?    @relation(fields: [keybablo], references: [keybablo], onUpdate: NoAction, map: "fkbabygkeybablo ")
  babya      babya?    @relation(fields: [keybabya], references: [keybabya], onUpdate: NoAction, map: "fkbabygkeybabya ")
  babyb      babyb?    @relation(fields: [keybabyb], references: [keybabyb], onUpdate: NoAction, map: "fkbabygkeybabyb ")
  babyc      babyc?    @relation(fields: [keybabyc], references: [keybabyc], onUpdate: NoAction, map: "fkbabygkeybabyc ")
  babyt      babyt?    @relation(fields: [keybabyt], references: [keybabyt], onUpdate: NoAction, map: "fkbabygkeybabyt ")
  bacls      bacls?    @relation(fields: [keybacls], references: [keybacls], onUpdate: NoAction, map: "fkbabygkeybacls ")
  bahea      bahea?    @relation(fields: [keybahea], references: [keybahea], onUpdate: NoAction, map: "fkbabygkeybahea ")
  banbh      banbh?    @relation(fields: [keybanbh], references: [keybanbh], onUpdate: NoAction, map: "fkbabygkeybanbh ")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbabygkeycmobj ")

  @@index([keybacls], map: "fkbabygbacls")
  @@index([keybahea], map: "fkbabygbahea")
  @@index([keybanbh], map: "fkbabygbanbh")
  @@index([tdate], map: "inbabyg_2M30NAG13")
  @@index([fdate], map: "inbabyg_2M30NAG1W")
  @@index([caption], map: "inbabyg_2M30NAG2R")
  @@index([code], map: "inbabyg_2M30NAG42")
}

model babyt {
  keybabyt  String  @id(map: "pkbabyt") @db.Char(15)
  keypuatt  String? @db.Char(15)
  code      String  @unique(map: "akbabyt") @db.VarChar(15)
  caption   String? @db.VarChar(60)
  issystem  Int     @default(0, map: "DF__babyt__issystem__2AE2BA92") @db.TinyInt
  timestamp String  @db.Char(10)
  aodrb     aodrb[]
  aopby     aopby[]
  babyg     babyg[]
  puatt     puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbabytkeypuatt ")

  @@index([keypuatt], map: "fkbabytpuatt")
}

model babyv {
  keybabyv   String   @id(map: "pkbabyv") @db.Char(15)
  keybabvt   String   @db.Char(15)
  keycmobj   String   @db.Char(15)
  keycmvat   String?  @db.Char(15)
  keysyusr   String?  @db.Char(15)
  regdate    DateTime @db.DateTime
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  areachange Decimal  @db.Decimal(8, 2)
  areabal    Decimal  @db.Decimal(8, 2)
  timestamp  String   @db.Char(10)
  babvt      babvt    @relation(fields: [keybabvt], references: [keybabvt], onUpdate: NoAction, map: "fkbabyvkeybabvt ")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbabyvkeycmobj ")
  cmvat      cmvat?   @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkbabyvkeycmvat ")

  @@index([keybabvt], map: "fkbabyvbabvt")
  @@index([keycmobj], map: "fkbabyvcmobj")
  @@index([keycmvat], map: "fkbabyvcmvat")
  @@index([keysyusr], map: "fkbabyvsyusr")
}

model bacat {
  keybacat  String  @id(map: "pkbacat") @db.Char(15)
  caption   String  @unique(map: "akbacat") @db.VarChar(60)
  distrkind Int     @default(0, map: "DF__bacat__distrkind__5726317A") @db.TinyInt
  timestamp String  @db.Char(10)
  barum     barum[]
  bauhe     bauhe[]
}

model bacla {
  keybacla   String    @id(map: "pkbacla") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  daeb       Int       @default(0, map: "DF__bacla__daeb__2B5A7051") @db.TinyInt
  validfrom  DateTime? @db.Date
  validto    DateTime? @db.Date
  chgetype   Int       @default(0, map: "DF__bacla__chgetype__2C4E948A") @db.TinyInt
  changedate DateTime  @db.DateTime
  claweight  Decimal   @default(1, map: "DF__bacla__claweight__2D42B8C3") @db.Decimal(5, 2)
  timestamp  String    @db.Char(10)
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbaclakeycmobj ")

  @@index([keycmobj], map: "fkbaclacmobj")
  @@index([keysyusr], map: "fkbaclasyusr")
}

model baclh {
  keybaclh   String   @id(map: "pkbaclh") @db.Char(15)
  keycmobj   String   @db.Char(15)
  keycmctc   String?  @db.Char(15)
  caption    String   @db.VarChar(60)
  clhtype    Int      @default(0, map: "DF__baclh__clhtype__4A0C2D7E") @db.TinyInt
  gender     Int      @default(0, map: "DF__baclh__gender__4B0051B7") @db.TinyInt
  commonarea Decimal? @db.Decimal(14, 2)
  timestamp  String   @db.Char(10)
  cmctc      cmctc?   @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbaclhkeycmctc")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, map: "fkBaclhKeycmobj ")
  pddcr      pddcr[]

  @@index([keycmobj, clhtype], map: "FkKeycmobjClhtype")
}

model baclr {
  keybaclr  String @id(map: "pkbaclr") @db.Char(15)
  keybaclh  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
}

model bacls {
  keybacls   String  @id(map: "pkbacls") @db.Char(15)
  caption    String  @db.VarChar(100)
  buildclass Int     @unique(map: "akbacls") @default(0, map: "DF__bacls__buildclas__43245877") @db.TinyInt
  rentalperc Decimal @default(100, map: "DF__bacls__rentalper__44187CB0") @db.Decimal(4, 1)
  sysstd     Int     @default(0, map: "DF__bacls__sysstd__450CA0E9") @db.TinyInt
  timestamp  String  @db.Char(10)
  babyg      babyg[]
}

model bacty {
  keybacty  String  @id(map: "pkbacty") @db.Char(15)
  code      String  @unique(map: "akbacty") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  bamun     bamun[]
}

model badlr {
  keybadlr                     String    @id(map: "pkbadlr") @db.Char(15)
  keycmobj                     String    @db.Char(15)
  keycmobj2                    String    @db.Char(15)
  keycmvat                     String    @db.Char(15)
  keycmvat2                    String    @db.Char(15)
  keysyusr                     String?   @db.Char(15)
  amount                       Float     @default(0, map: "DF__badlr__amount__311349A7") @db.Money
  calcdate                     DateTime  @db.Date
  exectime                     DateTime? @db.DateTime
  comp                         String?   @db.VarChar(60)
  sessionid                    Int       @default(0, map: "DF__badlr__sessionid__32076DE0")
  updatetype                   Int       @default(0, map: "DF__badlr__updatetyp__32FB9219")
  timestamp                    String    @db.Char(10)
  cmobj_badlr_keycmobjTocmobj  cmobj     @relation("badlr_keycmobjTocmobj", fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkbadlrkeycmobj ")
  cmobj_badlr_keycmobj2Tocmobj cmobj     @relation("badlr_keycmobj2Tocmobj", fields: [keycmobj2], references: [keycmobj], onUpdate: NoAction, map: "fkbadlrkeycmobj2 ")
  cmvat_badlr_keycmvatTocmvat  cmvat     @relation("badlr_keycmvatTocmvat", fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkbadlrkeycmvat ")
  cmvat_badlr_keycmvat2Tocmvat cmvat     @relation("badlr_keycmvat2Tocmvat", fields: [keycmvat2], references: [keycmvat], onUpdate: NoAction, map: "fkbadlrkeycmvat2 ")

  @@index([keycmobj], map: "fkbadlrcmobj")
  @@index([keycmobj2], map: "fkbadlrcmobj2")
  @@index([keycmvat], map: "fkbadlrcmvat")
  @@index([keycmvat2], map: "fkbadlrcmvat2")
  @@index([keysyusr], map: "fkbadlrsyusr")
}

model bafen {
  keybafen                     String    @id(map: "pkbafen") @db.Char(15)
  keycmobj                     String    @unique(map: "akbafen1") @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keybafet                     String?   @db.Char(15)
  keybamun                     String?   @db.Char(15)
  keybascr                     String?   @db.Char(15)
  code                         String    @db.VarChar(30)
  caption                      String?   @db.VarChar(60)
  egetinhyrt                   String    @default("E", map: "DF__bafen__egetinhyr__6B5FB499") @db.Char(1)
  pufondar                     Int?      @db.SmallInt
  pufondbeho                   Int?
  skfaktor                     Decimal   @default(1, map: "DF__bafen__skfaktor__6C53D8D2") @db.Decimal(5, 2)
  distrikt                     String?   @db.VarChar(30)
  omrade                       String?   @db.VarChar(30)
  stadsdel                     String?   @db.VarChar(30)
  invref                       String?   @db.VarChar(60)
  aoadm                        Int       @default(1, map: "DF__bafen__aoadm__6D47FD0B") @db.TinyInt
  warntext                     String?   @db.VarChar(300)
  grade                        Int       @default(0, map: "DF__bafen__grade__6E3C2144") @db.TinyInt
  socialplan                   Int       @default(0, map: "DF__bafen__socialpla__6F30457D") @db.TinyInt
  socialfrom                   DateTime? @db.Date
  socialto                     DateTime? @db.Date
  deletemark                   Int       @default(0, map: "DF__bafen__deletemar__702469B6") @db.TinyInt
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime  @db.DateTime
  pdmonth                      Int?      @db.TinyInt
  pdnewmonth                   Int?      @db.TinyInt
  pdfee                        Int       @default(0, map: "DF__bafen__pdfee__71188DEF") @db.TinyInt
  contplace                    String?   @db.VarChar(60)
  ownpdperc                    Decimal?  @db.Decimal(5, 2)
  extdistkey                   Int       @default(0, map: "DF__bafen__extdistke__720CB228") @db.TinyInt
  timestamp                    String    @db.Char(10)
  bafet                        bafet?    @relation(fields: [keybafet], references: [keybafet], onUpdate: NoAction, map: "fkbafenkeybafet ")
  bamun                        bamun?    @relation(fields: [keybamun], references: [keybamun], onUpdate: NoAction, map: "fkbafenkeybamun")
  bascr                        bascr?    @relation(fields: [keybascr], references: [keybascr], onDelete: NoAction, onUpdate: NoAction, map: "fkbafenkeybascr ")
  cmctc_bafen_keycmctcTocmctc  cmctc?    @relation("bafen_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkbafenkeycmctc")
  cmctc_bafen_keycmctc2Tocmctc cmctc?    @relation("bafen_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbafenkeycmctc2")
  cmobj                        cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbafenkeycmobj ")

  @@index([keybamun], map: "fkbafenbamun")
  @@index([keybascr], map: "fkbafenbascr")
  @@index([keycmctc], map: "fkbafencmctc")
  @@index([keycmctc2], map: "fkbafencmctc2")
  @@index([fdate], map: "inbafen_2CS0P6MW3")
  @@index([tdate], map: "inbafen_2CS0P6MZ4")
  @@index([code], map: "inbafen_2CS0P6N16")
  @@index([caption], map: "inbafen_2CS0P6N3I")
}

model bafet {
  keybafet  String  @id(map: "pkbafet") @db.Char(15)
  code      String  @unique(map: "akbafet") @db.VarChar(15)
  caption   String? @db.VarChar(60)
  timestamp String  @db.Char(10)
  bafen     bafen[]
}

model bafsa {
  keybafsa  String   @id(map: "pkbafsa") @db.Char(15)
  keycmobj  String   @db.Char(15)
  fdate     DateTime @db.DateTime
  area      Decimal  @db.Decimal(7, 1)
  timestamp String   @db.Char(10)
  cmobj     cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbafsakeycmobj")

  @@unique([keycmobj, fdate], map: "akbafsa1")
}

model bafst {
  keybafst                     String    @id(map: "pkbafst") @db.Char(15)
  keycmobj                     String    @unique(map: "fkbafstcmobj") @db.Char(15)
  keybabya                     String?   @db.Char(15)
  keybabyb                     String?   @db.Char(15)
  keybabyc                     String?   @db.Char(15)
  keybavom                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  code                         String    @db.VarChar(30)
  caption                      String?   @db.VarChar(60)
  kommun                       String?   @db.VarChar(30)
  trakt                        String?   @db.VarChar(30)
  block                        String?   @db.VarChar(30)
  sector                       String?   @db.VarChar(30)
  indexno                      String?   @db.VarChar(30)
  forsamling                   String?   @db.VarChar(60)
  bebyggd                      Int       @default(0, map: "DF__bafst__bebyggd__4F0695D0") @db.TinyInt
  egentaxenh                   Int       @default(0, map: "DF__bafst__egentaxen__4FFABA09") @db.TinyInt
  sammanfnr                    String?   @db.VarChar(30)
  egenfast                     String    @default("E", map: "DF__bafst__egenfast__50EEDE42") @db.Char(1)
  inskrdat                     DateTime? @db.Date
  fangesdat                    DateTime? @db.Date
  tomtratt                     Int       @default(0, map: "DF__bafst__tomtratt__51E3027B") @db.TinyInt
  tomtdoddat                   DateTime? @db.DateTime
  omrade                       String?   @db.VarChar(30)
  andamal                      String?   @db.Char(1)
  bebyggtyp                    String?   @db.Char(2)
  taxno                        String?   @db.VarChar(15)
  ammainpart                   Int       @default(0, map: "DF__bafst__ammainpar__52D726B4") @db.TinyInt
  amcalcinc                    Int       @default(1, map: "DF__bafst__amcalcinc__53CB4AED") @db.TinyInt
  grade                        Int       @default(0, map: "DF__bafst__grade__54BF6F26") @db.TinyInt
  deletemark                   Int       @default(0, map: "DF__bafst__deletemar__55B3935F") @db.TinyInt
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime  @db.DateTime
  timestamp                    String    @db.Char(10)
  bavom                        bavom?    @relation(fields: [keybavom], references: [keybavom], onDelete: NoAction, onUpdate: NoAction, map: "fkbafsstkeybavom")
  babya                        babya?    @relation(fields: [keybabya], references: [keybabya], onDelete: NoAction, onUpdate: NoAction, map: "fkbafstkeybabya")
  babyb                        babyb?    @relation(fields: [keybabyb], references: [keybabyb], onDelete: NoAction, onUpdate: NoAction, map: "fkbafstkeybabyb")
  babyc                        babyc?    @relation(fields: [keybabyc], references: [keybabyc], onDelete: NoAction, onUpdate: NoAction, map: "fkbafstkeybabyc")
  cmctc_bafst_keycmctcTocmctc  cmctc?    @relation("bafst_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkbafstkeycmctc")
  cmctc_bafst_keycmctc2Tocmctc cmctc?    @relation("bafst_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbafstkeycmctc2")
  cmobj                        cmobj     @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkbafstkeycmobj")
  mmfst                        mmfst?

  @@index([keybabya], map: "fkbafstbabya")
  @@index([keybabyb], map: "fkbafstbabyb")
  @@index([keybabyc], map: "fkbafstbabyc")
  @@index([keybavom], map: "fkbafstbavom")
  @@index([keycmctc], map: "fkbafstcmctc")
  @@index([keycmctc2], map: "fkbafstcmctc2")
  @@index([fdate], map: "inbafst_2KR0I5KYU")
  @@index([tdate], map: "inbafst_2KR0I5KZP")
  @@index([code], map: "inbafst_2KR0I5L0X")
  @@index([caption], map: "inbafst_2KR0I5L1V")
}

model baglo {
  keybaglo  String                    @id(map: "pkbaglo") @db.Char(15)
  keycmobj  String                    @unique(map: "fkbaglocmobj") @db.Char(15)
  objloca   Unsupported("geography")?
  timestamp String                    @db.Char(10)
}

model bahea {
  keybahea  String  @id(map: "pkbahea") @db.Char(15)
  caption   String  @db.VarChar(60)
  ptsroom   Float?  @db.Money
  ptsother  Float?  @db.Money
  timestamp String  @db.Char(10)
  babyg     babyg[]
  hyinf     hyinf[]
}

model bahyr {
  keybahyr   String   @id(map: "pkbahyr") @db.Char(15)
  keycmobj   String   @unique(map: "akbahyr1") @db.Char(15)
  keybahyt   String   @db.Char(15)
  keyvcacl   String?  @db.Char(15)
  code       String   @db.VarChar(10)
  caption    String?  @db.VarChar(30)
  uppgang    String?  @db.VarChar(20)
  deletemark Int      @default(0, map: "DF__bahyr__deletemar__39A88FA8") @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  bahyt      bahyt    @relation(fields: [keybahyt], references: [keybahyt], onUpdate: NoAction, map: "fkbahyrkeybahyt ")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbahyrkeycmobj ")
  vcacl      vcacl?   @relation(fields: [keyvcacl], references: [keyvcacl], onUpdate: NoAction, map: "fkbahyrkeyvcacl ")

  @@index([keybahyt], map: "fkbahyrbahyt")
  @@index([keyvcacl], map: "fkbahyrvcacl")
  @@index([code], map: "inbahyr_2BR0U851E")
  @@index([caption], map: "inbahyr_2BR0U852A")
  @@index([fdate], map: "inbahyr_2BR0U853H")
  @@index([tdate], map: "inbahyr_2BR0U854C")
}

model bahyt {
  keybahyt   String  @id(map: "pkbahyt") @db.Char(15)
  keypuatt   String? @db.Char(15)
  code       String  @unique(map: "akbahyt") @db.VarChar(15)
  caption    String? @db.VarChar(60)
  terwithdwe Int     @default(0, map: "DF__bahyt__terwithdw__3C0D4694") @db.TinyInt
  issystem   Int     @default(0, map: "DF__bahyt__issystem__3D016ACD") @db.TinyInt
  timestamp  String  @db.Char(10)
  bahyr      bahyr[]
  puatt      puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbahytkeypuatt ")

  @@index([keypuatt], map: "fkbahytpuatt")
}

model baint {
  keybaint  String @id(map: "pkbaint") @db.Char(15)
  caption   String @unique(map: "akbaint1") @db.VarChar(60)
  timestamp String @db.Char(10)
}

model bainv {
  keybainv  String @id(map: "pkbainv") @db.Char(15)
  keybaint  String @db.Char(15)
  keycmobj  String @db.Char(15)
  quantity  Int    @default(0, map: "DF__bainv__quantity__7B161EA0") @db.SmallInt
  timestamp String @db.Char(10)

  @@unique([keycmobj, keybaint], map: "akbainv1")
  @@index([keybaint], map: "fkbainvbaint")
  @@index([keycmobj], map: "fkbainvcmobj")
}

model bakmc {
  keybakmc  String  @id(map: "pkbakmc") @db.Char(15)
  code      String  @unique(map: "akbakmc") @db.VarChar(10)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  bakmp     bakmp[]
  ikktp     ikktp[]
}

model bakmp {
  keybakmp                     String    @id(map: "pkbakmp") @db.Char(15)
  keycmobj                     String    @unique(map: "fkbakmpcmobj") @db.Char(15)
  keybakmt                     String?   @db.Char(15)
  keybakmc                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keyaobdl                     String?   @db.Char(15)
  keytvart                     String?   @db.Char(15)
  keytvpca                     String?   @db.Char(15)
  code                         String    @db.VarChar(30)
  caption                      String?   @db.VarChar(60)
  fabrikat                     String?   @db.VarChar(60)
  typbeteckn                   String?   @db.VarChar(60)
  instdatum                    DateTime? @db.DateTime
  tdatewarr                    DateTime? @db.DateTime
  betjanar                     String?   @db.VarChar(60)
  aoadm                        Int       @default(1, map: "DF__bakmp__aoadm__5A029E25") @db.TinyInt
  isai                         Int       @default(0, map: "DF__bakmp__isai__5AF6C25E") @db.TinyInt
  deletemark                   Int       @default(0, map: "DF__bakmp__deletemar__5BEAE697") @db.TinyInt
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime  @db.DateTime
  timestamp                    String    @db.Char(10)
  aobdl                        aobdl?    @relation(fields: [keyaobdl], references: [keyaobdl], onUpdate: NoAction, map: "fkbakmpkeyaobdl ")
  bakmc                        bakmc?    @relation(fields: [keybakmc], references: [keybakmc], onUpdate: NoAction, map: "fkbakmpkeybakmc ")
  bakmt                        bakmt?    @relation(fields: [keybakmt], references: [keybakmt], onUpdate: NoAction, map: "fkbakmpkeybakmt ")
  cmctc_bakmp_keycmctcTocmctc  cmctc?    @relation("bakmp_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbakmpkeycmctc")
  cmctc_bakmp_keycmctc2Tocmctc cmctc?    @relation("bakmp_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbakmpkeycmctc2")
  cmobj                        cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbakmpkeycmobj")
  tvart                        tvart?    @relation(fields: [keytvart], references: [keytvart], onUpdate: NoAction, map: "fkbakmpkeytvart ")
  tvpca                        tvpca?    @relation(fields: [keytvpca], references: [keytvpca], onUpdate: NoAction, map: "fkbakmpkeytvpca")

  @@index([keyaobdl], map: "fkbakmpaobdl")
  @@index([keybakmt], map: "fkbakmpbakmt")
  @@index([keycmctc], map: "fkbakmpcmctc")
  @@index([keycmctc2], map: "fkbakmpcmctc2")
  @@index([keytvart], map: "fkbakmptvart")
  @@index([keytvpca], map: "fkbakmptvpca")
  @@index([fdate], map: "inbakmp_2KX0I3RLS")
  @@index([tdate], map: "inbakmp_2KX0I3RMK")
  @@index([code], map: "inbakmp_2KX0I3RN3")
  @@index([caption], map: "inbakmp_2KX0I3RNI")
}

model bakmt {
  keybakmt  String  @id(map: "pkbakmt") @db.Char(15)
  keycmtyp  String? @db.Char(15)
  keypuatt  String? @db.Char(15)
  code      String  @unique(map: "akbakmt") @db.VarChar(15)
  caption   String? @db.VarChar(60)
  issystem  Int     @default(0, map: "DF__bakmt__issystem__0FFEBC23") @db.TinyInt
  timestamp String  @db.Char(10)
  bakmp     bakmp[]
  cmtyp     cmtyp?  @relation(fields: [keycmtyp], references: [keycmtyp], onUpdate: NoAction, map: "fkbakmtkeycmtyp ")
  puatt     puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbakmtkeypuatt ")
  ikkmp     ikkmp[]
  ikktp     ikktp[]
  tvpdg     tvpdg[]

  @@index([keycmtyp], map: "fkbakmtcmtyp")
  @@index([keypuatt], map: "fkbakmtpuatt")
}

model balac {
  keybalac  String  @id(map: "pkbalac") @db.Char(15)
  code      String  @unique(map: "akbalac1") @db.VarChar(10)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  balal     balal[]
}

model balal {
  keybalal  String  @id(map: "pkbalal") @db.Char(15)
  keybalac  String  @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(60)
  descrnote String? @db.VarChar(1000)
  lalsymbol Bytes?
  timestamp String  @db.Char(10)
  balac     balac   @relation(fields: [keybalac], references: [keybalac], onDelete: Cascade, onUpdate: NoAction, map: "fkbalalkeybalac ")

  @@unique([keybalac, code], map: "akbalal")
  @@index([keybalac], map: "fkbalalbalac")
}

model balao {
  keybalao  String  @id(map: "pkbalao") @db.Char(15)
  keybalap  String  @db.Char(15)
  keycmobj  String  @db.Char(15)
  laovalue  Decimal @default(0, map: "DF__balao__laovalue__6EF5DACB") @db.Decimal(8, 2)
  timestamp String  @db.Char(10)

  @@index([keybalap], map: "fkbalaobalap")
  @@index([keycmobj], map: "fkbalaocmobj")
}

model balap {
  keybalap  String @id(map: "pkbalap") @db.Char(15)
  keybalal  String @db.Char(15)
  keycmobt  String @default("balgh", map: "DF__balap__keycmobt__5D65C028") @db.Char(15)
  maingrp   String @db.VarChar(100)
  subgrp    String @db.VarChar(100)
  caption   String @db.VarChar(100)
  fldtype   Int    @default(0, map: "DF__balap__fldtype__5E59E461") @db.TinyInt
  publish   Int    @default(0, map: "DF__balap__publish__5F4E089A") @db.TinyInt
  sortorder Int    @default(0, map: "DF__balap__sortorder__60422CD3") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keybalal], map: "fkbalapbalal")
}

model balar {
  keybalar  String @id(map: "pkbalar") @db.Char(15)
  keycmobj  String @db.Char(15)
  keybalal  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keycmobj, keybalal], map: "akbalar1")
  @@index([keybalal], map: "fkbalarbalal")
}

model balav {
  keybalav   String  @id(map: "pkbalav") @db.Char(15)
  keybalap   String  @db.Char(15)
  validvalue Decimal @default(0, map: "DF__balav__validvalu__7696FC93") @db.Decimal(8, 2)
  caption    String  @db.VarChar(30)
  timestamp  String  @db.Char(10)

  @@index([keybalap], map: "fkbalavbalap")
}

model balbf {
  keybalbf  String  @id(map: "pkbalbf") @db.Char(15)
  caption   String  @unique(map: "akbalbf1") @db.VarChar(30)
  timestamp String  @db.Char(10)
  balgh     balgh[]
}

model balgh {
  keybalgh   String    @id(map: "pkbalgh") @db.Char(15)
  keycmobj   String    @unique(map: "akbalgh1") @db.Char(15)
  keybalgt   String    @db.Char(15)
  keybalbf   String?   @db.Char(15)
  keylbpro   String?   @db.Char(15)
  keyvcacl   String?   @db.Char(15)
  code       String    @db.VarChar(30)
  caption    String?   @db.VarChar(30)
  lage       String?   @db.Char(1)
  hkprullsto Int?      @db.TinyInt
  hkpvanlig  Int?      @db.TinyInt
  service    Int?      @db.TinyInt
  balk1lage  String?   @db.Char(1)
  balk2lage  String?   @db.Char(1)
  balk1typ   String?   @db.Char(1)
  balk2typ   String?   @db.Char(1)
  utepllage  String?   @db.Char(1)
  hygienutr  String?   @db.Char(1)
  sauna      Int       @default(0, map: "DF__balgh__sauna__3F6168FE") @db.TinyInt
  extrawc    Int       @db.TinyInt
  lmcomkitch Int       @default(0, map: "DF__balgh__lmcomkitc__40558D37") @db.TinyInt
  allergdjur Int       @db.TinyInt
  allergel   Int       @db.TinyInt
  smokefree  Int       @default(0, map: "DF__balgh__smokefree__4149B170") @db.TinyInt
  hiss       Int?      @db.TinyInt
  asbestos   Int       @default(0, map: "DF__balgh__asbestos__423DD5A9") @db.TinyInt
  uppgang    String?   @db.VarChar(20)
  hlufondavs Float?    @db.Money
  hlufondmax Float?    @db.Money
  fdatehglu  DateTime? @db.DateTime
  partno     Int?      @db.TinyInt
  part       String?   @db.VarChar(10)
  deletemark Int       @default(0, map: "DF__balgh__deletemar__4331F9E2") @db.TinyInt
  fdate      DateTime  @db.DateTime
  tdate      DateTime  @db.DateTime
  timestamp  String    @db.Char(10)
  balbf      balbf?    @relation(fields: [keybalbf], references: [keybalbf], onUpdate: NoAction, map: "fkbalghkeybalbf ")
  balgt      balgt     @relation(fields: [keybalgt], references: [keybalgt], onUpdate: NoAction, map: "fkbalghkeybalgt ")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbalghkeycmobj ")
  lbpro      lbpro?    @relation(fields: [keylbpro], references: [keylbpro], onUpdate: NoAction, map: "fkbalghkeylbpro ")
  vcacl      vcacl?    @relation(fields: [keyvcacl], references: [keyvcacl], onUpdate: NoAction, map: "fkbalghkeyvcacl ")

  @@index([keybalbf], map: "fkbalghbalbf")
  @@index([keybalgt], map: "fkbalghbalgt")
  @@index([keylbpro], map: "fkbalghlbpro")
  @@index([keyvcacl], map: "fkbalghvcacl")
  @@index([fdate], map: "inbalgh_2BR0U8P2C")
  @@index([tdate], map: "inbalgh_2BR0U8P3K")
  @@index([code], map: "inbalgh_2BR0U8P4U")
  @@index([caption], map: "inbalgh_2BR0U8P5R")
}

model balgt {
  keybalgt                     String  @id(map: "pkbalgt") @db.Char(15)
  keypuatt                     String? @db.Char(15)
  keyballs                     String? @db.Char(15)
  keyballs2                    String? @db.Char(15)
  keyballs3                    String? @db.Char(15)
  keyballs4                    String? @db.Char(15)
  keylbpro                     String? @db.Char(15)
  code                         String  @unique(map: "akbalgt") @db.VarChar(15)
  caption                      String? @db.VarChar(60)
  roomcount                    Int?    @db.TinyInt
  lmkitchen                    Int     @default(0, map: "DF__balgt__lmkitchen__40D1FBB1") @db.TinyInt
  tvpool                       Float?  @db.Money
  issystem                     Int     @default(0, map: "DF__balgt__issystem__41C61FEA") @db.TinyInt
  timestamp                    String  @db.Char(10)
  balgh                        balgh[]
  balls_balgt_keyballsToballs  balls?  @relation("balgt_keyballsToballs", fields: [keyballs], references: [keyballs], onUpdate: NoAction, map: "fkbalgtkeyballs ")
  balls_balgt_keyballs2Toballs balls?  @relation("balgt_keyballs2Toballs", fields: [keyballs2], references: [keyballs], onDelete: NoAction, onUpdate: NoAction, map: "fkbalgtkeyballs2 ")
  balls_balgt_keyballs3Toballs balls?  @relation("balgt_keyballs3Toballs", fields: [keyballs3], references: [keyballs], onDelete: NoAction, onUpdate: NoAction, map: "fkbalgtkeyballs3 ")
  balls_balgt_keyballs4Toballs balls?  @relation("balgt_keyballs4Toballs", fields: [keyballs4], references: [keyballs], onDelete: NoAction, onUpdate: NoAction, map: "fkbalgtkeyballs4 ")
  lbpro                        lbpro?  @relation(fields: [keylbpro], references: [keylbpro], onUpdate: NoAction, map: "fkbalgtkeylbpro ")
  puatt                        puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbalgtkeypuatt ")
  hydnr                        hydnr[]

  @@index([keyballs], map: "fkbalgtballs")
  @@index([keyballs2], map: "fkbalgtballs2")
  @@index([keyballs3], map: "fkbalgtballs3")
  @@index([keyballs4], map: "fkbalgtballs4")
  @@index([keylbpro], map: "fkbalgtlbpro")
  @@index([keypuatt], map: "fkbalgtpuatt")
}

model balls {
  keyballs                     String  @id(map: "pkballs") @db.Char(15)
  code                         String  @unique(map: "akballs1") @db.VarChar(30)
  caption                      String  @db.VarChar(30)
  repabkod                     Int     @db.TinyInt
  timestamp                    String  @db.Char(10)
  balgt_balgt_keyballsToballs  balgt[] @relation("balgt_keyballsToballs")
  balgt_balgt_keyballs2Toballs balgt[] @relation("balgt_keyballs2Toballs")
  balgt_balgt_keyballs3Toballs balgt[] @relation("balgt_keyballs3Toballs")
  balgt_balgt_keyballs4Toballs balgt[] @relation("balgt_keyballs4Toballs")
  balot_balot_keyballsToballs  balot[] @relation("balot_keyballsToballs")
  balot_balot_keyballs2Toballs balot[] @relation("balot_keyballs2Toballs")
  balot_balot_keyballs3Toballs balot[] @relation("balot_keyballs3Toballs")
  balot_balot_keyballs4Toballs balot[] @relation("balot_keyballs4Toballs")
}

model balok {
  keybalok   String    @id(map: "pkbalok") @db.Char(15)
  keycmobj   String    @unique(map: "akbalok1") @db.Char(15)
  keybalot   String    @db.Char(15)
  keybacat   String?   @db.Char(15)
  keybarch   String?   @db.Char(15)
  keybarcp   String?   @db.Char(15)
  keybarcr   String?   @db.Char(15)
  keylbpro   String?   @db.Char(15)
  keyvcacl   String?   @db.Char(15)
  code       String    @db.VarChar(30)
  caption    String?   @db.VarChar(30)
  lage       String?   @db.VarChar(5)
  uppgang    String?   @db.VarChar(20)
  usage      Int       @default(0, map: "DF__balok__usage__4AD31BAA") @db.TinyInt
  deletemark Int       @default(0, map: "DF__balok__deletemar__4BC73FE3") @db.TinyInt
  fdate      DateTime  @db.DateTime
  tdate      DateTime  @db.DateTime
  availfrom  DateTime? @db.Time
  availto    DateTime? @db.Time
  timestamp  String    @db.Char(10)
  balot      balot     @relation(fields: [keybalot], references: [keybalot], onUpdate: NoAction, map: "fkbalokkeybalot ")
  barch      barch?    @relation(fields: [keybarch], references: [keybarch], onUpdate: NoAction, map: "fkbalokkeybarch ")
  barcp      barcp?    @relation(fields: [keybarcp], references: [keybarcp], onDelete: NoAction, onUpdate: NoAction, map: "fkbalokkeybarcp ")
  barcr      barcr?    @relation(fields: [keybarcr], references: [keybarcr], onUpdate: NoAction, map: "fkbalokkeybarcr ")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbalokkeycmobj ")
  lbpro      lbpro?    @relation(fields: [keylbpro], references: [keylbpro], onUpdate: NoAction, map: "fkbalokkeylbpro ")
  vcacl      vcacl?    @relation(fields: [keyvcacl], references: [keyvcacl], onUpdate: NoAction, map: "fkbalokkeyvcacl ")

  @@index([keybalot], map: "fkbalokbalot")
  @@index([keybarch], map: "fkbalokbarch")
  @@index([keybarcp], map: "fkbalokbarcp")
  @@index([keybarcr], map: "fkbalokbarcr")
  @@index([keylbpro], map: "fkbaloklbpro")
  @@index([keyvcacl], map: "fkbalokvcacl")
  @@index([fdate], map: "inbalok_2BR0U8Z2W")
  @@index([tdate], map: "inbalok_2BR0U8Z3S")
  @@index([code], map: "inbalok_2BR0U8Z4N")
  @@index([caption], map: "inbalok_2BR0U8Z5X")
}

model balot {
  keybalot                     String  @id(map: "pkbalot") @db.Char(15)
  keypuatt                     String? @db.Char(15)
  keyballs                     String? @db.Char(15)
  keyballs2                    String? @db.Char(15)
  keyballs3                    String? @db.Char(15)
  keyballs4                    String? @db.Char(15)
  keyamvat                     String? @db.Char(15)
  keylbpro                     String? @db.Char(15)
  code                         String  @unique(map: "akbalot") @db.VarChar(15)
  caption                      String? @db.VarChar(60)
  usage                        Int     @default(0, map: "DF__balot__usage__4A5B65EB") @db.TinyInt
  issystem                     Int     @default(0, map: "DF__balot__issystem__4B4F8A24") @db.TinyInt
  timestamp                    String  @db.Char(10)
  aodro                        aodro[]
  balok                        balok[]
  amvat                        amvat?  @relation(fields: [keyamvat], references: [keyamvat], onUpdate: NoAction, map: "fkbalotkeyamvat ")
  balls_balot_keyballsToballs  balls?  @relation("balot_keyballsToballs", fields: [keyballs], references: [keyballs], onUpdate: NoAction, map: "fkbalotkeyballs ")
  balls_balot_keyballs2Toballs balls?  @relation("balot_keyballs2Toballs", fields: [keyballs2], references: [keyballs], onDelete: NoAction, onUpdate: NoAction, map: "fkbalotkeyballs2 ")
  balls_balot_keyballs3Toballs balls?  @relation("balot_keyballs3Toballs", fields: [keyballs3], references: [keyballs], onDelete: NoAction, onUpdate: NoAction, map: "fkbalotkeyballs3 ")
  balls_balot_keyballs4Toballs balls?  @relation("balot_keyballs4Toballs", fields: [keyballs4], references: [keyballs], onDelete: NoAction, onUpdate: NoAction, map: "fkbalotkeyballs4 ")
  lbpro                        lbpro?  @relation(fields: [keylbpro], references: [keylbpro], onUpdate: NoAction, map: "fkbalotkeylbpro ")
  puatt                        puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbalotkeypuatt ")
  stkvk                        stkvk[]

  @@index([keyballs], map: "fkbalotballs")
  @@index([keyballs2], map: "fkbalotballs2")
  @@index([keyballs3], map: "fkbalotballs3")
  @@index([keyballs4], map: "fkbalotballs4")
  @@index([keylbpro], map: "fkbalotlbpro")
  @@index([keypuatt], map: "fkbalotpuatt")
}

model bamms {
  keybamms  String   @id(map: "pkbamms") @db.Char(15)
  keycmobj  String   @db.Char(15)
  applydate DateTime @db.DateTime
  fdate     DateTime @db.DateTime
  area      Decimal  @db.Decimal(7, 1)
  journalid String?  @db.VarChar(30)
  timestamp String   @db.Char(10)
  cmobj     cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbammskeycmobj")

  @@unique([keycmobj, fdate], map: "akbamms1")
  @@index([keycmobj], map: "fkbammscmobj")
}

model bamun {
  keybamun  String  @id(map: "pkbamun") @db.Char(15)
  keybacty  String? @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(30)
  caption2  String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  bafen     bafen[]
  bacty     bacty?  @relation(fields: [keybacty], references: [keybacty], onDelete: NoAction, onUpdate: NoAction, map: "fkbamunkeybacty")
  banbh     banbh[]
  batra     batra[]
  cmads     cmads[]

  @@index([keybacty], map: "fkbamunbacty")
}

model banbh {
  keybanbh   String  @id(map: "pkbanbh") @db.Char(15)
  keybamun   String  @db.Char(15)
  code       String  @db.VarChar(10)
  caption    String  @db.VarChar(50)
  problearea Int     @default(0, map: "DF__banbh__probleare__2E934FE5") @db.TinyInt
  timestamp  String  @db.Char(10)
  bablo      bablo[]
  babyg      babyg[]
  bamun      bamun   @relation(fields: [keybamun], references: [keybamun], onUpdate: NoAction, map: "fkbanbhkeybamun")
  bayta      bayta[]

  @@unique([keybamun, code], map: "akbanbh1")
  @@index([keybamun], map: "fkbanbhbamun")
}

model barch {
  keybarch  String  @id(map: "pkbarch") @db.Char(15)
  code      String  @unique(map: "akbarch") @db.VarChar(10)
  caption   String  @db.VarChar(80)
  timestamp String  @db.Char(10)
  balok     balok[]
  barcp     barcp[]
  barum     barum[]
  bauhe     bauhe[]
}

model barcp {
  keybarcp  String  @id(map: "pkbarcp") @db.Char(15)
  keybarch  String  @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(80)
  timestamp String  @db.Char(10)
  balok     balok[]
  barch     barch   @relation(fields: [keybarch], references: [keybarch], onDelete: Cascade, onUpdate: NoAction, map: "fkbarcpkeybarch ")
  barum     barum[]
  bauhe     bauhe[]

  @@unique([keybarch, code], map: "akbarcp")
}

model barcr {
  keybarcr  String  @id(map: "pkbarcr") @db.Char(15)
  code      String  @unique(map: "akbarcr") @db.VarChar(10)
  caption   String  @db.VarChar(80)
  timestamp String  @db.Char(10)
  balok     balok[]
  barum     barum[]
  bauhe     bauhe[]
}

model barek {
  keybarek  String    @id(map: "pkbarek") @db.Char(15)
  keybaret  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  keycmctc  String?   @db.Char(15)
  keycmrgr  String?   @db.Char(15)
  fdate     DateTime? @db.Date
  tdate     DateTime? @db.Date
  timestamp String    @db.Char(10)
  baret     baret     @relation(fields: [keybaret], references: [keybaret], onUpdate: NoAction, map: "fkbarekkeybaret")
  cmctc     cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbarekkeycmctc")
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbarekkeycmobj")
  cmrgr     cmrgr?    @relation(fields: [keycmrgr], references: [keycmrgr], onDelete: NoAction, onUpdate: NoAction, map: "fkbarekkeycmrgr")

  @@unique([keybaret, keycmobj, keycmctc, keycmrgr, fdate, tdate], map: "akbarek1")
  @@index([keybaret], map: "fkbarekbaret")
  @@index([keycmctc], map: "fkbarekcmctc")
  @@index([keycmobj], map: "fkbarekcmobj")
  @@index([keycmrgr], map: "fkbarekcmrgr")
}

model barel {
  keybarel  String @id(map: "pkbarel") @db.Char(15)
  keycmobj  String @db.Char(15)
  keycmobj2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmobj], map: "fkbarelcmobj")
  @@index([keycmobj2], map: "fkbarelcmobj2")
}

model baret {
  keybaret                     String  @id(map: "pkbaret") @db.Char(15)
  caption                      String  @unique(map: "akbaret1") @db.VarChar(60)
  onlyonce                     Int     @default(1, map: "DF__baret__onlyonce__2AFE3F84") @db.TinyInt
  publish                      Int     @default(1, map: "DF__baret__publish__2BF263BD") @db.TinyInt
  retsort                      Int     @default(0, map: "DF__baret__retsort__2CE687F6") @db.SmallInt
  repabkod                     Int     @default(0, map: "DF__baret__repabkod__2DDAAC2F") @db.TinyInt
  timestamp                    String  @db.Char(10)
  aokat_aokat_keybaretTobaret  aokat[] @relation("aokat_keybaretTobaret")
  aokat_aokat_keybaret2Tobaret aokat[] @relation("aokat_keybaret2Tobaret")
  aopar                        aopar[]
  aopri                        aopri[]
  aorte                        aorte[]
  aotyp                        aotyp[]
  barek                        barek[]
  cmrgr                        cmrgr[]
  fbbkp                        fbbkp[]
  lbbka                        lbbka[]
  skgrp                        skgrp[]
}

model barex {
  keybarex  String  @id(map: "pkbarex") @db.Char(15)
  code      String  @db.VarChar(20)
  caption   String  @db.VarChar(70)
  isactive  Int     @default(1, map: "DF__barex__isactive__6B2D2A27") @db.TinyInt
  timestamp String  @db.Char(10)
  hyinf     hyinf[]
}

model barpl {
  keybarpl                     String @id(map: "pkbarpl") @db.Char(15)
  keycmobj                     String @db.Char(15)
  keycmobj2                    String @db.Char(15)
  timestamp                    String @db.Char(10)
  cmobj_barpl_keycmobjTocmobj  cmobj  @relation("barpl_keycmobjTocmobj", fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkbarplkeycmobj")
  cmobj_barpl_keycmobj2Tocmobj cmobj  @relation("barpl_keycmobj2Tocmobj", fields: [keycmobj2], references: [keycmobj], onUpdate: NoAction, map: "fkbarplkeycmobj2")

  @@unique([keycmobj, keycmobj2], map: "akbarpl1")
  @@index([keycmobj], map: "fkbarplcmobj")
  @@index([keycmobj2], map: "fkbarplcmobj2")
}

model barum {
  keybarum   String    @id(map: "pkbarum") @db.Char(15)
  keycmobj   String    @unique(map: "akbarum1") @db.Char(15)
  keybarut   String?   @db.Char(15)
  keybacat   String?   @db.Char(15)
  keybarch   String?   @db.Char(15)
  keybarcp   String?   @db.Char(15)
  keybarcr   String?   @db.Char(15)
  keyaopla   String?   @db.Char(15)
  keyikmal   String?   @db.Char(15)
  code       String    @db.VarChar(30)
  caption    String?   @db.VarChar(30)
  gemensam   Int       @default(0, map: "DF__barum__gemensam__77D2F82E") @db.TinyInt
  bessort    Int       @default(0, map: "DF__barum__bessort__78C71C67") @db.TinyInt
  skstatus   Int       @default(1, map: "DF__barum__skstatus__79BB40A0") @db.TinyInt
  roomtype   Int       @default(1, map: "DF__barum__roomtype__7AAF64D9") @db.TinyInt
  toilet     Int       @default(0, map: "DF__barum__toilet__7BA38912") @db.TinyInt
  heating    Int       @default(2, map: "DF__barum__heating__7C97AD4B") @db.TinyInt
  thermostat Int       @default(0, map: "DF__barum__thermosta__7D8BD184") @db.TinyInt
  direction  Int       @default(0, map: "DF__barum__direction__7E7FF5BD") @db.TinyInt
  instdate   DateTime? @db.Date
  deletemark Int       @default(0, map: "DF__barum__deletemar__7F7419F6") @db.TinyInt
  fdate      DateTime  @db.DateTime
  tdate      DateTime  @db.DateTime
  availfrom  DateTime? @db.Time
  availto    DateTime? @db.Time
  timestamp  String    @db.Char(10)
  aopla      aopla?    @relation(fields: [keyaopla], references: [keyaopla], onUpdate: NoAction, map: "fkbarumkeyaopla ")
  bacat      bacat?    @relation(fields: [keybacat], references: [keybacat], onUpdate: NoAction, map: "fkbarumkeybacat ")
  barch      barch?    @relation(fields: [keybarch], references: [keybarch], onUpdate: NoAction, map: "fkbarumkeybarch ")
  barcp      barcp?    @relation(fields: [keybarcp], references: [keybarcp], onDelete: NoAction, onUpdate: NoAction, map: "fkbarumkeybarcp ")
  barcr      barcr?    @relation(fields: [keybarcr], references: [keybarcr], onUpdate: NoAction, map: "fkbarumkeybarcr ")
  barut      barut?    @relation(fields: [keybarut], references: [keybarut], onUpdate: NoAction, map: "fkbarumkeybarut ")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbarumkeycmobj ")
  ikmal      ikmal?    @relation(fields: [keyikmal], references: [keyikmal], onUpdate: NoAction, map: "fkbarumkeyikmal ")

  @@index([keyaopla], map: "fkbarumaopla")
  @@index([keybacat], map: "fkbarumbacat")
  @@index([keybarch], map: "fkbarumbarch")
  @@index([keybarcp], map: "fkbarumbarcp")
  @@index([keybarcr], map: "fkbarumbarcr")
  @@index([keybarut], map: "fkbarumbarut")
  @@index([keyikmal], map: "fkbarumikmal")
  @@index([fdate], map: "inbarum_1W10H88YR")
  @@index([tdate], map: "inbarum_1W10H88ZM")
  @@index([code], map: "inbarum_1W10H890J")
  @@index([caption], map: "inbarum_1W10H891T")
}

model barut {
  keybarut   String  @id(map: "pkbarut") @db.Char(15)
  keypuatt   String? @db.Char(15)
  code       String  @unique(map: "akbarut") @db.VarChar(15)
  caption    String? @db.VarChar(60)
  roomtype   Int     @default(0, map: "DF__barut__roomtype__00B256F2") @db.TinyInt
  optitmallo Int     @default(1, map: "DF__barut__optitmall__01A67B2B") @db.TinyInt
  issystem   Int     @default(0, map: "DF__barut__issystem__029A9F64") @db.TinyInt
  ignorewwsv Int     @default(0, map: "DF__barut__ignorewws__038EC39D") @db.TinyInt
  timestamp  String  @db.Char(10)
  barum      barum[]
  puatt      puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbarutkeypuatt ")
  ikrum      ikrum[]
  stkvk      stkvk[]

  @@index([keypuatt], map: "fkbarutpuatt")
}

model bascr {
  keybascr  String  @id(map: "pkbascr") @db.Char(15)
  caption   String  @unique(map: "akbascr") @db.VarChar(100)
  timestamp String  @db.Char(10)
  bafen     bafen[]
  hytds     hytds[]
  hytos     hytos[]
}

model basys {
  keybasys                     String    @id(map: "pkbasys") @db.Char(15)
  keycmobj                     String    @unique(map: "akbasys1") @db.Char(15)
  keybasyt                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  code                         String    @db.VarChar(30)
  caption                      String?   @db.VarChar(60)
  undertyp                     String?   @db.VarChar(60)
  betjanar                     String?   @db.VarChar(60)
  verksamhet                   String?   @db.VarChar(60)
  instdatum                    DateTime? @db.DateTime
  deletemark                   Int       @default(0, map: "DF__basys__deletemar__6E0996D2") @db.TinyInt
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime  @db.DateTime
  timestamp                    String    @db.Char(10)
  basyt                        basyt?    @relation(fields: [keybasyt], references: [keybasyt], onUpdate: NoAction, map: "fkbasyskeybasyt ")
  cmctc_basys_keycmctcTocmctc  cmctc?    @relation("basys_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbasyskeycmctc")
  cmctc_basys_keycmctc2Tocmctc cmctc?    @relation("basys_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbasyskeycmctc2")
  cmobj                        cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbasyskeycmobj")

  @@index([keybasyt], map: "fkbasysbasyt")
  @@index([keycmctc], map: "fkbasyscmctc")
  @@index([keycmctc2], map: "fkbasyscmctc2")
  @@index([fdate], map: "inbasys_1C80HDM3H")
  @@index([tdate], map: "inbasys_1C80HDM3Z")
  @@index([code], map: "inbasys_1C80HDM4S")
  @@index([caption], map: "inbasys_1C80HDM5A")
}

model basyt {
  keybasyt                     String  @id(map: "pkbasyt") @db.Char(15)
  keypuatt                     String? @db.Char(15)
  keycmtyp                     String  @db.Char(15)
  keycmtyp2                    String? @db.Char(15)
  code                         String  @unique(map: "akbasyt") @db.VarChar(15)
  caption                      String? @db.VarChar(60)
  issystem                     Int     @default(0, map: "DF__basyt__issystem__6232EF7C") @db.TinyInt
  timestamp                    String  @db.Char(10)
  aodrs                        aodrs[]
  basys                        basys[]
  cmtyp_basyt_keycmtypTocmtyp  cmtyp   @relation("basyt_keycmtypTocmtyp", fields: [keycmtyp], references: [keycmtyp], onUpdate: NoAction, map: "fkbasytkeycmtyp")
  cmtyp_basyt_keycmtyp2Tocmtyp cmtyp?  @relation("basyt_keycmtyp2Tocmtyp", fields: [keycmtyp2], references: [keycmtyp], onDelete: NoAction, onUpdate: NoAction, map: "fkbasytkeycmtyp2")
  puatt                        puatt?  @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkbasytkeypuatt ")

  @@index([keycmtyp], map: "fkbasytcmtyp")
  @@index([keycmtyp2], map: "fkbasytcmtyp2")
  @@index([keypuatt], map: "fkbasytpuatt")
}

model batep {
  keybatep  String @id(map: "pkbatep") @db.Char(15)
  keycmtep  String @unique(map: "akbatep1") @db.Char(15)
  fldalias  Int    @unique(map: "akbatep2") @default(0, map: "DF__batep__fldalias__3D567088")
  timestamp String @db.Char(10)
  cmtep     cmtep  @relation(fields: [keycmtep], references: [keycmtep], onDelete: Cascade, map: "fkbatepkeycmtep ")
}

model batra {
  keybatra  String  @id(map: "pkbatra") @db.Char(15)
  keybamun  String? @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(30)
  caption2  String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  bamun     bamun?  @relation(fields: [keybamun], references: [keybamun], onUpdate: NoAction, map: "fkbatrakeybamun")

  @@index([keybamun], map: "fkbatrabamun")
}

model batrl {
  keybatrl   String    @id(map: "pkbatrl") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keysyusr   String    @db.Char(15)
  status     Int       @default(0, map: "DF__batrl__status__2220AF0F") @db.TinyInt
  exportdate DateTime  @db.Date
  compdate   DateTime? @db.Date
  timestamp  String    @db.Char(10)

  @@index([keycmobj], map: "fkbatrlcmobj")
  @@index([keysyusr], map: "fkbatrlsyusr")
}

model batxk {
  keybatxk   String   @id(map: "pkbatxk") @db.Char(15)
  batxkkod   String   @unique(map: "akbatxk") @db.Char(4)
  batxkben   String?  @db.VarChar(70)
  taxarallm  Int?     @db.SmallInt
  taxinter   Int?     @db.TinyInt
  skattesats Decimal? @db.Decimal(6, 2)
  sectaxrate Decimal? @db.Decimal(6, 2)
  timestamp  String   @db.Char(10)
  batxv      batxv[]
  batxy      batxy[]
}

model batxv {
  keybatxv   String   @id(map: "pkbatxv") @db.Char(15)
  keycmobj   String   @db.Char(15)
  keybatxk   String?  @db.Char(15)
  taxar      Int      @db.SmallInt
  basvbybo   Float?   @db.Money
  fomrbybo   Decimal? @db.Decimal(3, 2)
  ftaxvbybo  Float?   @db.Money
  fskattbybo Float?   @db.Money
  pomrbybo   Decimal? @db.Decimal(3, 2)
  ptaxvbybo  Float?   @db.Money
  pskattbybo Float?   @db.Money
  basvbylo   Float?   @db.Money
  fomrbylo   Decimal? @db.Decimal(3, 2)
  ftaxvbylo  Float?   @db.Money
  fskattbylo Float?   @db.Money
  pomrbylo   Decimal? @db.Decimal(3, 2)
  ptaxvbylo  Float?   @db.Money
  pskattbylo Float?   @db.Money
  basvmabo   Float?   @db.Money
  fomrmabo   Decimal? @db.Decimal(3, 2)
  ftaxvmabo  Float?   @db.Money
  fskattmabo Float?   @db.Money
  pomrmabo   Decimal? @db.Decimal(3, 2)
  ptaxvmabo  Float?   @db.Money
  pskattmabo Float?   @db.Money
  basvmalo   Float?   @db.Money
  fomrmalo   Decimal? @db.Decimal(3, 2)
  ftaxvmalo  Float?   @db.Money
  fskattmalo Float?   @db.Money
  pomrmalo   Decimal? @db.Decimal(3, 2)
  ptaxvmalo  Float?   @db.Money
  pskattmalo Float?   @db.Money
  skattesats Decimal? @db.Decimal(2, 1)
  timestamp  String   @db.Char(10)
  batxk      batxk?   @relation(fields: [keybatxk], references: [keybatxk], onDelete: NoAction, onUpdate: NoAction, map: "fkbatxvkeybatxk")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbatxvkeycmobj")

  @@unique([keycmobj, keybatxk, taxar], map: "akbatxv")
  @@index([keybatxk], map: "fkbatxvbatxk")
  @@index([keycmobj], map: "fkbatxvcmobj")
}

model batxy {
  keybatxy   String  @id(map: "pkbatxy") @db.Char(15)
  keybatxk   String  @db.Char(15)
  taxyear    Int     @default(0, map: "DF__batxy__taxyear__0C36987F") @db.SmallInt
  freeyear   Int     @default(0, map: "DF__batxy__freeyear__0D2ABCB8") @db.SmallInt
  discyear   Int     @default(0, map: "DF__batxy__discyear__0E1EE0F1") @db.SmallInt
  taxrate    Decimal @default(0, map: "DF__batxy__taxrate__0F13052A") @db.Decimal(6, 2)
  distaxrate Decimal @default(0, map: "DF__batxy__distaxrat__10072963") @db.Decimal(6, 2)
  sectaxrate Decimal @default(0, map: "DF__batxy__sectaxrat__10FB4D9C") @db.Decimal(6, 2)
  unitfee    Decimal @default(0, map: "DF__batxy__unitfee__11EF71D5") @db.Decimal(8, 2)
  disunitfee Decimal @default(0, map: "DF__batxy__disunitfe__12E3960E") @db.Decimal(8, 2)
  timestamp  String  @db.Char(10)
  batxk      batxk   @relation(fields: [keybatxk], references: [keybatxk], onDelete: Cascade, onUpdate: NoAction, map: "fkbatxykeybatxk ")

  @@unique([keybatxk, taxyear], map: "akbatxy")
}

model bauhe {
  keybauhe   String   @id(map: "pkbauhe") @db.Char(15)
  keycmobj   String   @unique(map: "akbauhe1") @db.Char(15)
  keybauht   String?  @db.Char(15)
  keybacat   String?  @db.Char(15)
  keybarch   String?  @db.Char(15)
  keybarcp   String?  @db.Char(15)
  keybarcr   String?  @db.Char(15)
  keyvcacl   String?  @db.Char(15)
  code       String   @db.VarChar(30)
  caption    String?  @db.VarChar(30)
  uppgang    String?  @db.VarChar(20)
  usage      Int      @default(0, map: "DF__bauhe__usage__5550AA1D") @db.TinyInt
  deletemark Int      @default(0, map: "DF__bauhe__deletemar__5644CE56") @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  bacat      bacat?   @relation(fields: [keybacat], references: [keybacat], onUpdate: NoAction, map: "fkbauhekeybacat ")
  barch      barch?   @relation(fields: [keybarch], references: [keybarch], onUpdate: NoAction, map: "fkbauhekeybarch ")
  barcp      barcp?   @relation(fields: [keybarcp], references: [keybarcp], onDelete: NoAction, onUpdate: NoAction, map: "fkbauhekeybarcp ")
  barcr      barcr?   @relation(fields: [keybarcr], references: [keybarcr], onUpdate: NoAction, map: "fkbauhekeybarcr ")
  bauht      bauht?   @relation(fields: [keybauht], references: [keybauht], onUpdate: NoAction, map: "fkbauhekeybauht ")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbauhekeycmobj ")
  vcacl      vcacl?   @relation(fields: [keyvcacl], references: [keyvcacl], onUpdate: NoAction, map: "fkbauhekeyvcacl ")

  @@index([keybacat], map: "fkbauhebacat")
  @@index([keybarch], map: "fkbauhebarch")
  @@index([keybarcp], map: "fkbauhebarcp")
  @@index([keybarcr], map: "fkbauhebarcr")
  @@index([keybauht], map: "fkbauhebauht")
  @@index([keyvcacl], map: "fkbauhevcacl")
  @@index([code], map: "inbauhe_1A00UDL36")
  @@index([caption], map: "inbauhe_1A00UDL45")
  @@index([fdate], map: "inbauhe_1A00UDL5F")
  @@index([tdate], map: "inbauhe_1A00UDL6O")
}

model bauht {
  keybauht  String  @id(map: "pkbauht") @db.Char(15)
  keypuatt  String? @db.Char(15)
  code      String  @unique(map: "akbauht") @db.VarChar(15)
  caption   String? @db.VarChar(60)
  issystem  Int     @default(0, map: "DF__bauht__issystem__5AFBE208") @db.TinyInt
  timestamp String  @db.Char(10)
  bauhe     bauhe[]

  @@index([keypuatt], map: "fkbauhtpuatt")
}

model bauid {
  keybauid  String  @id(map: "pkbauid") @db.Char(15)
  keycmobj  String  @db.Char(15)
  uniqueid  String  @db.UniqueIdentifier
  calias    String? @db.VarChar(50)
  idkind    Int     @default(0, map: "DF__bauid__idkind__6B275CD9") @db.TinyInt
  timestamp String  @db.Char(10)

  @@unique([keycmobj, idkind], map: "akbauid1")
  @@index([uniqueid, calias, keybauid], map: "inbauid_4CY0LVISC")
}

model bavan {
  keybavan   String   @id(map: "pkbavan") @db.Char(15)
  keycmobj   String   @unique(map: "fkbavancmobj") @db.Char(15)
  code       String   @db.VarChar(30)
  caption    String?  @db.VarChar(30)
  vaningplan String?  @db.VarChar(30)
  hissatkom  Int      @default(6, map: "DF__bavan__hissatkom__11BCE763") @db.TinyInt
  deletemark Int      @default(0, map: "DF__bavan__deletemar__12B10B9C") @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbavankeycmobj")

  @@index([fdate], map: "inbavan_1A00UMOLZ")
  @@index([tdate], map: "inbavan_1A00UMONA")
  @@index([code], map: "inbavan_1A00UMOO9")
  @@index([caption], map: "inbavan_1A00UMOPJ")
}

model bavom {
  keybavom  String  @id(map: "pkbavom") @db.Char(15)
  bavomkod  String  @unique(map: "akbavom1") @db.VarChar(10)
  bavomben  String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  bafst     bafst[]
}

model baxyk {
  keybaxyk                     String  @id(map: "pkbaxyk") @db.Char(15)
  keybaxyt                     String? @db.Char(15)
  keycmobj                     String  @db.Char(15)
  keycmobj2                    String  @db.Char(15)
  timestamp                    String  @db.Char(10)
  cmobj_baxyk_keycmobjTocmobj  cmobj   @relation("baxyk_keycmobjTocmobj", fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbaxykkeycmobj ")
  cmobj_baxyk_keycmobj2Tocmobj cmobj   @relation("baxyk_keycmobj2Tocmobj", fields: [keycmobj2], references: [keycmobj], onUpdate: NoAction, map: "fkbaxykkeycmobj2 ")

  @@unique([keycmobj, keycmobj2], map: "akbaxyk")
  @@index([keycmobj], map: "fkbaxykcmobj")
  @@index([keycmobj2], map: "fkbaxykcmobj2")
}

model baxyt {
  keybaxyt   String @id(map: "pkbaxyt") @db.Char(15)
  caption    String @unique(map: "akbaxyt") @db.VarChar(60)
  sellaction Int    @default(0, map: "DF__baxyt__sellactio__38B4393B") @db.TinyInt
  asset      Int    @default(0, map: "DF__baxyt__asset__39A85D74") @db.TinyInt
  conntype   Int    @default(0, map: "DF__baxyt__conntype__3A9C81AD") @db.TinyInt
  timestamp  String @db.Char(10)
}

model bayta {
  keybayta   String   @id(map: "pkbayta") @db.Char(15)
  keycmobj   String   @unique(map: "akbayta1") @db.Char(15)
  keybaytt   String?  @db.Char(15)
  keybabya   String?  @db.Char(15)
  keybabyb   String?  @db.Char(15)
  keybabyc   String?  @db.Char(15)
  keybanbh   String?  @db.Char(15)
  keybablo   String?  @db.Char(15)
  code       String   @db.VarChar(30)
  caption    String?  @db.VarChar(30)
  grade      Int      @default(0, map: "DF__bayta__grade__5DD84EB3") @db.TinyInt
  buildyear  Int?     @db.SmallInt
  deletemark Int      @default(0, map: "DF__bayta__deletemar__5ECC72EC") @db.TinyInt
  fdate      DateTime @db.DateTime
  tdate      DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  bablo      bablo?   @relation(fields: [keybablo], references: [keybablo], onUpdate: NoAction, map: "fkbaytakeybablo ")
  babya      babya?   @relation(fields: [keybabya], references: [keybabya], onUpdate: NoAction, map: "fkbaytakeybabya ")
  babyb      babyb?   @relation(fields: [keybabyb], references: [keybabyb], onUpdate: NoAction, map: "fkbaytakeybabyb ")
  babyc      babyc?   @relation(fields: [keybabyc], references: [keybabyc], onUpdate: NoAction, map: "fkbaytakeybabyc ")
  banbh      banbh?   @relation(fields: [keybanbh], references: [keybanbh], onUpdate: NoAction, map: "fkbaytakeybanbh ")
  baytt      baytt?   @relation(fields: [keybaytt], references: [keybaytt], onUpdate: NoAction, map: "fkbaytakeybaytt")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbaytakeycmobj")

  @@index([keybanbh], map: "fkbaytabanbh")
  @@index([keybaytt], map: "fkbaytabaytt")
  @@index([fdate], map: "inbayta_2M111X7XH")
  @@index([tdate], map: "inbayta_2M111X7XZ")
  @@index([code], map: "inbayta_2M111X7YR")
  @@index([caption], map: "inbayta_2M111X7ZA")
}

model baytt {
  keybaytt  String  @id(map: "pkbaytt") @db.Char(15)
  keypuatt  String? @db.Char(15)
  code      String  @unique(map: "akbaytt1") @db.VarChar(15)
  caption   String? @db.VarChar(60)
  issystem  Int     @default(0, map: "DF__baytt__issystem__6855DD26") @db.TinyInt
  timestamp String  @db.Char(10)
  bayta     bayta[]

  @@index([keypuatt], map: "fkbayttpuatt")
}

model bazad {
  keybazad  String @id(map: "pkbazad") @db.Char(15)
  code      String @unique(map: "akbazad") @db.VarChar(10)
  caption   String @unique(map: "akbazad2") @db.VarChar(250)
  timestamp String @db.Char(10)
}

model bazao {
  keybazao  String @id(map: "pkbazao") @db.Char(15)
  keycmobj  String @db.Char(15)
  keybazav  String @db.Char(15)
  timestamp String @db.Char(10)
  bazav     bazav  @relation(fields: [keybazav], references: [keybazav], onUpdate: NoAction, map: "fkbazaokeybazav ")
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, map: "fkbazaokeycmobj")

  @@unique([keycmobj, keybazav], map: "akbazaokeycmobjkeybazav")
  @@index([keybazav], map: "fkbazaobazav")
}

model bazas {
  keybazas  String  @id(map: "pkbazas") @db.Char(15)
  caption   String  @db.VarChar(70)
  timestamp String  @db.Char(10)
  bazav     bazav[]
}

model bazat {
  keybazat  String  @id(map: "pkbazat") @db.Char(15)
  caption   String  @unique(map: "akbazatcaption") @db.VarChar(70)
  type      Int     @default(1, map: "DF__bazat__type__6F02DAB5") @db.TinyInt
  timestamp String  @db.Char(10)
  bazav     bazav[]
}

model bazav {
  keybazav                     String    @id(map: "pkbazav") @db.Char(15)
  keycmobj                     String    @db.Char(15)
  keyhyobj                     String?   @db.Char(15)
  keybazat                     String    @db.Char(15)
  keybazas                     String?   @db.Char(15)
  keybazdm                     String    @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmctc3                    String?   @db.Char(15)
  keycmctc4                    String?   @db.Char(15)
  keypuund                     String?   @db.Char(15)
  caption                      String    @db.VarChar(250)
  detect                       Int       @default(1, map: "DF__bazav__detect__71DF4760") @db.TinyInt
  detectdate                   DateTime? @db.DateTime
  applydate                    DateTime? @db.DateTime
  preinspect                   Int       @default(0, map: "DF__bazav__preinspec__72D36B99") @db.TinyInt
  performby                    Int       @db.TinyInt
  approval                     Int       @default(0, map: "DF__bazav__approval__73C78FD2") @db.TinyInt
  decidate                     DateTime? @db.DateTime
  restr                        Int       @default(0, map: "DF__bazav__restr__74BBB40B") @db.TinyInt
  duedate                      DateTime? @db.DateTime
  inspection                   Int       @default(0, map: "DF__bazav__inspectio__75AFD844") @db.TinyInt
  status                       Int       @db.TinyInt
  compensate                   Int       @db.TinyInt
  compstatus                   Int       @default(0, map: "DF__bazav__compstatu__76A3FC7D") @db.TinyInt
  wvgmove                      Int       @db.TinyInt
  amount                       Float?    @db.Money
  payprcnt                     Decimal?  @db.Decimal(4, 1)
  deprdate                     DateTime? @db.DateTime
  puliable                     Int       @default(0, map: "DF__bazav__puliable__779820B6") @db.TinyInt
  pulidate                     DateTime? @db.DateTime
  pucreated                    Int       @default(0, map: "DF__bazav__pucreated__788C44EF") @db.TinyInt
  improve                      Int       @default(0, map: "DF__bazav__improve__79806928") @db.TinyInt
  tendersum                    Float?    @db.Money
  tenderdate                   DateTime? @db.DateTime
  tendercost                   Float?    @db.Money
  finishdate                   DateTime? @db.DateTime
  tenderdeb                    Float?    @db.Money
  debstatus                    Int       @db.TinyInt
  sbyappdate                   DateTime? @db.DateTime
  sbygrant                     Int       @default(0, map: "DF__bazav__sbygrant__7A748D61") @db.TinyInt
  sbydecdate                   DateTime? @db.DateTime
  sbyamount                    Float?    @db.Money
  timestamp                    String    @db.Char(10)
  bazao                        bazao[]
  bazas                        bazas?    @relation(fields: [keybazas], references: [keybazas], onDelete: NoAction, onUpdate: NoAction, map: "fkbazavkeybazas ")
  bazat                        bazat     @relation(fields: [keybazat], references: [keybazat], map: "fkbazavkeybazat ")
  bazdm                        bazdm     @relation(fields: [keybazdm], references: [keybazdm], map: "fkbazavkeybazdm")
  cmctc_bazav_keycmctcTocmctc  cmctc?    @relation("bazav_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbazavkeycmctc")
  cmctc_bazav_keycmctc2Tocmctc cmctc?    @relation("bazav_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbazavkeycmctc2")
  cmctc_bazav_keycmctc3Tocmctc cmctc?    @relation("bazav_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbazavkeycmctc3")
  cmctc_bazav_keycmctc4Tocmctc cmctc?    @relation("bazav_keycmctc4Tocmctc", fields: [keycmctc4], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkbazavkeycmctc4")
  cmobj                        cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, map: "fkbazavkeycmobj")
  hyobj                        hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkbazavkeyhyobj")
  puund                        puund?    @relation(fields: [keypuund], references: [keypuund], onDelete: NoAction, onUpdate: NoAction, map: "fkbazavkeypuund")
  lbbes                        lbbes[]

  @@index([keybazat], map: "bazavbazat")
  @@index([keybazdm], map: "bazavbazdm")
  @@index([keycmctc], map: "bazavcmctc")
  @@index([keycmctc2], map: "bazavcmctc2")
  @@index([keycmctc3], map: "bazavcmctc3")
  @@index([keycmctc4], map: "bazavcmctc4")
  @@index([keycmobj], map: "bazavcmobj")
  @@index([keyhyobj], map: "bazavhyobj")
  @@index([keypuund], map: "bazavpuund")
}

model bazdi {
  keybazdi   String  @id(map: "pkbazdi") @db.Char(15)
  keybazdm   String  @db.Char(15)
  intorder   Int     @default(0, map: "DF__bazdi__intorder__4127016C") @db.TinyInt
  rempercent Decimal @default(0, map: "DF__bazdi__rempercen__421B25A5") @db.Decimal(5, 2)
  timestamp  String  @db.Char(10)
  bazdm      bazdm   @relation(fields: [keybazdm], references: [keybazdm], map: "fkbazdikeybazdm ")

  @@index([keybazdm], map: "fkbazdibazdm")
}

model bazdm {
  keybazdm  String  @id(map: "pkbazdm") @db.Char(15)
  keycmuni  String  @db.Char(15)
  caption   String  @unique(map: "akbazdmcaption") @db.VarChar(30)
  interval  Int     @default(0, map: "DF__bazdm__interval__7545C3F0") @db.TinyInt
  timestamp String  @db.Char(10)
  bazav     bazav[]
  bazdi     bazdi[]
  cmuni     cmuni   @relation(fields: [keycmuni], references: [keycmuni], onDelete: Cascade, map: "fkbazdmkeycmuni ")

  @@index([keycmuni], map: "fkbazdmcmuni")
}

model bkadu {
  keybkadu                     String @id(map: "pkbkadu") @db.Char(15)
  keycmctc                     String @db.Char(15)
  keycmctc2                    String @db.Char(15)
  income                       Float  @default(0, map: "DF__bkadu__income__2E21CE63") @db.Money
  assets                       Float  @default(0, map: "DF__bkadu__assets__2F15F29C") @db.Money
  debt                         Float  @default(0, map: "DF__bkadu__debt__300A16D5") @db.Money
  timestamp                    String @db.Char(10)
  cmctc_bkadu_keycmctcTocmctc  cmctc  @relation("bkadu_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkbkadukeycmtc")
  cmctc_bkadu_keycmctc2Tocmctc cmctc  @relation("bkadu_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onUpdate: NoAction, map: "fkbkadukeycmtc2")

  @@index([keycmctc], map: "fkbkchacmctc")
  @@index([keycmctc2], map: "fkbkchacmctc2")
}

model bkalt {
  keybkalt   String   @id(map: "pkbkalt") @db.Char(15)
  keycmctc   String   @db.Char(15)
  keybkerb   String?  @db.Char(15)
  keycmobj   String   @db.Char(15)
  lettertype Int      @db.TinyInt
  senddate   DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  bkerb      bkerb?   @relation(fields: [keybkerb], references: [keybkerb], onDelete: NoAction, onUpdate: NoAction, map: "fkbkaltkeybkerb")
  cmctc      cmctc    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkbkaltkeycmctc")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkbkaltkeycmobj")

  @@index([keybkerb], map: "fkbkaltbkerb")
  @@index([keycmctc], map: "fkbkaltcmctc")
  @@index([keycmobj], map: "fkbkaltcmobj")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bkalt_tmp_PAMSAM {
  keybkalt   String   @db.Char(15)
  keycmctc   String   @db.Char(15)
  keybkerb   String?  @db.Char(15)
  keycmobj   String   @db.Char(15)
  lettertype Int      @db.TinyInt
  senddate   DateTime @db.DateTime
  timestamp  String   @db.Char(10)

  @@ignore
}

model bkans {
  keybkans   String    @id(map: "pkbkans") @db.Char(15)
  keycmqry   String    @unique(map: "akbkans1") @db.Char(15)
  keybkkty   String    @db.Char(15)
  keybkors   String?   @db.Char(15)
  keybkpri   String?   @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyhyobj2  String?   @db.Char(15)
  keybkpuo   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keycmobj   String?   @db.Char(15)
  bkanskod   String    @db.Char(30)
  gennr      Int       @db.TinyInt
  ansokdat   DateTime  @db.DateTime
  periodfrom DateTime  @db.DateTime
  periodtom  DateTime? @db.DateTime
  passiv     Int       @db.TinyInt
  aktiverad  DateTime  @db.DateTime
  avslutdat  DateTime? @db.DateTime
  avslutors  String?   @db.Char(1)
  avslutsign String?   @db.VarChar(80)
  kotid      Float?
  koplats    Int?
  utslag     Int       @default(0, map: "DF__bkans__utslag__7383ED68") @db.TinyInt
  wishedentr DateTime? @db.DateTime
  wishedexp  DateTime? @db.DateTime
  source     Int       @default(1, map: "DF__bkans__source__747811A1") @db.TinyInt
  notify     Int       @default(0, map: "DF__bkans__notify__756C35DA") @db.TinyInt
  chargefrom DateTime? @db.DateTime
  chargeto   DateTime? @db.DateTime
  invpaid    Int       @default(0, map: "DF__bkans__invpaid__76605A13") @db.TinyInt
  reference  String?   @db.VarChar(50)
  labeling   String?   @db.VarChar(50)
  invreceive String?   @db.VarChar(30)
  extcandid  String?   @db.VarChar(100)
  paytype    Int       @default(0, map: "DF__bkans__paytype__77547E4C") @db.TinyInt
  timestamp  String    @db.Char(10)
  cmobj      cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkbkanskeycmobj")
  hyobj      hyobj?    @relation(fields: [keyhyobj2], references: [keyhyobj], onDelete: NoAction, onUpdate: NoAction, map: "fkbkanskeyhyobj2")
  bkapt      bkapt[]
  bkdok      bkdok[]
  bksec      bksec[]

  @@index([keybkkty], map: "fkbkansbkkty")
  @@index([keybkors], map: "fkbkansbkors")
  @@index([keybkpri], map: "fkbkansbkpri")
  @@index([keybkpuo], map: "fkbkansbkpuo")
  @@index([keycmctc], map: "fkbkanscmctc")
  @@index([keycmctc2], map: "fkbkanscmctc2")
  @@index([keycmobj], map: "fkbkanscmobj")
  @@index([keyhyobj], map: "fkbkanshyobj")
  @@index([keyhyobj2], map: "fkbkanshyobj2")
  @@index([keysyusr], map: "fkbkanssyusr")
  @@index([keybkans, keycmctc], map: "inbkans1")
  @@index([keybkans, keybkpri, keybkkty, keycmctc, keycmctc2], map: "inbkans2")
  @@index([periodtom, passiv, periodfrom], map: "inbkans3")
  @@index([avslutdat, keycmqry, keybkans, passiv, periodfrom, periodtom], map: "inbkans4")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bkans_210616_BUversion19 {
  keybkans   String    @db.Char(15)
  keycmqry   String    @db.Char(15)
  keybkkty   String    @db.Char(15)
  keybkors   String?   @db.Char(15)
  keybkpri   String?   @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyhyobj2  String?   @db.Char(15)
  keybkpuo   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keycmobj   String?   @db.Char(15)
  bkanskod   String    @db.Char(30)
  gennr      Int       @db.TinyInt
  ansokdat   DateTime  @db.DateTime
  periodfrom DateTime  @db.DateTime
  periodtom  DateTime? @db.DateTime
  passiv     Int       @db.TinyInt
  aktiverad  DateTime  @db.DateTime
  avslutdat  DateTime? @db.DateTime
  avslutors  String?   @db.Char(1)
  avslutsign String?   @db.VarChar(80)
  kotid      Float?
  koplats    Int?
  utslag     Int       @db.TinyInt
  wishedentr DateTime? @db.DateTime
  wishedexp  DateTime? @db.DateTime
  source     Int       @db.TinyInt
  notify     Int       @db.TinyInt
  chargefrom DateTime? @db.DateTime
  chargeto   DateTime? @db.DateTime
  invpaid    Int       @db.TinyInt
  reference  String?   @db.VarChar(50)
  labeling   String?   @db.VarChar(50)
  invreceive String?   @db.VarChar(30)
  extcandid  String?   @db.VarChar(100)
  paytype    Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

model bkapt {
  keybkapt   String @id(map: "pkbkapt") @db.Char(15)
  keybkans   String @db.Char(15)
  pointsourc Int    @db.TinyInt
  points     Float
  basepoints Int    @default(0, map: "DF__bkapt__basepoint__03373E2A")
  timestamp  String @db.Char(10)
  bkans      bkans  @relation(fields: [keybkans], references: [keybkans], onDelete: Cascade, onUpdate: NoAction, map: "fkbkaptkeybkans")

  @@unique([keybkans, pointsourc], map: "akbkapt1")
  @@index([keybkans], map: "fkbkaptbkans")
}

model bkcar {
  keybkcar   String   @id(map: "pkbkcar") @db.Char(15)
  keycmctc   String   @db.Char(15)
  coapplicnt String   @db.VarChar(120)
  kind       Int      @default(0, map: "DF__bkcar__kind__03E47263") @db.TinyInt
  reqdate    DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  cmctc      cmctc    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkbkcarkeycmctc")

  @@index([keycmctc], map: "fkbkcarcmctc")
}

model bkchi {
  keybkchi                     String @id(map: "pkbkchi") @db.Char(15)
  keycmctc                     String @db.Char(15)
  keycmctc2                    String @db.Char(15)
  assets                       Float  @default(0, map: "DF__bkchi__assets__34CECBF2") @db.Money
  debt                         Float  @default(0, map: "DF__bkchi__debt__35C2F02B") @db.Money
  timestamp                    String @db.Char(10)
  cmctc_bkchi_keycmctcTocmctc  cmctc  @relation("bkchi_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkbkchikeycmctc")
  cmctc_bkchi_keycmctc2Tocmctc cmctc  @relation("bkchi_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onUpdate: NoAction, map: "fkbkchikeycmctc2")

  @@index([keycmctc], map: "fkbkchicmctc")
  @@index([keycmctc2], map: "fkbkchicmctc2")
}

model bkclo {
  keybkclo  String  @id(map: "pkbkclo") @db.Char(15)
  keyprclh  String  @db.Char(15)
  keybkerb  String  @db.Char(15)
  timestamp String  @db.Char(10)
  bkerb     bkerb   @relation(fields: [keybkerb], references: [keybkerb], onDelete: Cascade, onUpdate: NoAction, map: "fkbkclokeybkerb")
  prclh     prclh   @relation(fields: [keyprclh], references: [keyprclh], onUpdate: NoAction, map: "fkbkclokeyprclh")
  bkclr     bkclr[]

  @@index([keybkerb], map: "fkbkclobkerb")
  @@index([keyprclh], map: "fkbkcloprclh")
}

model bkclr {
  keybkclr  String    @id(map: "pkbkclr") @db.Char(15)
  keybkclo  String    @db.Char(15)
  keyprclr  String    @db.Char(15)
  comment   String?   @db.VarChar(200)
  checked   Int       @default(0, map: "DF__bkclr__checked__2BA6D698") @db.TinyInt
  donedate  DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  bkclo     bkclo     @relation(fields: [keybkclo], references: [keybkclo], onDelete: Cascade, onUpdate: NoAction, map: "fkbkclrkeybkclo ")
  prclr     prclr     @relation(fields: [keyprclr], references: [keyprclr], onDelete: Cascade, onUpdate: NoAction, map: "fkbkclrkeyprclr ")

  @@index([keybkclo], map: "fkbkclrbkclo")
  @@index([keyprclr], map: "fkbkclrprclr")
}

model bkctc {
  keybkctc   String    @id(map: "pkbkctc") @db.Char(15)
  keycmctc   String    @unique(map: "akbkctc1") @db.Char(15)
  keycmtyp   String?   @db.Char(15)
  keycmtyp2  String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmqry   String?   @db.Char(15)
  keybkpri   String?   @db.Char(15)
  keybklst   String?   @db.Char(15)
  keybklsr   String?   @db.Char(15)
  arbetsgiv  String?   @db.VarChar(30)
  anstdatum  DateTime? @db.DateTime
  arsinkomst Float?    @db.Money
  arsinkar   Int?      @db.SmallInt
  incomemon  Float?    @db.Money
  assets     Float?    @db.Money
  debt       Float?    @db.Money
  adress1    String?   @db.VarChar(30)
  adress2    String?   @db.VarChar(30)
  telefon    String?   @db.VarChar(30)
  hyresvard  String?   @db.VarChar(30)
  inflyttad  Int?      @db.SmallInt
  inflyttnuv Int?      @db.SmallInt
  boadress1  String?   @db.VarChar(30)
  boadress2  String?   @db.VarChar(30)
  botelefon  String?   @db.VarChar(30)
  antalvuxna Int       @default(1, map: "DF__bkctc__antalvuxn__7DFDB9F5") @db.TinyInt
  antalbarn  Int       @default(0, map: "DF__bkctc__antalbarn__7EF1DE2E") @db.TinyInt
  sparrtom   DateTime? @db.DateTime
  created    DateTime  @db.DateTime
  lastconfir DateTime? @db.DateTime
  regnumber  String?   @db.VarChar(30)
  approval   Int       @default(1, map: "DF__bkctc__approval__7FE60267") @db.TinyInt
  chargefrom DateTime? @db.DateTime
  chargeto   DateTime? @db.DateTime
  soccon     Int       @default(0, map: "DF__bkctc__soccon__00DA26A0") @db.TinyInt
  socconfrom DateTime? @db.DateTime
  socconto   DateTime? @db.DateTime
  socconapp  Int       @default(0, map: "DF__bkctc__socconapp__01CE4AD9") @db.TinyInt
  expbaby    Int?      @db.TinyInt
  expbabydat DateTime? @db.DateTime
  exptwin    Int?      @db.TinyInt
  soccontext String?   @db.VarChar(100)
  birthplace String?   @db.VarChar(30)
  coapplicnt Int       @default(0, map: "DF__bkctc__coapplicn__02C26F12") @db.TinyInt
  homecare   String?   @db.VarChar(30)
  webaccess  Int       @default(0, map: "DF__bkctc__webaccess__03B6934B") @db.TinyInt
  member     Int       @default(0, map: "DF__bkctc__member__04AAB784") @db.TinyInt
  ressaver   Int       @default(0, map: "DF__bkctc__ressaver__059EDBBD") @db.TinyInt
  isinternal Int       @default(0, map: "DF__bkctc__isinterna__0692FFF6") @db.TinyInt
  extnumber  String?   @db.VarChar(30)
  eduinstitu String?   @db.VarChar(60)
  homeless   DateTime? @db.Date
  rentnow    Float?    @db.Money
  norooms    Int?      @db.SmallInt
  cursurface Decimal?  @db.Decimal(14, 2)
  noliving   Int?      @db.SmallInt
  timestamp  String    @db.Char(10)

  @@index([keybklsr], map: "fkbkctcbklsr")
  @@index([keybklst], map: "fkbkctcbklst")
  @@index([keybkpri], map: "fkbkctcbkpri")
  @@index([keycmctc], map: "fkbkctccmctc")
  @@index([keycmctc2], map: "fkbkctccmctc2")
  @@index([keycmqry], map: "fkbkctccmqry")
  @@index([keycmtyp], map: "fkbkctccmtyp")
  @@index([keycmtyp2], map: "fkbkctccmtyp2")
  @@index([keycmctc, keybkctc], map: "inbkctc1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bkctc_medsok_test2 {
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  keybkctc   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmtyp   String?   @db.Char(15)
  keycmtyp2  String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmqry   String?   @db.Char(15)
  keybkpri   String?   @db.Char(15)
  keybklst   String?   @db.Char(15)
  keybklsr   String?   @db.Char(15)
  arbetsgiv  String?   @db.VarChar(30)
  anstdatum  DateTime? @db.DateTime
  arsinkomst Float?    @db.Money
  arsinkar   Int?      @db.SmallInt
  incomemon  Float?    @db.Money
  assets     Float?    @db.Money
  debt       Float?    @db.Money
  adress1    String?   @db.VarChar(30)
  adress2    String?   @db.VarChar(30)
  telefon    String?   @db.VarChar(30)
  hyresvard  String?   @db.VarChar(30)
  inflyttad  Int?      @db.SmallInt
  inflyttnuv Int?      @db.SmallInt
  boadress1  String?   @db.VarChar(30)
  boadress2  String?   @db.VarChar(30)
  botelefon  String?   @db.VarChar(30)
  antalvuxna Int       @db.TinyInt
  antalbarn  Int       @db.TinyInt
  sparrtom   DateTime? @db.DateTime
  created    DateTime  @db.DateTime
  lastconfir DateTime? @db.DateTime
  regnumber  String?   @db.VarChar(30)
  approval   Int       @db.TinyInt
  chargefrom DateTime? @db.DateTime
  chargeto   DateTime? @db.DateTime
  soccon     Int       @db.TinyInt
  socconfrom DateTime? @db.DateTime
  socconto   DateTime? @db.DateTime
  socconapp  Int       @db.TinyInt
  expbaby    Int?      @db.TinyInt
  expbabydat DateTime? @db.DateTime
  exptwin    Int?      @db.TinyInt
  soccontext String?   @db.VarChar(100)
  birthplace String?   @db.VarChar(30)
  coapplicnt Int       @db.TinyInt
  homecare   String?   @db.VarChar(30)
  webaccess  Int       @db.TinyInt
  member     Int       @db.TinyInt
  ressaver   Int       @db.TinyInt
  isinternal Int       @db.TinyInt
  extnumber  String?   @db.VarChar(30)
  eduinstitu String?   @db.VarChar(60)
  homeless   DateTime? @db.Date
  rentnow    Float?    @db.Money
  norooms    Int?      @db.SmallInt
  cursurface Decimal?  @db.Decimal(14, 2)
  noliving   Int?      @db.SmallInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bkctc_medsok_test3 {
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  keybkctc   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmtyp   String?   @db.Char(15)
  keycmtyp2  String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmqry   String?   @db.Char(15)
  keybkpri   String?   @db.Char(15)
  keybklst   String?   @db.Char(15)
  keybklsr   String?   @db.Char(15)
  arbetsgiv  String?   @db.VarChar(30)
  anstdatum  DateTime? @db.DateTime
  arsinkomst Float?    @db.Money
  arsinkar   Int?      @db.SmallInt
  incomemon  Float?    @db.Money
  assets     Float?    @db.Money
  debt       Float?    @db.Money
  adress1    String?   @db.VarChar(30)
  adress2    String?   @db.VarChar(30)
  telefon    String?   @db.VarChar(30)
  hyresvard  String?   @db.VarChar(30)
  inflyttad  Int?      @db.SmallInt
  inflyttnuv Int?      @db.SmallInt
  boadress1  String?   @db.VarChar(30)
  boadress2  String?   @db.VarChar(30)
  botelefon  String?   @db.VarChar(30)
  antalvuxna Int       @db.TinyInt
  antalbarn  Int       @db.TinyInt
  sparrtom   DateTime? @db.DateTime
  created    DateTime  @db.DateTime
  lastconfir DateTime? @db.DateTime
  regnumber  String?   @db.VarChar(30)
  approval   Int       @db.TinyInt
  chargefrom DateTime? @db.DateTime
  chargeto   DateTime? @db.DateTime
  soccon     Int       @db.TinyInt
  socconfrom DateTime? @db.DateTime
  socconto   DateTime? @db.DateTime
  socconapp  Int       @db.TinyInt
  expbaby    Int?      @db.TinyInt
  expbabydat DateTime? @db.DateTime
  exptwin    Int?      @db.TinyInt
  soccontext String?   @db.VarChar(100)
  birthplace String?   @db.VarChar(30)
  coapplicnt Int       @db.TinyInt
  homecare   String?   @db.VarChar(30)
  webaccess  Int       @db.TinyInt
  member     Int       @db.TinyInt
  ressaver   Int       @db.TinyInt
  isinternal Int       @db.TinyInt
  extnumber  String?   @db.VarChar(30)
  eduinstitu String?   @db.VarChar(60)
  homeless   DateTime? @db.Date
  rentnow    Float?    @db.Money
  norooms    Int?      @db.SmallInt
  cursurface Decimal?  @db.Decimal(14, 2)
  noliving   Int?      @db.SmallInt
  timestamp  String    @db.Char(10)

  @@ignore
}

model bkdcc {
  keybkdcc  String @id(map: "pkbkdcc") @db.Char(15)
  keybkdok  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)
  bkdok     bkdok  @relation(fields: [keybkdok], references: [keybkdok], onUpdate: NoAction, map: "fkbkdcckeybkdok")
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkbkdcckeycmctc")

  @@unique([keybkdok, keycmctc], map: "akbkdcc")
  @@index([keybkdok], map: "fkbkdccbkdok")
  @@index([keycmctc], map: "fkbkdcccmctc")
}

model bkdok {
  keybkdok   String    @id(map: "pkbkdok") @db.Char(15)
  keybkans   String    @db.Char(15)
  keydotyp   String    @db.Char(15)
  keydosty   String?   @db.Char(15)
  keydorev   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  obligation Int       @default(0, map: "DF__bkdok__obligatio__5E33CAC7") @db.TinyInt
  removal    Int       @default(0, map: "DF__bkdok__removal__5F27EF00") @db.TinyInt
  approved   Int       @default(0, map: "DF__bkdok__approved__601C1339") @db.TinyInt
  apprdate   DateTime? @db.Date
  comment    String?   @db.VarChar(Max)
  timestamp  String    @db.Char(10)
  bkdcc      bkdcc[]
  bkans      bkans     @relation(fields: [keybkans], references: [keybkans], onDelete: Cascade, onUpdate: NoAction, map: "fkbkdokkeybkans")
  dorev      dorev?    @relation(fields: [keydorev], references: [keydorev], onDelete: NoAction, onUpdate: NoAction, map: "fkbkdokkeydorev")
  dosty      dosty?    @relation(fields: [keydosty], references: [keydosty], onDelete: NoAction, onUpdate: NoAction, map: "fkbkdokkeydosty")
  dotyp      dotyp     @relation(fields: [keydotyp], references: [keydotyp], onUpdate: NoAction, map: "fkbkdokkeydotyp")

  @@index([keybkans], map: "fkbkdokbkans")
  @@index([keydorev], map: "fkbkdokdorev")
  @@index([keydosty], map: "fkbkdokdosty")
  @@index([keydotyp], map: "fkbkdokdotyp")
  @@index([keysyusr], map: "fkbkdoksyusr")
}

model bkdot {
  keybkdot   String  @id(map: "pkbkdot") @db.Char(15)
  keybkkty   String  @db.Char(15)
  keydotyp   String  @db.Char(15)
  keydosty   String? @db.Char(15)
  obligation Int     @default(0, map: "DF__bkdot__obligatio__5786CD38") @db.TinyInt
  removal    Int     @default(0, map: "DF__bkdot__removal__587AF171") @db.TinyInt
  timestamp  String  @db.Char(10)
  bkkty      bkkty   @relation(fields: [keybkkty], references: [keybkkty], onUpdate: NoAction, map: "fkbkdotkeybkkty")
  dosty      dosty?  @relation(fields: [keydosty], references: [keydosty], onDelete: NoAction, onUpdate: NoAction, map: "fkbkdotkeydosty")
  dotyp      dotyp   @relation(fields: [keydotyp], references: [keydotyp], onUpdate: NoAction, map: "fkbkdotkeydotyp")

  @@index([keybkkty], map: "fkbkdotbkkty")
  @@index([keydosty], map: "fkbkdotdosty")
  @@index([keydotyp], map: "fkbkdotdotyp")
}

model bkerb {
  keybkerb   String    @id(map: "pkbkerb") @db.Char(15)
  keybksva   String?   @db.Char(15)
  keybksva2  String?   @db.Char(15)
  keybkans   String?   @db.Char(15)
  keybkero   String    @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyhydsp   String?   @db.Char(15)
  keybkrrn   String?   @db.Char(15)
  bkerbkod   String    @db.VarChar(30)
  utskrivdat DateTime? @db.DateTime
  utskrdest  Int       @default(0, map: "DF__bkerb__utskrdest__09BD474A") @db.TinyInt
  svarsdatum DateTime? @db.DateTime
  ansremdat  DateTime? @db.DateTime
  dispremdat DateTime? @db.DateTime
  ordning    Int       @db.TinyInt
  erbsign    String    @db.VarChar(80)
  utslag     Int       @default(0, map: "DF__bkerb__utslag__0AB16B83") @db.TinyInt
  svasign    String?   @db.VarChar(80)
  quepoints  Decimal?  @db.Decimal(28, 0)
  timestamp  String    @db.Char(10)
  bkalt      bkalt[]
  bkclo      bkclo[]
  bkrrn      bkrrn?    @relation(fields: [keybkrrn], references: [keybkrrn], onDelete: NoAction, onUpdate: NoAction, map: "fkbkerbkeybkrrn")
  bksva      bksva?    @relation(fields: [keybksva2], references: [keybksva], onDelete: NoAction, onUpdate: NoAction, map: "fkbkerbkeybksva2")
  hydsp      hydsp?    @relation(fields: [keyhydsp], references: [keyhydsp], onDelete: NoAction, onUpdate: NoAction, map: "fkbkerbkeyhydsp")

  @@index([keybkans], map: "fkbkerbbkans")
  @@index([keybkero], map: "fkbkerbbkero")
  @@index([keybkrrn], map: "fkbkerbbkrrn")
  @@index([keybksva], map: "fkbkerbbksva")
  @@index([keybksva2], map: "fkbkerbbksva2")
  @@index([keycmctc], map: "fkbkerbcmctc")
  @@index([keycmctc2], map: "fkbkerbcmctc2")
  @@index([keyhydsp], map: "fkbkerbhydsp")
  @@index([keyhyobj], map: "fkbkerbhyobj")
  @@index([keycmctc, keybkerb, keybkero, utslag], map: "inbkerb1")
  @@index([keybksva, keycmctc, keybkerb, keybkero], map: "inbkerb2")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bkerb_tmp_PAMSAM {
  keybkerb   String    @db.Char(15)
  keybksva   String?   @db.Char(15)
  keybksva2  String?   @db.Char(15)
  keybkans   String?   @db.Char(15)
  keybkero   String    @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyhydsp   String?   @db.Char(15)
  bkerbkod   String    @db.VarChar(30)
  utskrivdat DateTime? @db.DateTime
  utskrdest  Int       @db.TinyInt
  svarsdatum DateTime? @db.DateTime
  ansremdat  DateTime? @db.DateTime
  dispremdat DateTime? @db.DateTime
  ordning    Int       @db.TinyInt
  erbsign    String    @db.VarChar(80)
  utslag     Int       @db.TinyInt
  svasign    String?   @db.VarChar(80)
  quepoints  Decimal?  @db.Decimal(28, 0)
  timestamp  String    @db.Char(10)

  @@ignore
}

model bkero {
  keybkero   String    @id(map: "pkbkero") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keyhyuto   String    @db.Char(15)
  bkerokod   String    @db.Char(30)
  keyhyobj   String?   @db.Char(15)
  erbjdatum  DateTime  @db.DateTime
  senastsvar DateTime  @db.DateTime
  orglastans DateTime? @db.DateTime
  avslutad   Int       @db.TinyInt
  timestamp  String    @db.Char(10)
  hyobj      hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkbkerbkeyhyobj")

  @@index([keycmobj], map: "fkbkerocmobj")
  @@index([keyhyobj], map: "fkbkerohyobj")
  @@index([keyhyuto], map: "fkbkerohyuto")
}

model bkfoa {
  keybkfoa   String    @id(map: "PK__bkfoa__23F3538A") @db.Char(15)
  keybkans   String?   @db.Char(15)
  keybkfor   String    @db.Char(15)
  senastsvar DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  svarsdatum DateTime? @db.DateTime

  @@index([keybkans], map: "fkbkfoabkans")
  @@index([keybkfor], map: "fkbkfoabkfor")
}

model bkfor {
  keybkfor   String    @id(map: "pkbkfor") @db.Char(15)
  keybkkty   String?   @db.Char(15)
  sign       String?   @db.VarChar(80)
  signdat    DateTime? @db.DateTime
  senastsvar DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@index([keybkkty], map: "fkbkforbkkty")
}

model bkint {
  keybkint  String @id(map: "PK__bkint__137DBFF6") @db.Char(15)
  keyhyint  String @db.Char(15)
  keybkkty  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keybkkty, keyhyint], map: "akbkint1")
  @@index([keybkkty], map: "fkbkintbkkty")
  @@index([keyhyint], map: "fkbkinthyint")
}

model bkkrl {
  keybkkrl  String @id(map: "PK__bkkrl__5C8D7DBF") @db.Char(15)
  keybkqrl  String @db.Char(15)
  keybkkty  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keybkkty], map: "fkbkkrlbkkty")
  @@index([keybkqrl], map: "fkbkkrlbkqrl")
}

model bkktf {
  keybkktf  String  @id(map: "PK__bkktf__6DF7358C") @db.Char(15)
  keybkkty  String? @db.Char(15)
  keycmcmp  String  @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keybkkty], map: "fkbkktfbkkty")
  @@index([keycmcmp], map: "fkbkktfcmcmp")
}

model bkkty {
  keybkkty   String   @id(map: "pkbkkty") @db.Char(15)
  keycmobt   String   @db.Char(15)
  keycmuni   String?  @db.Char(15)
  keybkkty2  String?  @db.Char(15)
  keybkqrl   String?  @db.Char(15)
  keybkqrl2  String?  @db.Char(15)
  keybkqrl3  String?  @db.Char(15)
  keybkqrl4  String?  @db.Char(15)
  keybkvrt   String?  @db.Char(15)
  keybksva   String?  @db.Char(15)
  keycmemt   String   @db.Char(15)
  keyprclh   String?  @db.Char(15)
  keycmmap   String?  @db.Char(15)
  bkktyben   String?  @db.VarChar(30)
  idrift     Int      @db.TinyInt
  period     Int?     @db.TinyInt
  befhyg     Int      @db.TinyInt
  internal   Int      @default(0, map: "DF__bkkty__internal__526D1260") @db.TinyInt
  cmrestfr   Int      @default(0, map: "DF__bkkty__cmrestfr__53613699") @db.TinyInt
  cmresfact  Decimal? @db.Decimal(5, 2)
  maxinter   Int      @default(0, map: "DF__bkkty__maxinter__54555AD2") @db.TinyInt
  minkont    Int?     @db.SmallInt
  kotidefter Int?     @db.SmallInt
  kundkontr  Int      @db.TinyInt
  tidfrctc   Int      @default(0, map: "DF__bkkty__tidfrctc__55497F0B") @db.TinyInt
  defdest    Int      @default(255, map: "DF__bkkty__defdest__563DA344") @db.TinyInt
  erbjtext1  String?  @db.VarChar(Max)
  erbjtext2  String?  @db.VarChar(Max)
  simoffers  Int      @default(4, map: "DF__bkkty__simoffers__5731C77D") @db.SmallInt
  fornyelse  Int      @db.TinyInt
  fornbrev1  String?  @db.VarChar(Max)
  fornbrev2  String?  @db.VarChar(Max)
  sendermail String?  @db.VarChar(80)
  valbar     Int      @default(0, map: "DF__bkkty__valbar__5825EBB6") @db.TinyInt
  pubdays    Int      @default(0, map: "DF__bkkty__pubdays__591A0FEF") @db.TinyInt
  pubwhen    Int      @default(1, map: "DF__bkkty__pubwhen__5A0E3428") @db.TinyInt
  offdurpubl Int      @default(0, map: "DF__bkkty__offdurpub__5B025861") @db.TinyInt
  avsertyp   Int      @default(0, map: "DF__bkkty__avsertyp__5BF67C9A") @db.TinyInt
  offerdir   Int      @default(0, map: "DF__bkkty__offerdir__5CEAA0D3") @db.TinyInt
  offerrep   Int      @default(0, map: "DF__bkkty__offerrep__5DDEC50C") @db.TinyInt
  offerexcl  Int      @default(0, map: "DF__bkkty__offerexcl__5ED2E945") @db.TinyInt
  maxoffdays Int      @db.SmallInt
  minvacdays Int      @db.SmallInt
  renewfrom  Int      @default(1, map: "DF__bkkty__renewfrom__5FC70D7E") @db.TinyInt
  publrep    Int      @default(0, map: "DF__bkkty__publrep__60BB31B7") @db.TinyInt
  replytime  Int      @default(7, map: "DF__bkkty__replytime__61AF55F0") @db.TinyInt
  termwoffer Int      @default(0, map: "DF__bkkty__termwoffe__62A37A29") @db.TinyInt
  defonnew   Int      @default(0, map: "DF__bkkty__defonnew__63979E62") @db.TinyInt
  randomsort Int      @default(0, map: "DF__bkkty__randomsor__648BC29B") @db.TinyInt
  socpoints  Int?     @db.SmallInt
  calcpoints Int      @default(1, map: "DF__bkkty__calcpoint__657FE6D4") @db.TinyInt
  maxpoints  Int?     @db.SmallInt
  tenapoints Int?     @db.SmallInt
  showpoints Int      @default(0, map: "DF__bkkty__showpoint__66740B0D") @db.TinyInt
  exclfromsu Int      @default(0, map: "DF__bkkty__exclfroms__67682F46") @db.TinyInt
  guarantor  Int      @default(0, map: "DF__bkkty__guarantor__685C537F") @db.TinyInt
  timestamp  String   @db.Char(10)
  bkdot      bkdot[]
  cmmap      cmmap?   @relation(fields: [keycmmap], references: [keycmmap], onUpdate: NoAction, map: "fkbkktykeycmmap")
  prclh      prclh?   @relation(fields: [keyprclh], references: [keyprclh], onDelete: NoAction, onUpdate: NoAction, map: "fkbkktykeyprclh")
  bkmtc      bkmtc[]
  bkwps      bkwps[]
  hyint      hyint[]

  @@index([keybkkty2], map: "fkbkktybkkty2")
  @@index([keybkqrl], map: "fkbkktybkqrl")
  @@index([keybkqrl2], map: "fkbkktybkqrl2")
  @@index([keybkqrl3], map: "fkbkktybkqrl3")
  @@index([keybkqrl4], map: "fkbkktybkqrl4")
  @@index([keybksva], map: "fkbkktybksva")
  @@index([keybkvrt], map: "fkbkktybkvrt")
  @@index([keycmemt], map: "fkbkktycmemt")
  @@index([keycmmap], map: "fkbkktycmmap")
  @@index([keycmobt], map: "fkbkktycmobt")
  @@index([keycmuni], map: "fkbkktycmuni")
  @@index([keyprclh], map: "fkbkktyprclh")
}

model bklgl {
  keybklgl  String  @id(map: "PK__bklgl__0C46B282") @db.Char(15)
  keybabpt  String? @db.Char(15)
  keybalot  String? @db.Char(15)
  keybalgt  String? @db.Char(15)
  keybahyt  String? @db.Char(15)
  keybklgr  String  @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keybabpt], map: "fkbklglbabpt")
  @@index([keybahyt], map: "fkbklglbahyt")
  @@index([keybalgt], map: "fkbklglbalgt")
  @@index([keybalot], map: "fkbklglbalot")
  @@index([keybklgr], map: "fkbklglbklgr")
}

model bklgr {
  keybklgr  String  @id(map: "PK__bklgr__28B808A7") @db.Char(15)
  bklgrkod  String  @db.Char(30)
  bklgrben  String? @db.Char(30)
  keycmobt  String  @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keycmobt], map: "fkbklgrcmobt")
}

model bklsr {
  keybklsr  String @id(map: "pkbklsr") @db.Char(15)
  keybklst  String @db.Char(15)
  keybkpri  String @db.Char(15)
  caption   String @db.VarChar(80)
  timestamp String @db.Char(10)
  bklst     bklst  @relation(fields: [keybklst], references: [keybklst], onDelete: Cascade, onUpdate: NoAction, map: "fkbklsrkeybklst ")
  bkpri     bkpri  @relation(fields: [keybkpri], references: [keybkpri], onDelete: Cascade, onUpdate: NoAction, map: "fkbklsrkeybkpri ")

  @@index([keybklst], map: "fkbklsrbklst")
  @@index([keybkpri], map: "fkbklsrbkpri")
}

model bklst {
  keybklst  String  @id(map: "pkbklst") @db.Char(15)
  caption   String  @db.VarChar(80)
  timestamp String  @db.Char(10)
  bklsr     bklsr[]
}

model bkmat {
  keybkmat  String @id(map: "PK__bkmat__29AC2CE0") @db.Char(15)
  keybkans  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keybkans], map: "fkbkmatbkans")
  @@index([keycmobj], map: "fkbkmatcmobj")
  @@index([keycmobj, keybkans], map: "inbkmat_1FV0KUG4Z")
}

model bkmsp {
  keybkmsp   String    @id(map: "pkbkmsp") @db.Char(15)
  civnumber  String    @db.VarChar(15)
  memberdate DateTime? @db.Date
  saving     Int
  ismember   Int       @default(0, map: "DF__bkmsp__ismember__74B69461") @db.TinyInt
  timestamp  String    @db.Char(10)
}

model bkmtc {
  keybkmtc  String @id(map: "pkbkmtc") @db.Char(15)
  keybkkty  String @db.Char(15)
  keycrumt  String @db.Char(15)
  isdefault Int    @default(0, map: "DF__bkmtc__isdefault__7FC35263") @db.TinyInt
  timestamp String @db.Char(10)
  bkkty     bkkty  @relation(fields: [keybkkty], references: [keybkkty], onDelete: Cascade, onUpdate: NoAction, map: "fkbkmtckeybkkty")
  crumt     crumt  @relation(fields: [keycrumt], references: [keycrumt], onUpdate: NoAction, map: "fkbkmtckeycrumt")

  @@index([keybkkty], map: "fkbkmtcbkkty")
  @@index([keycrumt], map: "fkbkmtccrumt")
}

model bkors {
  keybkors  String @id(map: "PK__bkors__1F997E18") @db.Char(15)
  bkorsben  String @db.Char(30)
  timestamp String @db.Char(10)
}

model bkpri {
  keybkpri  String  @id(map: "PK__bkpri__2181C68A") @db.Char(15)
  bkpriben  String  @db.Char(30)
  ordning   Int?    @db.TinyInt
  timestamp String  @db.Char(10)
  bklsr     bklsr[]
}

model bkpuo {
  keybkpuo   String    @id(map: "pkbkpuo") @db.Char(15)
  keyhyuto   String    @db.Char(15)
  keybkkty   String    @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyhyvct   String?   @db.Char(15)
  keycmmap   String?   @db.Char(15)
  fdate      DateTime  @db.DateTime
  tdate      DateTime? @db.DateTime
  vacantfrom DateTime? @db.DateTime
  vacantto   DateTime? @db.DateTime
  avpub      Int       @default(0, map: "DF__bkpuo__avpub__20C7A111") @db.TinyInt
  quelen     Int       @default(0, map: "DF__bkpuo__quelen__21BBC54A") @db.SmallInt
  extstatus  Int       @default(0, map: "DF__bkpuo__extstatus__22AFE983") @db.TinyInt
  timestamp  String    @db.Char(10)
  cmmap      cmmap?    @relation(fields: [keycmmap], references: [keycmmap], onUpdate: NoAction, map: "fkbkpuokeycmmap")
  hyvct      hyvct?    @relation(fields: [keyhyvct], references: [keyhyvct], onUpdate: NoAction, map: "fkbkpuokeyhyvct ")
  hyims      hyims[]
  hyprc      hyprc[]

  @@index([keybkkty], map: "fkbkpuobkkty")
  @@index([keycmmap], map: "fkbkpuocmmap")
  @@index([keyhyobj], map: "fkbkpuohyobj")
  @@index([keyhyuto], map: "fkbkpuohyuto")
}

model bkqrl {
  keybkqrl   String @id(map: "PK__bkqrl__7306CEC3") @db.Char(15)
  caption    String @db.Char(30)
  ruletype   Int    @db.TinyInt
  period     Int    @db.TinyInt
  perioddays Int    @db.SmallInt
  action     Int    @db.TinyInt
  restrdays  Int    @db.SmallInt
  limit      Int    @default(0, map: "DF__bkqrl__limit__73FAF2FC") @db.SmallInt
  timestamp  String @db.Char(10)
}

model bkqte {
  keybkqte   String    @id(map: "pkbkqte") @db.Char(15)
  keybkkty   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@unique([keybkkty, keycmctc], map: "akbkqte1")
  @@index([keycmctc], map: "fkbkqtecmctc")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bkqte_DRN210421 {
  keybkqte   String    @db.Char(15)
  keybkkty   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bkqte_PA210210 {
  keybkqte   String    @db.Char(15)
  keybkkty   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bkqte_PA210219 {
  keybkqte   String    @db.Char(15)
  keybkkty   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@ignore
}

model bkrrn {
  keybkrrn  String  @id(map: "pkbkrrn") @db.Char(15)
  caption   String  @unique(map: "akbkrrn") @db.VarChar(200)
  timestamp String  @db.Char(10)
  bkerb     bkerb[]
}

model bksec {
  keybksec                     String  @id(map: "pkbksec") @db.Char(15)
  keybkans                     String  @db.Char(15)
  keycmctc                     String  @db.Char(15)
  keycmctc2                    String? @db.Char(15)
  timestamp                    String  @db.Char(10)
  bkans                        bkans   @relation(fields: [keybkans], references: [keybkans], onDelete: Cascade, onUpdate: NoAction, map: "fkbkseckeybkans")
  cmctc_bksec_keycmctcTocmctc  cmctc   @relation("bksec_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkbkseckeycmctc")
  cmctc_bksec_keycmctc2Tocmctc cmctc?  @relation("bksec_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkbkseckeycmctc2")

  @@index([keybkans], map: "fkbksecbkans")
  @@index([keycmctc], map: "fkbkseccmctc")
  @@index([keycmctc2], map: "fkbkseccmctc2")
}

model bksva {
  keybksva  String  @id(map: "PK__bksva__38852773") @db.Char(15)
  keybkqrl  String? @db.Char(15)
  bksvakod  String? @db.Char(30)
  bksvaben  String? @db.Char(30)
  innebord  Int     @db.TinyInt
  repabkod  String? @db.Char(1)
  timestamp String  @db.Char(10)
  bkerb     bkerb[]

  @@index([keybkqrl], map: "fkbksvabkqrl")
}

model bktfr {
  keybktfr  String    @id(map: "PK__bktfr__2922E852") @db.Char(15)
  keybkkty  String    @db.Char(15)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  factor    Decimal   @default(1, map: "DF__bktfr__factor__2A170C8B") @db.Decimal(5, 2)
  timestamp String    @db.Char(10)

  @@index([keybkkty], map: "fkbktfrbkkty")
}

model bktrd {
  keybktrd   String @id(map: "pkbktrd") @db.Char(15)
  keyhyevt   String @db.Char(15)
  keyhyobj   String @db.Char(15)
  isexecuted Int    @default(0, map: "DF__bktrd__isexecute__1B1C346B") @db.TinyInt
  timestamp  String @db.Char(10)
  hyevt      hyevt  @relation(fields: [keyhyevt], references: [keyhyevt], onDelete: Cascade, onUpdate: NoAction, map: "fkbktrdkeyhyevt ")
  hyobj      hyobj  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkbktrdkeyhyobj")

  @@index([keyhyevt], map: "fkbktrdhyevt")
  @@index([keyhyobj], map: "fkbktrdhyobj")
}

model bkvrt {
  keybkvrt  String @id(map: "pkbkvrt") @db.Char(15)
  keyrevrt  String @db.Char(15)
  keyfadbt  String @db.Char(15)
  keycmcmp  String @db.Char(15)
  keycmart  String @db.Char(15)
  caption   String @db.Char(30)
  feetype   Int    @default(1, map: "DF__bkvrt__feetype__0B175B31") @db.TinyInt
  period    Int    @default(0, map: "DF__bkvrt__period__0C0B7F6A") @db.TinyInt
  paycond   Int    @default(30, map: "DF__bkvrt__paycond__0CFFA3A3") @db.TinyInt
  expires   Int    @default(1, map: "DF__bkvrt__expires__0DF3C7DC") @db.TinyInt
  expmonth  Int    @default(0, map: "DF__bkvrt__expmonth__0EE7EC15") @db.TinyInt
  expday    Int    @default(0, map: "DF__bkvrt__expday__0FDC104E") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keycmart], map: "fkbkvrtcmart")
  @@index([keycmcmp], map: "fkbkvrtcmcmp")
  @@index([keyfadbt], map: "fkbkvrtfadbt")
  @@index([keyrevrt], map: "fkbkvrtrevrt")
}

model bkwps {
  keybkwps   String  @id(map: "pkbkwps") @db.Char(15)
  keybkkty   String  @db.Char(15)
  pointsourc Int     @db.TinyInt
  prioorder  Int     @db.TinyInt
  prmvalue   Decimal @default(0, map: "DF__bkwps__prmvalue__0D182DD7") @db.Decimal(10, 2)
  prmfunc    Int     @default(0, map: "DF__bkwps__prmfunc__0E0C5210") @db.TinyInt
  timestamp  String  @db.Char(10)
  bkkty      bkkty   @relation(fields: [keybkkty], references: [keybkkty], onDelete: Cascade, onUpdate: NoAction, map: "fkbkwpskeybkkty")

  @@unique([keybkkty, pointsourc], map: "akbkwps1")
  @@index([keybkkty], map: "fkbkwpsbkkty")
}

model bradc {
  keybradc  String @id(map: "PK__bradc__0E2EFAF4") @db.Char(15)
  keycmsom  String @db.Char(15)
  keyrevrt  String @db.Char(15)
  keycmcmp  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keycmsom, keyrevrt], map: "akbradc1")
  @@index([keycmcmp], map: "fkbradccmcmp")
  @@index([keycmsom], map: "fkbradccmsom")
  @@index([keyrevrt], map: "fkbradcrevrt")
}

model braga {
  keybraga  String @id(map: "pkbraga") @db.Char(15)
  keybragp  String @db.Char(15)
  account   String @db.Char(10)
  timestamp String @db.Char(10)
  bragp     bragp  @relation(fields: [keybragp], references: [keybragp], onUpdate: NoAction, map: "fkbragakeybragp")

  @@index([keybragp], map: "fkbragabragp")
}

model bragc {
  keybragc    String  @id(map: "pkbragc") @db.Char(15)
  keybragc2   String? @db.Char(15)
  accgroup    Int     @default(0, map: "DF__bragc__accgroup__27ECC8AF") @db.TinyInt
  section     String  @db.VarChar(60)
  cvaluegp    String  @db.VarChar(60)
  note        String? @db.VarChar(80)
  timestamp   String  @db.Char(10)
  bragc       bragc?  @relation("bragcTobragc", fields: [keybragc2], references: [keybragc], onDelete: NoAction, onUpdate: NoAction, map: "fkbragckeybragc2")
  other_bragc bragc[] @relation("bragcTobragc")
  bragp       bragp[]
  brcdc       brcdc[]
  brdkh       brdkh[]

  @@index([keybragc2], map: "fkbragcbragc")
}

model bragp {
  keybragp  String  @id(map: "pkbragp") @db.Char(15)
  keybragc  String  @db.Char(15)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  braga     braga[]
  bragc     bragc   @relation(fields: [keybragc], references: [keybragc], onDelete: Cascade, onUpdate: NoAction, map: "fkbragpkeybragc")

  @@index([keybragc], map: "fkbrcddbragc")
}

model bramo {
  keybramo  String    @id(map: "pkbramo") @db.Char(15)
  keycmcmp  String    @db.Char(15)
  year      Int       @db.SmallInt
  amount    Float     @db.Money
  repaydate DateTime? @db.Date
  text      String?   @db.Char(100)
  timestamp String    @db.Char(10)
  cmcmp     cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkbramokeycmcmp")

  @@index([keycmcmp], map: "fkbramocmcmp")
}

model brcap {
  keybrcap  String   @id(map: "pkbrcap") @db.Char(15)
  keycmobj  String   @db.Char(15)
  keycmctc  String   @db.Char(15)
  paydate   DateTime @db.Date
  amount    Float    @db.Money
  timestamp String   @db.Char(10)

  @@index([keycmctc], map: "fkbrcapcmctc")
  @@index([keycmobj], map: "fkbrcapcmobj")
}

model brcdb {
  keybrcdb   String    @id(map: "pkbrcdb") @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keysyusr2  String?   @db.Char(15)
  version    Int       @db.TinyInt
  year       Int       @db.SmallInt
  status     Int       @db.TinyInt
  sendzero   Int       @db.TinyInt
  purpose    Int       @db.TinyInt
  totaxdate  DateTime? @db.DateTime
  tocustdate DateTime? @db.DateTime
  rfsdate    DateTime? @db.DateTime
  rfrdate    DateTime? @db.DateTime
  importdate DateTime? @db.DateTime
  commcount  Int?      @db.SmallInt
  errorcount Int?      @db.SmallInt
  finacdate  DateTime? @db.DateTime
  finacval1  Float?    @db.Money
  finacval2  Float?    @db.Money
  finacval3  Float?    @db.Money
  finacval4  Float?    @db.Money
  finacval5  Float?    @db.Money
  accomment  String?   @db.VarChar(2000)
  timestamp  String    @db.Char(10)
  cmcmp      cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkbrcdbkeycmcmp ")
  brcdc      brcdc[]
  brcdt      brcdt[]

  @@index([keycmcmp], map: "fkbrcdbcmcmp")
  @@index([keysyusr], map: "fkbrcdbsyusr")
  @@index([keysyusr2], map: "fkbrcdbsyusr2")
  @@index([year], map: "fkbrcdbyear")
}

model brcdc {
  keybrcdc  String  @id(map: "pkbrcdc") @db.Char(15)
  keybrcdb  String  @db.Char(15)
  keybragc  String  @db.Char(15)
  accountgp String  @db.VarChar(60)
  newamnt   Float   @db.Money
  calcamnt  Float   @db.Money
  finacamnt Float?  @db.Money
  note      String? @db.VarChar(80)
  timestamp String  @db.Char(10)
  bragc     bragc   @relation(fields: [keybragc], references: [keybragc], onUpdate: NoAction, map: "fkbrcdckeybragc")
  brcdb     brcdb   @relation(fields: [keybrcdb], references: [keybrcdb], onDelete: Cascade, onUpdate: NoAction, map: "fkbrcdckeybrcdb ")

  @@index([keybragc], map: "fkbrcdcbragc")
  @@index([keybrcdb], map: "fkbrcdcbrcdb")
}

model brcdd {
  keybrcdd  String @id(map: "pkbrcdd") @db.Char(15)
  keybrcdt  String @db.Char(15)
  caption   String @db.VarChar(20)
  value     Float  @db.Money
  timestamp String @db.Char(10)
  brcdt     brcdt  @relation(fields: [keybrcdt], references: [keybrcdt], onDelete: Cascade, onUpdate: NoAction, map: "fkbrcddkeybrcdt")

  @@index([keybrcdt], map: "fkbrcddbrcdt")
}

model brcdt {
  keybrcdt   String   @id(map: "pkbrcdt") @db.Char(15)
  keybrcdb   String   @db.Char(15)
  keycmctc   String   @db.Char(15)
  keycmobj   String   @db.Char(15)
  objcode    String   @db.VarChar(30)
  cmctccode  String   @db.VarChar(30)
  persorgnr  String?  @db.VarChar(15)
  sublmonth  Int      @db.TinyInt
  ownfdate   DateTime @db.DateTime
  owntdate   DateTime @db.DateTime
  intinc     Float    @db.Money
  orinc1     Float    @db.Money
  orinc2     Float    @db.Money
  suminc     Float    @db.Money
  intcost    Float    @db.Money
  orcost1    Float    @db.Money
  orcost2    Float    @db.Money
  sumcost    Float    @db.Money
  intleil    Float    @db.Money
  intprleil  Float    @db.Money
  sumintleil Float    @db.Money
  orbnft     Float    @db.Money
  debt       Float    @db.Money
  orbnft1    Float    @db.Money
  orbnft2    Float    @db.Money
  assdval    Float    @db.Money
  assdvalp   Float    @db.Money
  sumdist    Float    @db.Money
  debtleil   Float    @db.Money
  debtprleil Float    @db.Money
  ordebt1    Float    @db.Money
  ordebt2    Float    @db.Money
  pdebt      Float    @db.Money
  sumdebt    Float    @db.Money
  redistcost Int      @default(0, map: "DF__brcdt__redistcos__317632E9") @db.TinyInt
  ownershare Decimal  @default(0, map: "DF__brcdt__ownershar__326A5722") @db.Decimal(6, 3)
  timestamp  String   @db.Char(10)
  brcdd      brcdd[]
  brcdb      brcdb    @relation(fields: [keybrcdb], references: [keybrcdb], onUpdate: NoAction, map: "fkbrcdtkeybrcdb")
  cmctc      cmctc    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkbrcdtkeycmctc")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkbrcdtkeycmobj")

  @@index([keybrcdb], map: "fkbrcdtbrcdb")
  @@index([keycmctc], map: "fkbrcdtcmctc")
  @@index([keycmobj], map: "fkbrcdtcmobj")
}

model brdiv {
  keybrdiv  String @id(map: "pkbrdiv") @db.Char(15)
  keycmcmp  String @db.Char(15)
  year      Int    @db.SmallInt
  amount    Float  @db.Money
  timestamp String @db.Char(10)

  @@unique([keycmcmp, year], map: "akbrdiv1")
  @@index([keycmcmp], map: "fkbrdivcmcmp")
}

model brdkh {
  keybrdkh  String  @id(map: "pkbrdkh") @db.Char(15)
  keybragc  String  @db.Char(15)
  keycmcmp  String  @db.Char(15)
  year      Int     @db.SmallInt
  timestamp String  @db.Char(10)
  bragc     bragc   @relation(fields: [keybragc], references: [keybragc], onDelete: Cascade, onUpdate: NoAction, map: "fkbrdkhkeybragc")
  cmcmp     cmcmp   @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkbrdkhkeycmcmp ")
  brdkr     brdkr[]

  @@index([keybragc], map: "fkbrdkhbragc")
  @@index([keycmcmp], map: "fkbrdkhcmcmp")
}

model brdkr {
  keybrdkr  String  @id(map: "pkbrdkr") @db.Char(15)
  keybrdkh  String  @db.Char(15)
  keycmart  String? @db.Char(15)
  keycmvat  String? @db.Char(15)
  disttype  Int     @db.TinyInt
  timestamp String  @db.Char(10)
  brdkh     brdkh   @relation(fields: [keybrdkh], references: [keybrdkh], onUpdate: NoAction, map: "fkbrdkrkeybrdkh")
  cmart     cmart?  @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkbrdkrkeycmart")
  cmvat     cmvat?  @relation(fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkbrdkrkeycmvat")

  @@index([keybrdkh], map: "fkbrdkrbrdkh")
  @@index([keycmart], map: "fkbrdkrcmart")
  @@index([keycmvat], map: "fkbrdkrcmvat")
}

model brfat {
  keybrfat  String @id(map: "PK__brfat__71C7C670") @db.Char(15)
  caption   String @db.Char(30)
  disposal  Int    @db.TinyInt
  gensoi    Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@unique([caption, disposal], map: "akbrfat1")
}

model brflg {
  keybrflg  String   @id(map: "pkbrflg") @db.Char(15)
  keysyusr  String?  @db.Char(15)
  keycmcmp  String?  @db.Char(15)
  signatur  String   @db.VarChar(80)
  year      Int      @db.SmallInt
  fdate     DateTime @db.DateTime
  incr      Int      @db.TinyInt
  amount    Float    @db.Money
  actamount Float?   @db.Money
  timestamp String   @db.Char(10)

  @@index([keycmcmp], map: "fkbrflgcmcmp")
  @@index([keysyusr], map: "fkbrflgsyusr")
}

model brfnd {
  keybrfnd  String   @id(map: "pkbrfnd") @db.Char(15)
  keybrflg  String   @db.Char(15)
  keycmobj  String   @db.Char(15)
  keyhyobj  String?  @db.Char(15)
  fdatetime DateTime @db.DateTime
  fdate     DateTime @db.DateTime
  incr      Int      @db.TinyInt
  incamount Float?   @db.Money
  redamount Float?   @db.Money
  totamount Float?   @db.Money
  timestamp String   @db.Char(10)

  @@index([keybrflg], map: "fkbrfndbrflg")
  @@index([keycmobj], map: "fkbrfndcmobj")
  @@index([keyhyobj], map: "fkbrfndhyobj")
  @@index([fdate, incr, keycmobj, keybrfnd], map: "inbrfnd_22D0WQBHN")
  @@index([keycmobj, fdate, incr], map: "inbrfnd1")
}

model brfok {
  keybrfok  String @id(map: "PK__brfok__77809FC6") @db.Char(15)
  keyhyobj  String @db.Char(15)
  keyhyobj2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keyhyobj], map: "fkbrfokhyobj")
  @@index([keyhyobj2], map: "fkbrfokhyobj2")
}

model brfor {
  keybrfor   String @id(map: "PK__brfor__184D620B") @db.Char(15)
  keycmcmp   String @db.Char(15)
  year       Int    @db.SmallInt
  cumulasset Float? @db.Money
  shareasset Float? @db.Money
  invasset   Float? @db.Money
  miscasset  Float? @db.Money
  shortdebt  Float? @db.Money
  longdebt   Float? @db.Money
  netdebt    Float? @db.Money
  assessval  Float? @db.Money
  amount     Float  @db.Money
  timestamp  String @db.Char(10)

  @@index([keycmcmp], map: "fkbrforcmcmp")
}

model brkup {
  keybrkup   String    @id(map: "pkbrkup") @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keybrovh   String?   @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  code       String    @db.Char(30)
  year       Int       @db.SmallInt
  brkut      String    @db.Char(1)
  formvarde  Float?    @db.Money
  buyamount  Float?    @db.Money
  sellamount Float?    @db.Money
  buyshare   Decimal?  @db.Decimal(8, 3)
  sellshare  Decimal?  @db.Decimal(8, 3)
  buydate    DateTime? @db.DateTime
  selldate   DateTime? @db.DateTime
  buyfund    Float?    @db.Money
  sellfund   Float?    @db.Money
  partsold   Int?      @db.TinyInt
  kaptillsk  Float?    @db.Money
  individadd Float?    @db.Money
  oformvarde Float?    @db.Money
  nokupbuy   Int?      @db.TinyInt
  expdate    DateTime? @db.DateTime
  printdate  DateTime? @db.DateTime
  korrdate   DateTime? @db.DateTime
  voiddate   DateTime? @db.DateTime
  descrcalc  String?   @db.VarChar(Max)
  missingcap Int       @default(0, map: "DF__brkup__missingca__7793010C") @db.TinyInt
  regenerate Int       @default(1, map: "DF__brkup__regenerat__78872545") @db.TinyInt
  timestamp  String    @db.Char(10)

  @@unique([code, brkut], map: "akbrkup1")
  @@unique([keycmctc, year, brkut, keycmobj, keybrovh, voiddate], map: "akbrkup2")
  @@index([keybrovh], map: "fkbrkupbrovh")
  @@index([keycmcmp], map: "fkbrkupcmcmp")
  @@index([keycmctc], map: "fkbrkupcmctc")
  @@index([keycmctc2], map: "fkbrkupcmctc2")
  @@index([keycmobj], map: "fkbrkupcmobj")
  @@index([brkut, year, selldate], map: "inbrkup_1GO0KT393")
}

model brmed {
  keybrmed  String @id(map: "PK__brmed__7B5130AA") @db.Char(15)
  keycmcmp  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keycmcmp, keycmctc], map: "akbrmed1")
  @@index([keycmcmp], map: "fkbrmedcmcmp")
  @@index([keycmctc], map: "fkbrmedcmctc")
}

model brovh {
  keybrovh  String   @id(map: "pkbrovh") @db.Char(15)
  keybrfat  String   @db.Char(15)
  keycmobj  String   @db.Char(15)
  keyhyobj  String?  @db.Char(15)
  keyhyobj2 String   @db.Char(15)
  date      DateTime @db.DateTime
  noamount  Int      @db.TinyInt
  amount    Float?   @db.Money
  share     Decimal? @db.Decimal(6, 3)
  timestamp String   @db.Char(10)

  @@index([keybrfat], map: "fkbrovhbrfat")
  @@index([keycmobj], map: "fkbrovhcmobj")
  @@index([keyhyobj], map: "fkbrovhhyobj")
  @@index([keyhyobj2], map: "fkbrovhhyobj2")
}

model brovr {
  keybrovr  String  @id(map: "pkbrovr") @db.Char(15)
  keybrovh  String  @db.Char(15)
  keyhyavk  String  @db.Char(15)
  disposal  Int     @db.TinyInt
  share     Decimal @db.Decimal(6, 3)
  amount    Float   @db.Money
  timestamp String  @db.Char(10)

  @@index([keybrovh], map: "fkbrovrbrovh")
  @@index([keyhyavk], map: "fkbrovrhyavk")
}

model brpnt {
  keybrpnt   String    @id(map: "pkbrpnt") @db.Char(15)
  keyhyinf   String    @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  signatur   String    @db.VarChar(80)
  created    DateTime? @db.DateTime
  iouno      String?   @db.VarChar(30)
  amount     Float     @db.Money
  fdate      DateTime  @db.DateTime
  tdate      DateTime? @db.DateTime
  text       String?   @db.VarChar(100)
  sortorder  Int?      @db.TinyInt
  allowinv   Int       @default(1, map: "DF__brpnt__allowinv__773482BB") @db.TinyInt
  confirbank DateTime? @db.DateTime
  canceldate DateTime? @db.DateTime
  mortgtype  Int?      @default(0, map: "DF__brpnt__mortgtype__7828A6F4") @db.TinyInt
  timestamp  String    @db.Char(10)

  @@index([keycmctc], map: "fkbrpntcmctc")
  @@index([keyhyinf], map: "fkbrpnthyinf")
  @@index([keyhyobj], map: "fkbrpnthyobj")
  @@index([keysyusr], map: "fkbrpntsyusr")
}

model brshc {
  keybrshc  String    @id(map: "pkbrshc") @db.Char(15)
  keycmobj  String    @db.Char(15)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  shcvalue  Decimal   @db.Decimal(10, 7)
  timestamp String    @db.Char(10)

  @@index([keycmobj], map: "fkbrshccmobj")
}

model brtax {
  keybrtax  String @id(map: "pkbrtax") @db.Char(15)
  keycmcmp  String @db.Char(15)
  year      Int    @db.SmallInt
  taxamount Float  @db.Money
  timestamp String @db.Char(10)

  @@unique([keycmcmp, year], map: "akbrtax1")
  @@index([keycmcmp], map: "fkbrtaxcmcmp")
}

model brupd {
  keybrupd   String    @id(map: "pkbrupd") @db.Char(15)
  keybrupd2  String?   @db.Char(15)
  keycmobj   String    @db.Char(15)
  prodmonths Int       @default(1, map: "DF__brupd__prodmonth__50EADAAA") @db.TinyInt
  prodstop   Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  extype     Int?      @db.TinyInt
  demandstop Int       @default(0, map: "DF__brupd__demandsto__51DEFEE3") @db.TinyInt
  fecallduty Int       @default(0, map: "DF__brupd__fecalldut__52D3231C") @db.TinyInt
  feetrans   Int       @default(1, map: "DF__brupd__feetrans__53C74755") @db.TinyInt
  feemortg   Int       @default(1, map: "DF__brupd__feemortg__54BB6B8E") @db.TinyInt
  adminmortg Int       @default(1, map: "DF__brupd__adminmort__55AF8FC7") @db.TinyInt
  fundoninv  Int       @default(1, map: "DF__brupd__fundoninv__56A3B400") @db.TinyInt
  maxperiods Int       @default(11, map: "DF__brupd__maxperiod__5797D839") @db.TinyInt
  fdate      DateTime  @db.DateTime
  tdate      DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@index([keybrupd2], map: "fkbrupdbrupd2")
  @@index([keycmobj], map: "fkbrupdcmobj")
}

model bsacc {
  keybsacc  String @id(map: "PK__bsacc__13E7D44A") @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  keybsdef  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keybsdef], map: "fkbsaccbsdef")
  @@index([keycode], map: "fkbsacccode")
  @@index([keydbtbl], map: "fkbsaccdbtbl")
}

model bsctr {
  keybsctr   String  @id(map: "pkbsctr") @db.Char(15)
  keybsdef   String  @db.Char(15)
  keycmqry   String? @db.Char(15)
  keysyomo   String? @db.Char(15)
  ctrname    String  @db.VarChar(110)
  ctrtype    Int
  ctrpage    Int
  ctrx       Float
  ctrgroup   String  @db.VarChar(30)
  ctrorder   Int
  ctry       Float
  ctrw       Float
  ctrh       Float
  ctrentry   String? @db.VarChar(80)
  ctrmulti   String? @db.VarChar(Max)
  ctrdisp    Int?
  ctrautoadd Int     @db.TinyInt
  obligatory Int     @default(0, map: "DF__bsctr__obligator__7B6391F0") @db.TinyInt
  valtype    Int     @db.TinyInt
  userdef    Int     @default(0, map: "DF__bsctr__userdef__7C57B629") @db.TinyInt
  loadkind   Int     @default(0, map: "DF__bsctr__loadkind__7D4BDA62") @db.TinyInt
  islegacy   Int     @default(0, map: "DF__bsctr__islegacy__7E3FFE9B") @db.TinyInt
  valgrppth  String? @db.VarChar(400)
  timestamp  String  @db.Char(10)

  @@index([keybsdef], map: "fkbsctrbsdef")
  @@index([keycmqry], map: "fkbsctrcmqry")
  @@index([keysyomo], map: "fkbsctrsyomo")
}

model bsdef {
  keybsdef                     String  @id(map: "pkbsdef") @db.Char(15)
  keysymdl                     String  @db.Char(15)
  keydbtbl                     String  @db.Char(15)
  keycmrpt                     String? @db.Char(15)
  keydotyp                     String? @db.Char(15)
  keydosty                     String? @db.Char(15)
  def                          String  @db.VarChar(30)
  defben                       String  @db.VarChar(200)
  doctype                      String? @db.VarChar(100)
  defsubject                   String? @db.VarChar(100)
  deflegal                     Int     @default(0, map: "DF__bsdef__deflegal__3E1C00F0") @db.TinyInt
  defdest                      Int     @default(1, map: "DF__bsdef__defdest__3F102529") @db.TinyInt
  defused                      Int     @db.TinyInt
  digisign                     Int     @default(0, map: "DF__bsdef__digisign__40044962") @db.TinyInt
  archivepth                   String? @db.VarChar(200)
  defcopy                      Int     @default(1, map: "DF__bsdef__defcopy__40F86D9B") @db.TinyInt
  sysstd                       Int     @default(0, map: "DF__bsdef__sysstd__41EC91D4") @db.TinyInt
  allowrejct                   Int     @default(0, map: "DF__bsdef__allowrejc__42E0B60D") @db.TinyInt
  digauthtyp                   String? @db.VarChar(30)
  attachname                   String? @db.VarChar(200)
  pdfformat                    Int     @default(0, map: "DF__bsdef__pdfformat__43D4DA46") @db.TinyInt
  timestamp                    String  @db.Char(10)
  cmrpt                        cmrpt?  @relation(fields: [keycmrpt], references: [keycmrpt], onDelete: NoAction, onUpdate: NoAction, map: "fkbsdefkeycmrpt")
  dosty                        dosty?  @relation(fields: [keydosty], references: [keydosty], onDelete: NoAction, onUpdate: NoAction, map: "fkbsdefkeydosty")
  dotyp                        dotyp?  @relation(fields: [keydotyp], references: [keydotyp], onDelete: NoAction, onUpdate: NoAction, map: "fkbsdefkeydotyp")
  bsend                        bsend[]
  bsins                        bsins[]
  fbbla                        fbbla[]
  hycct                        hycct[]
  hydis                        hydis[]
  lbbka_lbbka_keybsdefTobsdef  lbbka[] @relation("lbbka_keybsdefTobsdef")
  lbbka_lbbka_keybsdef2Tobsdef lbbka[] @relation("lbbka_keybsdef2Tobsdef")
  lbbka_lbbka_keybsdef3Tobsdef lbbka[] @relation("lbbka_keybsdef3Tobsdef")

  @@index([keycmrpt], map: "fkbsdefcmrpt")
  @@index([keydbtbl], map: "fkbsdefdbtbl")
  @@index([keydosty], map: "fkbsdefdosty")
  @@index([keydotyp], map: "fkbsdefdotyp")
  @@index([keysymdl], map: "fkbsdefsymdl")
}

model bsdfc {
  keybsdfc  String @id(map: "PK__bsdfc__752E4300") @db.Char(15)
  keybsdef  String @db.Char(15)
  keybsfnc  String @db.Char(15)
  keybsfnc2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keybsdef, keybsfnc, keybsfnc2], map: "akbsdfc1")
  @@index([keybsdef], map: "fkbsdfcbsdef")
  @@index([keybsfnc], map: "fkbsdfcbsfnc")
  @@index([keybsfnc2], map: "fkbsdfcbsfnc2")
}

model bsend {
  keybsend    String  @id(map: "pkbsend") @db.Char(15)
  keybsend2   String? @db.Char(15)
  keybsdef    String? @db.Char(15)
  keycmqry    String? @db.Char(15)
  name        String  @db.VarChar(50)
  nodekind    Int     @default(0, map: "DF__bsend__nodekind__04880780") @db.TinyInt
  timestamp   String  @db.Char(10)
  bsdef       bsdef?  @relation(fields: [keybsdef], references: [keybsdef], onDelete: Cascade, onUpdate: NoAction, map: "fkbsendkeybsdef")
  bsend       bsend?  @relation("bsendTobsend", fields: [keybsend2], references: [keybsend], onDelete: NoAction, onUpdate: NoAction, map: "fkbsendkeybsend2 ")
  other_bsend bsend[] @relation("bsendTobsend")
  cmqry       cmqry?  @relation(fields: [keycmqry], references: [keycmqry], onDelete: NoAction, onUpdate: NoAction, map: "fkbsendkeycmqry ")
  cmmap       cmmap[]

  @@index([keybsdef], map: "fkbsendkeybsdef")
  @@index([keybsend2], map: "fkbsendkeybsend2")
  @@index([keycmqry], map: "fkbsendkeycmqry")
}

model bsent {
  keybsent  String  @id(map: "pkbsent") @db.Char(15)
  keysycls  String  @db.Char(15)
  keysymdl  String  @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keysytxc  String? @db.Char(15)
  keysytxc2 String  @db.Char(15)
  keysytxc3 String? @db.Char(15)
  entname   String  @db.Char(80)
  datatype  String  @db.Char(1)
  caption   String? @db.Char(50)
  allowqry  Int     @default(0, map: "DF__bsent__allowqry__41736BE2") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keydbtbl], map: "fkbsentdbtbl")
  @@index([keysycls], map: "fkbsentsycls")
  @@index([keysymdl], map: "fkbsentsymdl")
  @@index([keysytxc], map: "fkbsentsytxc")
  @@index([keysytxc2], map: "fkbsentsytxc2")
  @@index([keysytxc3], map: "fkbsentsytxc3")
}

model bsexc {
  keybsexc  String @id(map: "pkbsexc") @db.Char(15)
  keybsctr  String @unique(map: "akbsexc1") @db.Char(15)
  extentry  String @db.VarChar(200)
  timestamp String @db.Char(10)
}

model bsexd {
  keybsexd   String  @id(map: "pkbsexd") @db.Char(15)
  keybsdef   String  @unique(map: "akbsexd1") @db.Char(15)
  externalid String  @db.UniqueIdentifier
  parentid   String? @db.UniqueIdentifier
  extcode    String? @db.VarChar(100)
  typenspace String? @db.VarChar(200)
  descriptn  String? @db.VarChar(512)
  category   String? @db.VarChar(128)
  price      Float?  @db.Money
  extstd     Int     @default(0, map: "DF__bsexd__extstd__011C6B46") @db.TinyInt
  timestamp  String  @db.Char(10)
}

model bsexf {
  keybsexf   String   @id(map: "pkbsexf") @db.Char(15)
  keyhyobj   String   @db.Char(15)
  externalid String   @db.UniqueIdentifier
  createdate DateTime @db.DateTime
  timestamp  String   @db.Char(10)

  @@index([keyhyobj], map: "fkbsexfhyobj")
}

model bsexi {
  keybsexi   String @id(map: "pkbsexi") @db.Char(15)
  keybsins   String @unique(map: "akbsexi1") @db.Char(15)
  externalid String @db.UniqueIdentifier
  timestamp  String @db.Char(10)
}

model bsfcr {
  keybsfcr  String @id(map: "PK__bsfcr__324172E1") @db.Char(15)
  keybsfnc1 String @db.Char(15)
  keybsfnc2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keybsfnc1], map: "fkbsfcrbsfnc1")
  @@index([keybsfnc2], map: "fkbsfcrbsfnc2")
}

model bsfnc {
  keybsfnc  String  @id(map: "PK__bsfnc__3335971A") @db.Char(15)
  keysymdl  String? @db.Char(15)
  keysytxc  String  @db.Char(15)
  caption   String  @db.Char(30)
  timestamp String  @db.Char(10)

  @@index([keysymdl], map: "fkbsfncsymdl")
  @@index([keysytxc], map: "fkbsfncsytxc")
}

model bsins {
  keybsins   String    @id(map: "pkbsins") @db.Char(15)
  keybsdef   String    @db.Char(15)
  keydbtbl   String?   @db.Char(15)
  keycode    String?   @db.Char(15)
  keybsins2  String?   @db.Char(15)
  instpl     Int       @db.TinyInt
  tplname    String?   @db.VarChar(60)
  printdate  DateTime? @db.DateTime
  enclosure  String?   @db.Char(5)
  archived   DateTime? @db.DateTime
  formstatus Int       @default(0, map: "DF__bsins__formstatu__55F38A81") @db.TinyInt
  timestamp  String    @db.Char(10)
  bsdef      bsdef     @relation(fields: [keybsdef], references: [keybsdef], onUpdate: NoAction, map: "fkbsinskeybsdef")

  @@index([keybsdef], map: "fkbsinsbsdef")
  @@index([keybsins2], map: "fkbsinsbsins2")
  @@index([keycode], map: "fkbsinscode")
  @@index([keydbtbl], map: "fkbsinsdbtbl")
  @@index([keybsins, instpl], map: "inbsins_16Z0SWJMY")
  @@index([keybsdef, instpl], map: "inbsins1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bsinsorg {
  keybsins  String  @db.Char(15)
  keybsdef  String? @db.Char(15)
  instpl    Int     @db.TinyInt
  tplname   String? @db.Char(30)
  timestamp String? @db.Char(10)

  @@ignore
}

model bspgs {
  keybspgs  String  @id(map: "pkbspgs") @db.Char(15)
  keybsdef  String? @db.Char(15)
  keycmfrx  String? @db.Char(15)
  keycmrpl  String? @db.Char(15)
  pagenr    Int?
  pagename  String? @db.VarChar(30)
  copies    Int     @db.TinyInt
  timestamp String  @db.Char(10)
  cmrpl     cmrpl?  @relation(fields: [keycmrpl], references: [keycmrpl], onDelete: Cascade, onUpdate: NoAction, map: "fkbspgskeycmrpl")

  @@index([keybsdef], map: "fkbspgsbsdef")
  @@index([keycmfrx], map: "fkbspgscmfrx")
  @@index([keycmrpl], map: "fkbspgscmrpl")
}

model bsval {
  keybsval   String    @id(map: "pkbsval") @db.Char(15)
  keybsins   String    @db.Char(15)
  keybsctr   String    @db.Char(15)
  entitykey  String?   @db.Char(15)
  parentkey  String?   @db.Char(15)
  valtype    Int       @default(1, map: "DF__bsval__valtype__2A28A27A") @db.SmallInt
  valreload  Int       @db.TinyInt
  valbool    Int?      @db.TinyInt
  valdate    DateTime? @db.DateTime
  valdecimal Float?    @db.Money
  valinteger Int?
  valtext    String?   @db.VarChar(Max)
  roworder   Int       @default(0, map: "DF__bsval__roworder__2B1CC6B3") @db.SmallInt
  timestamp  String    @db.Char(10)

  @@index([keybsctr], map: "fkbsvalbsctr")
  @@index([keybsins], map: "fkbsvalbsins")
  @@index([keybsins], map: "inbsval1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bsval_TSND181016 {
  keybsval   String    @db.Char(15)
  keybsins   String    @db.Char(15)
  keybsctr   String    @db.Char(15)
  entitykey  String?   @db.Char(15)
  parentkey  String?   @db.Char(15)
  valtype    Int       @db.SmallInt
  valreload  Int       @db.TinyInt
  valbool    Int?      @db.TinyInt
  valdate    DateTime? @db.DateTime
  valdecimal Float?    @db.Money
  valinteger Int?
  valtext    String?   @db.VarChar(Max)
  roworder   Int       @db.SmallInt
  timestamp  String    @db.Char(10)

  @@ignore
}

model bubub {
  keybubub  String   @id(map: "pkbubub") @db.Char(15)
  keycmqry  String   @db.Char(15)
  caption   String   @db.VarChar(60)
  fdate     DateTime @db.Date
  tdate     DateTime @db.Date
  timestamp String   @db.Char(10)
  cmqry     cmqry    @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkbububkeycmqry ")
  buobj     buobj[]
  burev     burev[]

  @@index([keycmqry], map: "fkbububcmqry")
}

model buchg {
  keybuchg   String  @id(map: "pkbuchg") @db.Char(15)
  keyburev   String  @db.Char(15)
  keycmqry   String? @db.Char(15)
  caption    String  @db.Char(60)
  sequenceno Int     @default(0, map: "DF__buchg__sequencen__68B8844C") @db.TinyInt
  vacancy    Int     @default(0, map: "DF__buchg__vacancy__69ACA885") @db.TinyInt
  vacshare   Float?  @db.Money
  fields     String  @db.VarChar(200)
  timestamp  String  @db.Char(10)
  burev      burev   @relation(fields: [keyburev], references: [keyburev], onDelete: Cascade, onUpdate: NoAction, map: "fkbuchgkeyburev ")
  cmqry      cmqry?  @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkbuchgkeycmqry ")
  buchr      buchr[]
  burcr      burcr[]

  @@index([keyburev], map: "fkbuchgburev")
  @@index([keycmqry], map: "fkbuchgcmqry")
}

model buchr {
  keybuchr   String    @id(map: "pkbuchr") @db.Char(15)
  keybuchg   String    @db.Char(15)
  keycmqry   String?   @db.Char(15)
  keybuinv   String?   @db.Char(15)
  amount     Decimal   @default(0, map: "DF__buchr__amount__6E715DA2") @db.Decimal(7, 4)
  calctype   Int       @default(0, map: "DF__buchr__calctype__6F6581DB") @db.TinyInt
  fromdate   DateTime? @db.Date
  inclshared Boolean   @default(false, map: "DF__buchr__inclshare__7059A614")
  modifyby   Int       @default(0, map: "DF__buchr__modifyby__714DCA4D") @db.TinyInt
  areatype   Int       @default(0, map: "DF__buchr__areatype__7241EE86") @db.TinyInt
  caption    String?   @db.VarChar(60)
  calcorder  Int       @default(0, map: "DF__buchr__calcorder__733612BF")
  timestamp  String    @db.Char(10)
  buinv      buinv?    @relation(fields: [keybuinv], references: [keybuinv], onDelete: NoAction, onUpdate: NoAction, map: "fkbuchrketbuinv ")
  buchg      buchg     @relation(fields: [keybuchg], references: [keybuchg], onDelete: Cascade, onUpdate: NoAction, map: "fkbuchrkeybuchg ")
  cmqry      cmqry?    @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkbuchrkeycmqry ")

  @@index([keybuchg], map: "fkbuchrbuchg")
  @@index([keybuinv], map: "fkbuchrbuinv")
  @@index([keycmqry], map: "fkbuchrcmqry")
}

model buinv {
  keybuinv                     String  @id(map: "pkbuinv") @db.Char(15)
  keycmind                     String  @db.Char(15)
  indexyear                    Int     @db.SmallInt
  indexmonth                   Int     @db.TinyInt
  indexvalue                   Decimal @db.Decimal(12, 4)
  timestamp                    String  @db.Char(10)
  buchr                        buchr[]
  cmind                        cmind   @relation(fields: [keycmind], references: [keycmind], onUpdate: NoAction, map: "pkbuinvkeycmind ")
  bupiv_bupiv_keybuinvTobuinv  bupiv[] @relation("bupiv_keybuinvTobuinv")
  bupiv_bupiv_keybuinv2Tobuinv bupiv[] @relation("bupiv_keybuinv2Tobuinv")
  burad_burad_keybuinvTobuinv  burad[] @relation("burad_keybuinvTobuinv")
  burad_burad_keybuinv2Tobuinv burad[] @relation("burad_keybuinv2Tobuinv")
  burad_burad_keybuinv3Tobuinv burad[] @relation("burad_keybuinv3Tobuinv")

  @@index([keycmind], map: "fkbuinvcmind")
}

model buobj {
  keybuobj   String  @id(map: "pkbuobj") @db.Char(15)
  keybubub   String  @db.Char(15)
  keycmobj   String? @db.Char(15)
  keycmobt   String  @db.Char(15)
  keyrevrt   String? @db.Char(15)
  bafencapt  String? @db.VarChar(30)
  bafencode  String? @db.VarChar(30)
  bafstcapt  String? @db.VarChar(30)
  bafstcode  String? @db.VarChar(30)
  babygcapt  String? @db.VarChar(30)
  babygcode  String? @db.VarChar(30)
  bavancapt  String? @db.VarChar(30)
  bavancode  String? @db.VarChar(30)
  cmcmpcapt  String? @db.VarChar(30)
  cmcmpcode  String? @db.VarChar(30)
  cmsomcapt  String? @db.VarChar(30)
  cmsomcode  String? @db.VarChar(30)
  cmrgncapt  String? @db.VarChar(30)
  cmrgncode  String? @db.VarChar(30)
  hyintcapt  String? @db.VarChar(30)
  hyintcode  String? @db.VarChar(30)
  roomcount  Int?
  uppgang    String? @db.VarChar(20)
  objcapt    String? @db.VarChar(30)
  objcode    String? @db.VarChar(30)
  hyresid    String  @db.VarChar(30)
  areabra    Decimal @db.Decimal(14, 2)
  arealoa    Decimal @db.Decimal(14, 2)
  areacontr  Decimal @db.Decimal(14, 2)
  areaheat   Decimal @db.Decimal(14, 2)
  areacommon Decimal @db.Decimal(14, 2)
  disarea    String? @db.VarChar(30)
  disdistr   String? @db.VarChar(30)
  objtype    String? @db.VarChar(30)
  towndistr  String? @db.VarChar(30)
  timestamp  String  @db.Char(10)
  bubub      bubub   @relation(fields: [keybubub], references: [keybubub], onDelete: Cascade, onUpdate: NoAction, map: "fkbuobjkeybubub ")
  cmobj      cmobj?  @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkbuobjkeycmobj ")
  cmobt      cmobt   @relation(fields: [keycmobt], references: [keycmobt], onUpdate: NoAction, map: "fkbuobjkeycmobt ")
  burad      burad[]

  @@index([keybubub], map: "fkbuobjbubub")
  @@index([keycmobj], map: "fkbuobjcmobj")
  @@index([keycmobt], map: "fkbuobjcmobt")
}

model bupiv {
  keybupiv                     String @id(map: "pkbupiv") @db.Char(15)
  keybuinv                     String @db.Char(15)
  keybuinv2                    String @db.Char(15)
  keyburev                     String @db.Char(15)
  timestamp                    String @db.Char(10)
  buinv_bupiv_keybuinvTobuinv  buinv  @relation("bupiv_keybuinvTobuinv", fields: [keybuinv], references: [keybuinv], onUpdate: NoAction, map: "fkbupivkeybuinv ")
  buinv_bupiv_keybuinv2Tobuinv buinv  @relation("bupiv_keybuinv2Tobuinv", fields: [keybuinv2], references: [keybuinv], onUpdate: NoAction, map: "fkbupivkeybuinv2 ")
  burev                        burev  @relation(fields: [keyburev], references: [keyburev], onUpdate: NoAction, map: "fkbupivkeyburev ")

  @@index([keybuinv], map: "fkbupivbuinv")
  @@index([keybuinv2], map: "fkbupivbuinv2")
  @@index([keyburev], map: "fkbupivburev")
}

model buplr {
  keybuplr  String @id(map: "pkbuplr") @db.Char(15)
  keyburev  String @db.Char(15)
  keyrebur  String @db.Char(15)
  amount    Float  @default(0, map: "DF__buplr__amount__7DB3A132") @db.Money
  timestamp String @db.Char(10)
  burev     burev  @relation(fields: [keyburev], references: [keyburev], onUpdate: NoAction, map: "fkbuplrkeyburev ")
  rebur     rebur  @relation(fields: [keyrebur], references: [keyrebur], onUpdate: NoAction, map: "fkbuplrkeyrebur ")

  @@index([keyburev], map: "fkbuplrburev")
  @@index([keyrebur], map: "fkbuplrrebur")
}

model burac {
  keyburac  String @id(map: "pkburac") @db.Char(15)
  keyrektk  String @db.Char(15)
  keyrevrt  String @db.Char(15)
  keyburad  String @db.Char(15)
  accyear   Int
  codingstr String @db.VarChar(200)
  timestamp String @db.Char(10)
  burad     burad  @relation(fields: [keyburad], references: [keyburad], onDelete: Cascade, onUpdate: NoAction, map: "fkburackeyburad ")
  rektk     rektk  @relation(fields: [keyrektk], references: [keyrektk], onUpdate: NoAction, map: "fkburackeyrektk ")
  revrt     revrt  @relation(fields: [keyrevrt], references: [keyrevrt], onUpdate: NoAction, map: "fkburackeyrevrt ")

  @@index([keyburad], map: "fkburacburad")
  @@index([keyrektk], map: "fkburacrektk")
  @@index([keyrevrt], map: "fkburacrevrt")
}

model burad {
  keyburad                     String    @id(map: "pkburad") @db.Char(15)
  keybuobj                     String    @db.Char(15)
  keybuinv                     String?   @db.Char(15)
  keybuinv2                    String?   @db.Char(15)
  keybuinv3                    String?   @db.Char(15)
  keyhyink                     String?   @db.Char(15)
  keyhyrad                     String?   @db.Char(15)
  keyrevrt                     String?   @db.Char(15)
  akthyratot                   Float     @db.Money
  bashyratot                   Float     @db.Money
  antal                        Decimal?  @db.Decimal(14, 2)
  fdate                        DateTime  @db.Date
  tdate                        DateTime? @db.Date
  cfrdate                      DateTime? @db.Date
  clastdebit                   DateTime? @db.Date
  fromper                      String?   @db.Char(4)
  tomper                       String?   @db.Char(4)
  indfcamon                    Int       @default(0, map: "DF__burad__indfcamon__4DCF83E6")
  indfcdinmn                   Int       @default(0, map: "DF__burad__indfcdinm__4EC3A81F")
  indintervl                   Int?
  indshare                     Decimal?  @db.Decimal(7, 4)
  template                     Int       @default(0, map: "DF__burad__template__4FB7CC58") @db.TinyInt
  rowtype                      Int       @default(0, map: "DF__burad__rowtype__50ABF091") @db.TinyInt
  artcode                      String    @db.VarChar(20)
  artcaption                   String    @db.VarChar(70)
  hyobjben                     String?   @db.VarChar(35)
  tenantname                   String?   @db.VarChar(30)
  area                         Decimal?  @db.Decimal(14, 2)
  part1                        String?   @db.VarChar(10)
  part2                        String?   @db.VarChar(10)
  part3                        String?   @db.VarChar(10)
  part4                        String?   @db.VarChar(10)
  part5                        String?   @db.VarChar(10)
  part6                        String?   @db.VarChar(10)
  part7                        String?   @db.VarChar(10)
  part8                        String?   @db.VarChar(10)
  part9                        String?   @db.VarChar(10)
  part10                       String?   @db.VarChar(10)
  timestamp                    String    @db.VarChar(10)
  burac                        burac[]
  buinv_burad_keybuinvTobuinv  buinv?    @relation("burad_keybuinvTobuinv", fields: [keybuinv], references: [keybuinv], onDelete: NoAction, onUpdate: NoAction, map: "fkburadkeybuinv ")
  buinv_burad_keybuinv2Tobuinv buinv?    @relation("burad_keybuinv2Tobuinv", fields: [keybuinv2], references: [keybuinv], onDelete: NoAction, onUpdate: NoAction, map: "fkburadkeybuinv2 ")
  buinv_burad_keybuinv3Tobuinv buinv?    @relation("burad_keybuinv3Tobuinv", fields: [keybuinv3], references: [keybuinv], onDelete: NoAction, onUpdate: NoAction, map: "fkburadkeybuinv3 ")
  buobj                        buobj     @relation(fields: [keybuobj], references: [keybuobj], onDelete: Cascade, onUpdate: NoAction, map: "fkburadkeybuobj ")
  hyink                        hyink?    @relation(fields: [keyhyink], references: [keyhyink], onUpdate: NoAction, map: "fkburadkeyhyink")
  hyrad                        hyrad?    @relation(fields: [keyhyrad], references: [keyhyrad], onUpdate: NoAction, map: "fkburadkeyhyrad")
  revrt                        revrt?    @relation(fields: [keyrevrt], references: [keyrevrt], onDelete: NoAction, onUpdate: NoAction, map: "fkburadkeyrevrt ")
  burcr                        burcr[]

  @@index([keybuinv], map: "fkburadbuinv")
  @@index([keybuinv2], map: "fkburadbuinv2")
  @@index([keybuinv3], map: "fkburadbuinv3")
  @@index([keybuobj], map: "fkburadbuobj")
  @@index([keyhyink], map: "fkburadhyink")
  @@index([keyhyrad], map: "fkburadhyrad")
  @@index([keybuinv3], map: "fkburadrevrt")
}

model burcr {
  keyburcr  String @id(map: "pkburcr") @db.Char(15)
  keybuchg  String @db.Char(15)
  keyburad  String @db.Char(15)
  linkkind  Int    @default(0, map: "DF__burcr__linkkind__5A355ACB") @db.TinyInt
  timestamp String @db.Char(10)
  burad     burad  @relation(fields: [keyburad], references: [keyburad], onUpdate: NoAction, map: "fkbucrckeyburad ")
  buchg     buchg  @relation(fields: [keybuchg], references: [keybuchg], onDelete: Cascade, onUpdate: NoAction, map: "fkburcrkeybuchg ")

  @@index([keybuchg], map: "fkburcrbuchg")
  @@index([keyburad], map: "fkburcrburad")
}

model burev {
  keyburev  String   @id(map: "pkburev") @db.Char(15)
  keybubub  String   @db.Char(15)
  keybusta  String?  @db.Char(15)
  caption   String   @db.Char(60)
  fdate     DateTime @db.Date
  tdate     DateTime @db.Date
  timestamp String   @db.Char(10)
  buchg     buchg[]
  bupiv     bupiv[]
  buplr     buplr[]
  bubub     bubub    @relation(fields: [keybubub], references: [keybubub], onDelete: Cascade, onUpdate: NoAction, map: "fkburevkeybubub ")
  busta     busta?   @relation(fields: [keybusta], references: [keybusta], onDelete: NoAction, onUpdate: NoAction, map: "fkburevkeybusta ")

  @@index([keybubub], map: "fkburevbubub")
  @@index([keybusta], map: "fkburevbusta")
}

model busta {
  keybusta   String  @id(map: "pkbusta") @db.Char(15)
  caption    String  @db.VarChar(30)
  locked     Boolean @default(false, map: "DF__busta__locked__0F2845F7")
  transfrd   Boolean @default(false, map: "DF__busta__transfrd__101C6A30")
  sequenceno Int     @default(0, map: "DF__busta__sequencen__11108E69") @db.TinyInt
  timestamp  String  @db.Char(10)
  burev      burev[]
}

model cmabs {
  keycmabs  String    @id(map: "pkcmabs") @db.Char(15)
  keycmctc  String    @db.Char(15)
  abstype   Int       @db.TinyInt
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmabskeycmctc")

  @@index([keycmctc], map: "fkcmabscmctc")
}

model cmacc {
  keycmacc  String @id(map: "pkcmacc") @db.Char(15)
  keycmcmp  String @db.Char(15)
  keysyusr  String @db.Char(15)
  timestamp String @db.Char(10)
  cmcmp     cmcmp  @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: Cascade, onUpdate: NoAction, map: "fkcmacckeycmcmp")

  @@unique([keysyusr, keycmcmp], map: "akcmacc")
  @@index([keycmcmp], map: "fkcmacccmcmp")
}

model cmadr {
  keycmadr  String    @id(map: "pkcmadr") @db.Char(15)
  keycmtyp  String    @db.Char(15)
  keydbtbl  String    @db.Char(15)
  keycode   String    @db.Char(15)
  region    String    @db.Char(2)
  adress1   String?   @db.VarChar(60)
  adress2   String?   @db.VarChar(60)
  adress3   String?   @db.VarChar(60)
  adress4   String?   @db.VarChar(60)
  adress5   String?   @db.VarChar(60)
  adress6   String?   @db.VarChar(60)
  adress7   String?   @db.VarChar(60)
  adress8   String?   @db.VarChar(60)
  adress9   String?   @db.VarChar(60)
  adress10  String?   @db.VarChar(60)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@unique([keycmtyp, keydbtbl, keycode, fdate, tdate], map: "akcmadr1")
  @@index([keycmtyp], map: "fkcmadrcmtyp")
  @@index([keycode], map: "fkcmadrcode")
  @@index([keydbtbl], map: "fkcmadrdbtbl")
  @@index([keycmtyp, keydbtbl, fdate, tdate, keycode, keycmadr, adress1], map: "incmadr_2PU0NKCW5")
}

model cmads {
  keycmads  String  @id(map: "pkcmads") @db.Char(15)
  keybamun  String? @db.Char(15)
  region    String  @db.Char(2)
  c1        String? @db.VarChar(10)
  c2        String? @db.VarChar(10)
  c3        String? @db.VarChar(10)
  c4        String? @db.VarChar(10)
  c5        String? @db.VarChar(10)
  street    String? @db.VarChar(80)
  city      String? @db.VarChar(60)
  timestamp String  @db.Char(10)
  bamun     bamun?  @relation(fields: [keybamun], references: [keybamun], onDelete: Cascade, onUpdate: NoAction, map: "fkcmadskeybamun")

  @@index([keybamun], map: "fkcmadsbamun")
  @@index([region, c1], map: "incmads_1NP0DBITR")
  @@index([region, street], map: "incmads_1NP0DBIUU")
  @@index([region, city], map: "incmads_1NP0DBIVY")
  @@index([region, street, city], map: "incmads_1NP0DBIX1")
}

model cmalt {
  keycmalt   String  @id(map: "pkcmalt") @db.Char(15)
  keycmqry   String? @db.Char(15)
  keysyusr   String? @db.Char(15)
  caption    String  @db.VarChar(60)
  alertkind  Int     @default(0, map: "DF__cmalt__alertkind__7EA232AF") @db.SmallInt
  notkind    Int     @default(0, map: "DF__cmalt__notkind__7F9656E8") @db.TinyInt
  emailadr   String  @db.VarChar(100)
  emessage   String  @db.VarChar(500)
  smsphone   String  @db.VarChar(60)
  smsmessage String  @db.VarChar(500)
  timestamp  String  @db.Char(10)

  @@index([keycmqry], map: "fkcmaltcmqry")
  @@index([keysyusr], map: "fkcmaltsyusr")
}

model cmara {
  keycmara  String @id(map: "pkcmara") @db.Char(15)
  keycmtyp  String @db.Char(15)
  keycmarg  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keycmarg, keycmtyp], map: "akcmara1")
  @@index([keycmtyp], map: "fkcmaracmtyp")
}

model cmarg {
  keycmarg   String  @id(map: "pkcmarg") @db.Char(15)
  keysymdl   String  @db.Char(15)
  caption    String  @db.VarChar(30)
  addprcnt   Float   @default(0, map: "DF__cmarg__addprcnt__356BD7E8") @db.Money
  addprcntlr Float   @default(0, map: "DF__cmarg__addprcntl__365FFC21") @db.Money
  repabkod   Int     @default(0, map: "DF__cmarg__repabkod__3754205A") @db.TinyInt
  timestamp  String  @db.Char(10)
  cmart      cmart[]

  @@index([keysymdl], map: "fkcmargsymdl")
}

model cmart {
  keycmart                     String   @id(map: "pkcmart") @db.Char(15)
  keysymdl                     String   @db.Char(15)
  keycmtyp                     String?  @db.Char(15)
  keycmtyp2                    String?  @db.Char(15)
  keycmuni                     String   @db.Char(15)
  keycmuni2                    String?  @db.Char(15)
  keycmarg                     String?  @db.Char(15)
  keycmsfd                     String?  @db.Char(15)
  keycmvat                     String?  @db.Char(15)
  keycmvat2                    String?  @db.Char(15)
  keyhysum                     String?  @db.Char(15)
  keyhysgp                     String?  @db.Char(15)
  keycmart2                    String?  @db.Char(15)
  code                         String   @db.VarChar(20)
  caption                      String?  @db.VarChar(70)
  artused                      Int      @db.TinyInt
  price                        Float    @db.Money
  priceint                     Float?   @db.Money
  pricebuy                     Float?   @db.Money
  reference1                   String?  @db.VarChar(30)
  reference2                   String?  @db.VarChar(30)
  reference3                   String?  @db.VarChar(30)
  avitext                      String?  @db.VarChar(80)
  hybortfall                   Int?     @db.TinyInt
  areahyra                     String?  @db.Char(1)
  reglmetod                    String?  @db.Char(1)
  utskrgrupp                   String?  @db.Char(4)
  varaktig                     Int?     @db.SmallInt
  kontruppg                    Int?     @db.TinyInt
  debit                        Int      @db.TinyInt
  avdrag                       Int?     @db.TinyInt
  kontsumma                    Int?     @db.TinyInt
  absence                      Int?     @db.TinyInt
  regular                      Int?     @db.TinyInt
  artusage                     Int      @db.TinyInt
  amcalcinc                    Int      @default(0, map: "DF__cmart__amcalcinc__72ABD0A6") @db.TinyInt
  prinvextin                   Int      @default(0, map: "DF__cmart__prinvexti__739FF4DF") @db.TinyInt
  debitlock                    Int      @default(0, map: "DF__cmart__debitlock__74941918") @db.TinyInt
  helperiod                    Int?     @db.TinyInt
  pdfee                        Int      @default(0, map: "DF__cmart__pdfee__75883D51") @db.TinyInt
  pdheat                       Int      @default(0, map: "DF__cmart__pdheat__767C618A") @db.TinyInt
  pdfeeprcnt                   Decimal? @db.Decimal(4, 2)
  artexport                    Int      @default(1, map: "DF__cmart__artexport__777085C3") @db.TinyInt
  priority                     Int      @default(0, map: "DF__cmart__priority__7864A9FC") @db.TinyInt
  repabkod                     Int      @db.TinyInt
  devtoleran                   Int?
  timestamp                    String   @db.Char(10)
  ambas                        ambas[]
  avark                        avark[]
  brdkr                        brdkr[]
  cmarg                        cmarg?   @relation(fields: [keycmarg], references: [keycmarg], onDelete: NoAction, onUpdate: NoAction, map: "fkcmartkeycmarg ")
  cmart                        cmart?   @relation("cmartTocmart", fields: [keycmart2], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkcmartkeycmart2 ")
  other_cmart                  cmart[]  @relation("cmartTocmart")
  cmsfd                        cmsfd?   @relation(fields: [keycmsfd], references: [keycmsfd], onUpdate: NoAction, map: "fkcmartkeycmsfd ")
  cmuni_cmart_keycmuniTocmuni  cmuni    @relation("cmart_keycmuniTocmuni", fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkcmartkeycmuni ")
  cmuni_cmart_keycmuni2Tocmuni cmuni?   @relation("cmart_keycmuni2Tocmuni", fields: [keycmuni2], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkcmartkeycmuni2 ")
  cmvat_cmart_keycmvatTocmvat  cmvat?   @relation("cmart_keycmvatTocmvat", fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkcmartkeycmvat ")
  cmvat_cmart_keycmvat2Tocmvat cmvat?   @relation("cmart_keycmvat2Tocmvat", fields: [keycmvat2], references: [keycmvat], onUpdate: NoAction, map: "fkcmartkeycmvat2 ")
  hysgp                        hysgp?   @relation(fields: [keyhysgp], references: [keyhysgp], onDelete: NoAction, onUpdate: NoAction, map: "fkcmartkeyhysgp ")
  hysum                        hysum?   @relation(fields: [keyhysum], references: [keyhysum], onDelete: NoAction, onUpdate: NoAction, map: "fkcmartkeyhysum ")
  cmcmp_cmcmp_keycmartTocmart  cmcmp[]  @relation("cmcmp_keycmartTocmart")
  cmcmp_cmcmp_keycmart2Tocmart cmcmp[]  @relation("cmcmp_keycmart2Tocmart")
  cmcmp_cmcmp_keycmart3Tocmart cmcmp[]  @relation("cmcmp_keycmart3Tocmart")
  dreco                        dreco[]
  hyaos                        hyaos[]
  hyfra                        hyfra[]
  hyobj_hyobj_keycmartTocmart  hyobj[]  @relation("hyobj_keycmartTocmart")
  hyobj_hyobj_keycmart2Tocmart hyobj[]  @relation("hyobj_keycmart2Tocmart")
  hyrad                        hyrad[]
  hysdr                        hysdr[]
  hytga                        hytga[]
  hytua                        hytua[]
  hyvae_hyvae_keycmartTocmart  hyvae[]  @relation("hyvae_keycmartTocmart")
  hyvae_hyvae_keycmart2Tocmart hyvae[]  @relation("hyvae_keycmart2Tocmart")
  hyvae_hyvae_keycmart3Tocmart hyvae[]  @relation("hyvae_keycmart3Tocmart")
  hyvae_hyvae_keycmart4Tocmart hyvae[]  @relation("hyvae_keycmart4Tocmart")
  hyvae_hyvae_keycmart5Tocmart hyvae[]  @relation("hyvae_keycmart5Tocmart")
  hyvae_hyvae_keycmart6Tocmart hyvae[]  @relation("hyvae_keycmart6Tocmart")
  hyvae_hyvae_keycmart7Tocmart hyvae[]  @relation("hyvae_keycmart7Tocmart")
  ikber                        ikber[]
  ikbrk                        ikbrk[]
  imial                        imial[]
  lbanm                        lbanm[]
  lbplr                        lbplr[]
  lbrtr                        lbrtr[]
  lnemf                        lnemf[]
  lnobj                        lnobj[]
  lnprd                        lnprd[]
  lnvrt                        lnvrt[]
  pdacr                        pdacr[]
  pdadv                        pdadv[]
  pddcr                        pddcr[]
  pdddc                        pdddc[]
  pdddk                        pdddk[]
  pddrl                        pddrl[]
  pddsr                        pddsr[]
  pract                        pract[]
  praoc                        praoc[]
  prark                        prark[]
  prdct_prdct_keycmartTocmart  prdct[]  @relation("prdct_keycmartTocmart")
  prdct_prdct_keycmart2Tocmart prdct[]  @relation("prdct_keycmart2Tocmart")
  prdct_prdct_keycmart3Tocmart prdct[]  @relation("prdct_keycmart3Tocmart")
  prdct_prdct_keycmart4Tocmart prdct[]  @relation("prdct_keycmart4Tocmart")
  prmtr                        prmtr[]
  prpci                        prpci[]
  prpia                        prpia[]
  puagr                        puagr[]
  puatg                        puatg[]
  stext_stext_keycmartTocmart  stext[]  @relation("stext_keycmartTocmart")
  stext_stext_keycmart2Tocmart stext[]  @relation("stext_keycmart2Tocmart")
  trabp                        trabp[]
  tvpdg_tvpdg_keycmartTocmart  tvpdg[]  @relation("tvpdg_keycmartTocmart")
  tvpdg_tvpdg_keycmart2Tocmart tvpdg[]  @relation("tvpdg_keycmart2Tocmart")
  tvpdg_tvpdg_keycmart3Tocmart tvpdg[]  @relation("tvpdg_keycmart3Tocmart")
  tvprd_tvprd_keycmartTocmart  tvprd[]  @relation("tvprd_keycmartTocmart")
  tvprd_tvprd_keycmart2Tocmart tvprd[]  @relation("tvprd_keycmart2Tocmart")
  tvprd_tvprd_keycmart3Tocmart tvprd[]  @relation("tvprd_keycmart3Tocmart")
  tvprd_tvprd_keycmart4Tocmart tvprd[]  @relation("tvprd_keycmart4Tocmart")
  tvvou_tvvou_keycmartTocmart  tvvou[]  @relation("tvvou_keycmartTocmart")
  tvvou_tvvou_keycmart2Tocmart tvvou[]  @relation("tvvou_keycmart2Tocmart")

  @@index([keycmarg], map: "fkcmartcmarg")
  @@index([keycmart2], map: "fkcmartcmart2")
  @@index([keycmsfd], map: "fkcmartcmsfd")
  @@index([keycmtyp], map: "fkcmartcmtyp")
  @@index([keycmtyp2], map: "fkcmartcmtyp2")
  @@index([keycmuni], map: "fkcmartcmuni")
  @@index([keycmuni2], map: "fkcmartcmuni2")
  @@index([keycmvat], map: "fkcmartcmvat")
  @@index([keycmvat2], map: "fkcmartcmvat2")
  @@index([keyhysgp], map: "fkcmarthysgp")
  @@index([keyhysum], map: "fkcmarthysum")
  @@index([keysymdl], map: "fkcmartsymdl")
  @@index([code, artused, keysymdl], map: "incmart1")
}

model cmbac {
  keycmbac  String @id(map: "pkcmbac") @db.Char(15)
  keycmbnk  String @db.Char(15)
  keyrekpy  String @db.Char(15)
  year      Int    @default(0, map: "DF__cmbac__year__63547E7D") @db.SmallInt
  timestamp String @db.Char(10)
  cmbnk     cmbnk  @relation(fields: [keycmbnk], references: [keycmbnk], onDelete: Cascade, onUpdate: NoAction, map: "fkcmbackeycmbnk")
  rekpy     rekpy  @relation(fields: [keyrekpy], references: [keyrekpy], onUpdate: NoAction, map: "fkcmbackeyrekpy ")

  @@index([keycmbnk], map: "ixcmbaccmbnk")
  @@index([keyrekpy], map: "ixcmbacrekpy")
}

model cmblg {
  keycmblg  String   @id(map: "pkcmblg") @db.Char(15)
  keysyusr  String   @db.Char(15)
  batch     String   @db.Char(18)
  batchtype Int      @db.SmallInt
  batchdate DateTime @db.DateTime
  keycode   String   @db.Char(15)
  checksum  Int      @default(0, map: "DF__cmblg__checksum__76316DF2")
  filesize  Int      @default(0, map: "DF__cmblg__filesize__7725922B")
  timestamp String   @db.Char(10)

  @@index([keycode], map: "fkcmblgcode")
  @@index([keysyusr], map: "fkcmblgsyusr")
  @@index([batchdate, batchtype, checksum], map: "incmblg_1MO0TVU1R")
  @@index([batchdate, batchtype, checksum], map: "incmblg_3RD0LYAJY")
}

model cmblh {
  keycmblh  String   @id(map: "pkcmblh") @db.Char(15)
  keycmbth  String?  @db.Char(15)
  startdate DateTime @db.DateTime
  starttime DateTime @db.DateTime
  enddate   DateTime @db.DateTime
  endtime   DateTime @db.DateTime
  userid    String?  @db.VarChar(80)
  blhnode   String   @db.VarChar(30)
  caption   String   @db.VarChar(50)
  blhstatus Int      @db.TinyInt
  timestamp String   @db.Char(10)

  @@index([keycmbth], map: "fkcmblhcmbth")
}

model cmblk {
  keycmblk   String @id(map: "pkcmblk") @db.Char(15)
  lockcause  String @db.VarChar(30)
  lockitemid String @db.Char(15)
  timestamp  String @db.Char(10)

  @@index([lockitemid], map: "cmblklockitemid")
}

model cmblr {
  keycmblr  String   @id(map: "pkcmblr") @db.Char(15)
  keycmblh  String   @db.Char(15)
  keysymdl  String?  @db.Char(15)
  keycmbtr  String?  @db.Char(15)
  keycmprc  String?  @db.Char(15)
  keycmrbh  String?  @db.Char(15)
  startdate DateTime @db.DateTime
  starttime DateTime @db.DateTime
  caption   String   @db.VarChar(50)
  blrtext   String   @db.VarChar(Max)
  blrstatus Int      @default(0, map: "DF__cmblr__blrstatus__5732C217") @db.TinyInt
  timestamp String   @db.Char(10)

  @@index([keycmblh], map: "fkcmblrcmblh")
  @@index([keycmbtr], map: "fkcmblrcmbtr")
  @@index([keycmprc], map: "fkcmblrcmprc")
  @@index([keycmrbh], map: "fkcmblrcmrbh")
  @@index([keysymdl], map: "fkcmblrsymdl")
}

model cmbnk {
  keycmbnk                     String  @id(map: "pkcmbnk") @db.Char(15)
  keycmcmp                     String  @db.Char(15)
  keycmcln                     String  @db.Char(15)
  allowtrans                   Int     @default(0, map: "DF__cmbnk__allowtran__428BB052") @db.TinyInt
  account                      String  @db.VarChar(50)
  taxaccount                   Int     @default(0, map: "DF__cmbnk__taxaccoun__437FD48B") @db.TinyInt
  isstandard                   Int     @default(0, map: "DF__cmbnk__isstandar__4473F8C4") @db.TinyInt
  ocrpayment                   Int     @default(0, map: "DF__cmbnk__ocrpaymen__45681CFD") @db.TinyInt
  timestamp                    String  @db.Char(10)
  cmbac                        cmbac[]
  cmcln                        cmcln   @relation(fields: [keycmcln], references: [keycmcln], onUpdate: NoAction, map: "fkcmbnkkeycmcln")
  cmcmp                        cmcmp   @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkcmbnkkeycmcmp")
  cmbtt_cmbtt_keycmbnkTocmbnk  cmbtt[] @relation("cmbtt_keycmbnkTocmbnk")
  cmbtt_cmbtt_keycmbnk2Tocmbnk cmbtt[] @relation("cmbtt_keycmbnk2Tocmbnk")

  @@index([keycmcln], map: "ixcmbnkcmcln")
  @@index([keycmcmp], map: "ixcmbnkcmcmp")
}

model cmbsc {
  keycmbsc  String @id(map: "pkcmbsc") @db.Char(15)
  code      String @db.VarChar(15)
  caption   String @db.VarChar(30)
  banktext  String @db.VarChar(30)
  used      Int    @db.TinyInt
  timestamp String @db.Char(10)
}

model cmbsl {
  keycmbsl  String    @id(map: "pkcmbsl") @db.Char(15)
  keycmbth  String    @db.Char(15)
  startdate DateTime  @db.DateTime
  enddate   DateTime? @db.DateTime
  runtime   DateTime  @db.Time
  period    Int       @db.TinyInt
  pextra    String?   @db.VarChar(250)
  caption   String    @db.VarChar(250)
  payload   String?   @db.VarChar(Max)
  timestamp String    @db.Char(10)
  cmbth     cmbth     @relation(fields: [keycmbth], references: [keycmbth], onUpdate: NoAction, map: "fkcmbslkeycmbth")

  @@index([keycmbth], map: "fkcmbslcmbth")
}

model cmbta {
  keycmbta  String @id(map: "pkcmbta") @db.Char(15)
  keycmbth  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)
  cmbth     cmbth  @relation(fields: [keycmbth], references: [keycmbth], onDelete: Cascade, onUpdate: NoAction, map: "fkcmbtakeycmbth ")

  @@unique([keycmbth, keysygrp], map: "akcmbta1")
  @@index([keycmbth], map: "fkcmbtacmbth")
  @@index([keysygrp], map: "fkcmbtasygrp")
}

model cmbth {
  keycmbth  String  @id(map: "pkcmbth") @db.Char(15)
  keysyusr  String  @db.Char(15)
  caption   String  @db.VarChar(50)
  mailok    String  @db.VarChar(250)
  mailerror String  @db.VarChar(250)
  smsok     String  @db.VarChar(250)
  smserror  String  @db.VarChar(250)
  accr      Int     @default(0, map: "DF__cmbth__accr__7A01FED6") @db.TinyInt
  accw      Int     @default(0, map: "DF__cmbth__accw__7AF6230F") @db.TinyInt
  inclog    Int     @default(0, map: "DF__cmbth__inclog__7BEA4748") @db.TinyInt
  timestamp String  @db.Char(10)
  cmbsl     cmbsl[]
  cmbta     cmbta[]
  cmbtr     cmbtr[]

  @@index([keysyusr], map: "fkcmbthsyusr")
}

model cmbtr {
  keycmbtr  String  @id(map: "pkcmbtr") @db.Char(15)
  keycmbth  String  @db.Char(15)
  keycmprc  String? @db.Char(15)
  keycmrbh  String? @db.Char(15)
  keycmqry  String? @db.Char(15)
  btrorder  Int
  settings  String? @db.VarChar(Max)
  timestamp String  @db.Char(10)
  cmbth     cmbth   @relation(fields: [keycmbth], references: [keycmbth], onDelete: Cascade, onUpdate: NoAction, map: "fkcmbtrkeycmbth ")
  cmprc     cmprc?  @relation(fields: [keycmprc], references: [keycmprc], onUpdate: NoAction, map: "fkcmbtrkeycmprc")
  cmqry     cmqry?  @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkcmbtrkeycmqry ")
  cmrbh     cmrbh?  @relation(fields: [keycmrbh], references: [keycmrbh], onUpdate: NoAction, map: "fkcmbtrkeycmrbh")

  @@index([keycmbth], map: "fkcmbtrcmbth")
  @@index([keycmprc], map: "fkcmbtrcmprc")
  @@index([keycmqry], map: "fkcmbtrcmqry")
  @@index([keycmrbh], map: "fkcmbtrcmrbh")
}

model cmbtt {
  keycmbtt                     String   @id(map: "pkcmbtt") @db.Char(15)
  keycmcmp                     String   @db.Char(15)
  keysyusr                     String   @db.Char(15)
  keyrevrh                     String?  @db.Char(15)
  keycmbnk                     String   @db.Char(15)
  keycmbnk2                    String   @db.Char(15)
  code                         String   @db.VarChar(50)
  transdate                    DateTime @db.Date
  regdate                      DateTime @db.Date
  amount                       Float    @db.Money
  status                       Int      @db.TinyInt
  rejreason                    String?  @db.VarChar(105)
  rejcode                      String?  @db.VarChar(4)
  groupid                      String?  @db.VarChar(33)
  timestamp                    String   @db.Char(10)
  cmbnk_cmbtt_keycmbnkTocmbnk  cmbnk    @relation("cmbtt_keycmbnkTocmbnk", fields: [keycmbnk], references: [keycmbnk], onUpdate: NoAction, map: "fkcmbttkeycmbnk")
  cmbnk_cmbtt_keycmbnk2Tocmbnk cmbnk    @relation("cmbtt_keycmbnk2Tocmbnk", fields: [keycmbnk2], references: [keycmbnk], onUpdate: NoAction, map: "fkcmbttkeycmbnk2")
  cmcmp                        cmcmp    @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkcmbttkeycmcmp ")
  revrh                        revrh?   @relation(fields: [keyrevrh], references: [keyrevrh], onDelete: NoAction, onUpdate: NoAction, map: "fkcmbttkeyrevrh ")

  @@index([keycmbnk], map: "fkcmbttcmbnk")
  @@index([keycmbnk2], map: "fkcmbttcmbnk2")
  @@index([keycmcmp], map: "fkcmbttcmcmp")
  @@index([keyrevrh], map: "fkcmbttrevrh")
  @@index([keysyusr], map: "fkcmbttsyusr")
}

model cmcad {
  keycmcad  String   @id(map: "pkcmcad") @db.Char(15)
  impdate   DateTime @db.Date
  caption   String   @db.VarChar(200)
  descript  String   @db.VarChar(4000)
  timestamp String   @db.Char(10)
}

model cmcae {
  keycmcae   String    @id(map: "pkcmcae") @db.Char(15)
  keycmctc   String    @db.Char(15)
  startdate  DateTime  @db.DateTime
  starttime  DateTime  @db.DateTime
  enddate    DateTime? @db.DateTime
  endtime    DateTime? @db.DateTime
  entity     Int
  recurring  Int       @default(0, map: "DF__cmcae__recurring__02B4CDA7") @db.TinyInt
  allday     Int       @default(0, map: "DF__cmcae__allday__03A8F1E0") @db.TinyInt
  subject    String    @db.VarChar(1500)
  location   String?   @db.VarChar(1500)
  body       String?   @db.VarChar(Max)
  sensitiv   Int       @default(0, map: "DF__cmcae__sensitiv__049D1619") @db.TinyInt
  busystatus Int       @default(0, map: "DF__cmcae__busystatu__05913A52") @db.TinyInt
  created    DateTime  @db.DateTime
  exchgeid   String?   @db.VarChar(200)
  exchgeuser String?   @db.VarChar(150)
  timestamp  String    @db.Char(10)
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcaekeycmctc")

  @@index([keycmctc], map: "fkcmcaekeycmctc")
}

model cmcal {
  keycmcal   String    @id(map: "pkcmcal") @db.Char(15)
  keysyusr   String    @db.Char(15)
  keysyusr2  String?   @db.Char(15)
  keydbtbl   String    @db.Char(15)
  keydbtbl2  String?   @db.Char(15)
  keycode    String    @db.Char(15)
  keycode2   String?   @db.Char(15)
  keycmrem   String?   @db.Char(15)
  startdate  DateTime  @db.DateTime
  starttime  DateTime  @db.DateTime
  enddate    DateTime? @db.DateTime
  endtime    DateTime? @db.DateTime
  entity     Int
  recurring  Int       @default(0, map: "DF__cmcal__recurring__2AA890BE") @db.TinyInt
  allday     Int       @default(0, map: "DF__cmcal__allday__2B9CB4F7") @db.TinyInt
  subject    String    @db.VarChar(1500)
  location   String?   @db.VarChar(1500)
  body       String?   @db.VarChar(Max)
  sensitiv   Int       @default(0, map: "DF__cmcal__sensitiv__2C90D930") @db.TinyInt
  busystatus Int       @default(0, map: "DF__cmcal__busystatu__2D84FD69") @db.TinyInt
  created    DateTime  @db.DateTime
  colorcode  Int       @default(0, map: "DF__cmcal__colorcode__2E7921A2") @db.TinyInt
  calstatus  Int       @default(0, map: "DF__cmcal__calstatus__2F6D45DB") @db.TinyInt
  exchgeid   String?   @db.VarChar(200)
  exchgeuser String?   @db.VarChar(150)
  exchgetsp  String?   @db.VarChar(100)
  timestamp  String    @db.Char(10)
  cmrem      cmrem?    @relation(fields: [keycmrem], references: [keycmrem], onUpdate: NoAction, map: "fkcmcalkeycmrem ")
  cmcar      cmcar[]

  @@index([keycmrem], map: "fkcmcalcmrem")
  @@index([keydbtbl], map: "fkcmcaldbtbl")
  @@index([keydbtbl2], map: "fkcmcaldbtbl2")
  @@index([keycode], map: "fkcmcalkeycode")
  @@index([keycode2], map: "fkcmcalkeycode2")
  @@index([keysyusr], map: "fkcmcalsyusr")
  @@index([keysyusr2], map: "fkcmcalsyusr2")
}

model cmcar {
  keycmcar  String    @id(map: "pkcmcar") @db.Char(15)
  keycmcal  String    @db.Char(15)
  recurrtyp Int       @default(-1, map: "DF__cmcar__recurrtyp__31C9C442")
  startdate DateTime  @db.DateTime
  starttime DateTime  @db.DateTime
  enddate   DateTime? @db.DateTime
  endtime   DateTime? @db.DateTime
  noenddate Int       @default(0, map: "DF__cmcar__noenddate__32BDE87B") @db.TinyInt
  occurr    Int       @default(0, map: "DF__cmcar__occurr__33B20CB4")
  dom       Int       @default(0, map: "DF__cmcar__dom__34A630ED") @db.TinyInt
  dow       Int       @default(0, map: "DF__cmcar__dow__359A5526") @db.TinyInt
  instance  Int
  interval  Int
  moy       Int       @default(0, map: "DF__cmcar__moy__368E795F") @db.TinyInt
  timestamp String    @db.Char(10)
  cmcal     cmcal     @relation(fields: [keycmcal], references: [keycmcal], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcarkeycmcal")

  @@index([keycmcal], map: "fkcmcarcmcal")
}

model cmcat {
  keycmcat  String   @id(map: "pkcmcat") @db.Char(15)
  keycmctc  String   @db.Char(15)
  checkdate DateTime @db.DateTime
  timestamp String   @db.Char(10)
  cmctc     cmctc    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcatkeycmctc")

  @@index([keycmctc], map: "fkcmcatcmctc")
}

model cmccr {
  keycmccr  String  @id(map: "PK__cmccr__3BCADD1B") @db.Char(15)
  keycmcnr  String  @db.Char(15)
  condition String? @db.Char(30)
  keycmcnt  String  @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keycmcnr], map: "fkcmccrcmcnr")
  @@index([keycmcnt], map: "fkcmccrcmcnt")
}

model cmcgc {
  keycmcgc  String @id(map: "pkcmcgc") @db.Char(15)
  keycmctc  String @db.Char(15)
  keycmcgr  String @db.Char(15)
  timestamp String @db.Char(10)
  cmcgr     cmcgr  @relation(fields: [keycmcgr], references: [keycmcgr], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcgckeycmcgr ")
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcgckeycmctc")

  @@unique([keycmctc, keycmcgr], map: "akcmcgc1")
  @@index([keycmcgr], map: "fkcmcgccmcgr")
}

model cmcgm {
  keycmcgm  String @id(map: "PK__cmcgm__3CBF0154") @db.Char(15)
  keycmcgp  String @db.Char(15)
  keycode   String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmcgp], map: "fkcmcgmcmcgp")
  @@index([keycode], map: "fkcmcgmcode")
}

model cmcgp {
  keycmcgp  String  @id(map: "PK__cmcgp__3DB3258D") @db.Char(15)
  keycmcnt  String  @db.Char(15)
  keycmtyp  String  @db.Char(15)
  caption   String? @db.Char(30)
  code      String? @db.Char(30)
  timestamp String  @db.Char(10)

  @@index([keycmcnt], map: "fkcmcgpcmcnt")
  @@index([keycmtyp], map: "fkcmcgpcmtyp")
}

model cmcgr {
  keycmcgr  String  @id(map: "pkcmcgr") @db.Char(15)
  code      String  @unique(map: "akcmcgr") @db.Char(3)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  cmcgc     cmcgc[]
}

model cmcln {
  keycmcln  String  @id(map: "PK__cmcln__2E31B632") @db.Char(15)
  code      String  @db.Char(10)
  caption   String? @db.Char(30)
  defagtype Int     @default(0, map: "DF__cmcln__defagtype__2F25DA6B") @db.TinyInt
  clnused   Int     @default(1, map: "DF__cmcln__clnused__3019FEA4") @db.TinyInt
  timestamp String  @db.Char(10)
  cmbnk     cmbnk[]
}

model cmcmi {
  keycmcmi   String    @id(map: "pkcmcmi") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keysyusr1  String?   @db.Char(15)
  keysyusr2  String?   @db.Char(15)
  keysyusr3  String?   @db.Char(15)
  keysyusr4  String?   @db.Char(15)
  keysyusr5  String?   @db.Char(15)
  keysyusr6  String?   @db.Char(15)
  keysyusr7  String?   @db.Char(15)
  keysyusr8  String?   @db.Char(15)
  keysyusr9  String?   @db.Char(15)
  keysyusr10 String?   @db.Char(15)
  keysyusr11 String?   @db.Char(15)
  keysyusr12 String?   @db.Char(15)
  keysyusr13 String?   @db.Char(15)
  keysyusr14 String?   @db.Char(15)
  keysyusr15 String?   @db.Char(15)
  text1      String?   @db.VarChar(Max)
  text2      String?   @db.VarChar(Max)
  text3      String?   @db.VarChar(Max)
  text4      String?   @db.VarChar(Max)
  text5      String?   @db.VarChar(Max)
  text6      String?   @db.VarChar(Max)
  text7      String?   @db.VarChar(Max)
  text8      String?   @db.VarChar(Max)
  text9      String?   @db.VarChar(Max)
  text10     String?   @db.VarChar(Max)
  text11     String?   @db.VarChar(Max)
  text12     String?   @db.VarChar(Max)
  text13     String?   @db.VarChar(Max)
  text14     String?   @db.VarChar(Max)
  text15     String?   @db.VarChar(Max)
  editdate1  DateTime? @db.Date
  editdate2  DateTime? @db.Date
  editdate3  DateTime? @db.Date
  editdate4  DateTime? @db.Date
  editdate5  DateTime? @db.Date
  editdate6  DateTime? @db.Date
  editdate7  DateTime? @db.Date
  editdate8  DateTime? @db.Date
  editdate9  DateTime? @db.Date
  editdate10 DateTime? @db.Date
  editdate11 DateTime? @db.Date
  editdate12 DateTime? @db.Date
  editdate13 DateTime? @db.Date
  editdate14 DateTime? @db.Date
  editdate15 DateTime? @db.Date
  timestamp  String    @db.Char(10)
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkcmcmikeycmobj")

  @@index([keycmobj], map: "fkcmcmicmobj")
}

model cmcmk {
  keycmcmk                     String    @id(map: "pkcmcmk") @db.Char(15)
  keycmcmp                     String    @db.Char(15)
  keycmcmp2                    String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  amount                       Float     @default(0, map: "DF__cmcmk__amount__1FE0E988") @db.Money
  note                         String    @db.VarChar(250)
  controle                     Int       @default(0, map: "DF__cmcmk__controle__20D50DC1") @db.TinyInt
  fdate                        DateTime? @db.Date
  tdate                        DateTime? @db.Date
  timestamp                    String    @db.Char(10)
  cmcmp_cmcmk_keycmcmpTocmcmp  cmcmp     @relation("cmcmk_keycmcmpTocmcmp", fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkcmcmkkeycmcmp")
  cmcmp_cmcmk_keycmcmp2Tocmcmp cmcmp?    @relation("cmcmk_keycmcmp2Tocmcmp", fields: [keycmcmp2], references: [keycmcmp], onDelete: NoAction, onUpdate: NoAction, map: "fkcmcmkkeycmcmp2")
  cmctc                        cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcmkkeycmctc")

  @@index([keycmcmp], map: "fkcmcmkcmcmp")
  @@index([keycmcmp2], map: "fkcmcmkcmcmp2")
  @@index([keycmctc], map: "fkcmcmkcmctc")
}

model cmcmp {
  keycmcmp                     String    @id(map: "pkcmcmp") @db.Char(15)
  keysycmp                     String    @db.Char(15)
  keydbdbs                     String    @db.Char(15)
  keycmobj                     String?   @unique(map: "akcmcmpkeycmobj") @db.Char(15)
  keycmrgn                     String?   @db.Char(15)
  keycmsom                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmctc3                    String?   @db.Char(15)
  keycmart                     String?   @db.Char(15)
  keycmart2                    String?   @db.Char(15)
  keycmart3                    String?   @db.Char(15)
  keyatway                     String?   @db.Char(15)
  code                         String    @db.VarChar(10)
  caption                      String    @db.VarChar(60)
  orgnr                        String?   @db.VarChar(11)
  phone                        String?   @db.VarChar(30)
  fax                          String?   @db.VarChar(30)
  vatid                        String?   @db.VarChar(30)
  gln                          String?   @db.VarChar(13)
  intern                       Int       @default(0, map: "DF__cmcmp__intern__13ECFB14") @db.TinyInt
  jurben                       String?   @db.VarChar(60)
  fskatt                       Int       @db.TinyInt
  brf                          Int       @default(0, map: "DF__cmcmp__brf__14E11F4D") @db.TinyInt
  diffshare                    Int       @default(0, map: "DF__cmcmp__diffshare__15D54386") @db.TinyInt
  hyadm                        Int       @default(0, map: "DF__cmcmp__hyadm__16C967BF") @db.TinyInt
  blocked                      Int       @default(0, map: "DF__cmcmp__blocked__17BD8BF8") @db.TinyInt
  rentdays                     Int       @default(0, map: "DF__cmcmp__rentdays__18B1B031") @db.TinyInt
  planlssend                   DateTime? @db.DateTime
  planlsgodk                   Int       @default(0, map: "DF__cmcmp__planlsgod__19A5D46A") @db.TinyInt
  planlsdate                   DateTime? @db.DateTime
  hgfavgift                    Float?    @db.Money
  fondavs                      Float?    @db.Money
  vatoblprct                   Int       @default(0, map: "DF__cmcmp__vatoblprc__1A99F8A3") @db.TinyInt
  vatliable                    Int       @default(0, map: "DF__cmcmp__vatliable__1B8E1CDC") @db.TinyInt
  energopt                     Int       @default(0, map: "DF__cmcmp__energopt__1C824115") @db.TinyInt
  owned                        Int       @default(0, map: "DF__cmcmp__owned__1D76654E") @db.TinyInt
  intinv                       Int       @default(0, map: "DF__cmcmp__intinv__1E6A8987") @db.TinyInt
  aoadm                        Int       @default(0, map: "DF__cmcmp__aoadm__1F5EADC0") @db.TinyInt
  drinv                        Int       @default(0, map: "DF__cmcmp__drinv__2052D1F9") @db.TinyInt
  resintmain                   Int       @default(0, map: "DF__cmcmp__resintmai__2146F632") @db.TinyInt
  valueyear                    Int?      @db.SmallInt
  lockedqty                    Int       @default(0, map: "DF__cmcmp__lockedqty__223B1A6B") @db.TinyInt
  morttype                     Int       @default(0, map: "DF__cmcmp__morttype__232F3EA4") @db.TinyInt
  mortamount                   Float?    @db.Money
  trantype                     Int       @default(0, map: "DF__cmcmp__trantype__242362DD") @db.TinyInt
  tranamount                   Float?    @db.Money
  demandfee                    Float?    @db.Money
  sublettype                   Int       @default(0, map: "DF__cmcmp__sublettyp__25178716") @db.TinyInt
  subletproc                   Decimal   @default(0, map: "DF__cmcmp__subletpro__260BAB4F") @db.Decimal(7, 2)
  subletfee                    Float     @default(0, map: "DF__cmcmp__subletfee__26FFCF88") @db.Money
  timestamp                    String    @db.Char(10)
  alobj                        alobj[]
  aoupp                        aoupp[]
  atats                        atats[]
  bramo                        bramo[]
  brcdb                        brcdb[]
  brdkh                        brdkh[]
  cmacc                        cmacc[]
  cmbnk                        cmbnk[]
  cmbtt                        cmbtt[]
  cmcmk_cmcmk_keycmcmpTocmcmp  cmcmk[]   @relation("cmcmk_keycmcmpTocmcmp")
  cmcmk_cmcmk_keycmcmp2Tocmcmp cmcmk[]   @relation("cmcmk_keycmcmp2Tocmcmp")
  atway                        atway?    @relation(fields: [keyatway], references: [keyatway], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcmpkeyatway")
  cmart_cmcmp_keycmartTocmart  cmart?    @relation("cmcmp_keycmartTocmart", fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkcmcmpkeycmart")
  cmart_cmcmp_keycmart2Tocmart cmart?    @relation("cmcmp_keycmart2Tocmart", fields: [keycmart2], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkcmcmpkeycmart2")
  cmart_cmcmp_keycmart3Tocmart cmart?    @relation("cmcmp_keycmart3Tocmart", fields: [keycmart3], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkcmcmpkeycmart3")
  cmctc_cmcmp_keycmctcTocmctc  cmctc?    @relation("cmcmp_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkcmcmpkeycmctc")
  cmctc_cmcmp_keycmctc2Tocmctc cmctc?    @relation("cmcmp_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkcmcmpkeycmctc2")
  cmctc_cmcmp_keycmctc3Tocmctc cmctc?    @relation("cmcmp_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkcmcmpkeycmctc3")
  cmobj                        cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, map: "fkcmcmpkeycmobj ")
  cmrgn                        cmrgn?    @relation(fields: [keycmrgn], references: [keycmrgn], map: "fkcmcmpkeycmrgn ")
  cmsom                        cmsom?    @relation(fields: [keycmsom], references: [keycmsom], map: "fkcmcmpkeycmsom ")
  cmibx                        cmibx[]
  faprn                        faprn[]
  hyavi                        hyavi[]
  hyobj_hyobj_keycmcmpTocmcmp  hyobj[]   @relation("hyobj_keycmcmpTocmcmp")
  hyobj_hyobj_keycmcmp2Tocmcmp hyobj[]   @relation("hyobj_keycmcmp2Tocmcmp")
  hyrad                        hyrad[]
  kramp                        kramp[]
  krbfl                        krbfl[]
  krdcc                        krdcc[]
  krfkh                        krfkh[]
  lnobj                        lnobj[]
  lnprj                        lnprj[]
  lnvrt                        lnvrt[]
  prprj                        prprj[]

  @@index([keyatway], map: "fkcmcmpatway")
  @@index([keycmart], map: "fkcmcmpcmart")
  @@index([keycmart2], map: "fkcmcmpcmart2")
  @@index([keycmart3], map: "fkcmcmpcmart3")
  @@index([keycmctc], map: "fkcmcmpcmctc")
  @@index([keycmctc2], map: "fkcmcmpcmctc2")
  @@index([keycmctc3], map: "fkcmcmpcmctc3")
  @@index([keycmobj], map: "fkcmcmpcmobj")
  @@index([keycmrgn], map: "fkcmcmpcmrgn")
  @@index([keycmsom], map: "fkcmcmpcmsom")
  @@index([keydbdbs], map: "fkcmcmpdbdbs")
  @@index([keysycmp], map: "fkcmcmpsycmp")
  @@index([code], map: "incmcmp_2HK0JJ50M")
  @@index([caption], map: "incmcmp_2HK0JJ52U")
  @@index([keycmsom, keycmobj, keycmcmp, keycmrgn], map: "incmcmp_2HK0JJ568")
  @@index([code, keycmcmp, caption], map: "incmcmp_2HK0JJ58U")
}

model cmcni {
  keycmcni  String @id(map: "PK__cmcni__408F9238") @db.Char(15)
  value     Int?
  keycmccr  String @db.Char(15)
  period    String @db.Char(30)
  timestamp String @db.Char(10)

  @@index([keycmccr], map: "fkcmcnicmccr")
}

model cmcnr {
  keycmcnr  String  @id(map: "PK__cmcnr__4183B671") @unique(map: "akcmcnr1") @db.Char(15)
  keycmobt  String  @db.Char(15)
  keydbfld  String? @db.Char(15)
  condform  String? @db.Text
  cnrben    String  @db.Char(30)
  timestamp String  @db.Char(10)

  @@index([keycmobt], map: "fkcmcnrcmobt")
  @@index([keydbfld], map: "fkcmcnrdbfld")
}

model cmcnt {
  keycmcnt   String  @id(map: "pkcmcnt") @db.Char(15)
  keysymdl   String? @db.Char(15)
  formula    String? @db.VarChar(200)
  cntben     String  @db.VarChar(30)
  pformula   String? @db.VarChar(100)
  startvalue Int     @default(1, map: "DF__cmcnt__startvalu__3D78EE58")
  reuse      Int?    @db.TinyInt
  timestamp  String  @db.Char(10)

  @@index([keysymdl], map: "fkcmcntsymdl")
}

model cmcpt {
  keycmcpt  String  @id(map: "pkcmcpt") @db.Char(15)
  keycmtrd  String  @db.Char(15)
  keycmctc  String  @db.Char(15)
  caption   String  @db.VarChar(100)
  timestamp String  @db.Char(10)
  cmctc     cmctc   @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkcmcptkeycmctc")
  cmtrd     cmtrd   @relation(fields: [keycmtrd], references: [keycmtrd], onUpdate: NoAction, map: "fkcmcptkeycmtrd ")
  hyobj     hyobj[]
  hystl     hystl[]

  @@index([keycmctc], map: "fkcmcptcmctc")
  @@index([keycmtrd], map: "fkcmcptcmtrd")
}

model cmcrc {
  keycmcrc  String @id(map: "PK__cmcrc__436BFEE3") @db.Char(15)
  keycmcni  String @db.Char(15)
  value     Int
  timestamp String @db.Char(10)

  @@index([keycmcni], map: "fkcmcrccmcni")
}

model cmcro {
  keycmcro  String    @id(map: "pkcmcro") @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmrol  String    @db.Char(15)
  croused   Int       @default(1, map: "DF__cmcro__croused__21893AD8") @db.TinyInt
  lastused  DateTime? @db.Date
  timestamp String    @db.Char(10)
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkcmcrokeycmctc")
  cmrol     cmrol     @relation(fields: [keycmrol], references: [keycmrol], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcrokeycmrol ")

  @@unique([keycmctc, keycmrol], map: "akcmcro1")
  @@index([keycmrol, keycmctc, croused], map: "incmcro_2KX0OZPES")
}

model cmcss {
  keycmcss  String @id(map: "pkcmcss") @db.Char(15)
  keycmctc  String @db.Char(15)
  smsanswer Int    @default(1, map: "DF__cmcss__smsanswer__5F9B7BEA") @db.TinyInt
  smskind   Int    @default(0, map: "DF__cmcss__smskind__608FA023") @db.SmallInt
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmcsskeycmctc")

  @@unique([keycmctc, smskind], map: "akcmcss")
}

model cmcta {
  keycmcta  String @id(map: "pkcmcta") @db.Char(15)
  keycmctc  String @unique(map: "akcmcta") @db.Char(15)
  aliaskind Int    @default(1, map: "DF__cmcta__aliaskind__64603107") @db.TinyInt
  aliasstr  String @db.VarChar(70)
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmctakeycmctc")
}

model cmctc {
  keycmctc                     String    @id(map: "pkcmctc") @db.Char(15)
  keycmobj                     String    @db.Char(15)
  keycmctk                     String    @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmcuh                     String?   @db.Char(15)
  keysyloc                     String    @db.Char(15)
  keysyusr                     String?   @db.Char(15)
  keylrpmt                     String    @db.Char(15)
  keyaover                     String?   @db.Char(15)
  keyaover2                    String?   @db.Char(15)
  keycmtgr                     String?   @db.Char(15)
  keyprdel                     String?   @db.Char(15)
  keysylng                     String?   @db.Char(15)
  cmctckod                     String    @unique(map: "akcmctc") @db.VarChar(30)
  cmctcben                     String    @db.VarChar(100)
  persorgnr                    String?   @db.VarChar(15)
  lcidcivno                    Int
  birthdate                    DateTime? @db.DateTime
  gender                       Int       @default(0, map: "DF__cmctc__gender__659FE265") @db.TinyInt
  civilstat                    Int       @default(0, map: "DF__cmctc__civilstat__6694069E") @db.TinyInt
  fnamn                        String?   @db.VarChar(30)
  mname                        String?   @db.VarChar(30)
  enamn                        String?   @db.VarChar(45)
  birthname                    String?   @db.VarChar(45)
  xname                        String?   @db.VarChar(30)
  title                        String?   @db.VarChar(30)
  passno                       String?   @db.VarChar(30)
  region                       String?   @db.Char(2)
  avdelning                    String?   @db.VarChar(45)
  studentno                    String?   @db.VarChar(30)
  nstudentno                   String?   @db.VarChar(30)
  sstudentno                   String?   @db.VarChar(30)
  studcheck                    Int       @default(0, map: "DF__cmctc__studcheck__67882AD7") @db.TinyInt
  startstu                     DateTime? @db.DateTime
  graddate                     DateTime? @db.DateTime
  createdate                   DateTime? @db.Date
  avliden                      DateTime? @db.DateTime
  konkurs                      DateTime? @db.DateTime
  lagsokt                      DateTime? @db.DateTime
  utslag                       DateTime? @db.DateTime
  avhyst                       DateTime? @db.DateTime
  delgiven                     DateTime? @db.DateTime
  betfore                      DateTime? @db.DateTime
  aggressive                   DateTime? @db.DateTime
  msnp                         DateTime? @db.DateTime
  wsnp                         DateTime? @db.DateTime
  sletdate                     DateTime? @db.DateTime
  demstatus                    Int       @default(0, map: "DF__cmctc__demstatus__687C4F10") @db.TinyInt
  hgffrom                      DateTime? @db.DateTime
  hgftom                       DateTime? @db.DateTime
  anstnr                       String?   @db.VarChar(15)
  cper                         Int       @default(0, map: "DF__cmctc__cper__69707349") @db.TinyInt
  prminbel                     Float?    @db.Money
  forvtyp                      Int?      @db.TinyInt
  resursmail                   Int       @default(0, map: "DF__cmctc__resursmai__6A649782") @db.TinyInt
  aoexport                     Int       @default(0, map: "DF__cmctc__aoexport__6B58BBBB") @db.TinyInt
  mailnoti                     Int       @default(0, map: "DF__cmctc__mailnoti__6C4CDFF4") @db.TinyInt
  jobprcnt                     Decimal?  @db.Decimal(4, 1)
  pg                           String?   @db.VarChar(11)
  bg                           String?   @db.VarChar(11)
  clearing                     Int?
  account                      String?   @db.VarChar(20)
  accheck                      Int       @default(0, map: "DF__cmctc__accheck__6D41042D") @db.TinyInt
  accnttype                    Int       @default(0, map: "DF__cmctc__accnttype__6E352866") @db.TinyInt
  bic                          String?   @db.VarChar(11)
  iban                         String?   @db.VarChar(42)
  vatno                        String?   @db.VarChar(20)
  gln                          String?   @db.VarChar(13)
  aouppinfo                    String?   @db.VarChar(60)
  aoadmmail                    Int       @default(0, map: "DF__cmctc__aoadmmail__6F294C9F") @db.TinyInt
  gdprkeep                     Int       @default(0, map: "DF__cmctc__gdprkeep__701D70D8") @db.TinyInt
  gdprdate                     DateTime? @db.Date
  gdprreason                   String?   @db.VarChar(100)
  externid                     String?   @db.VarChar(64)
  atremtype                    Int       @default(0, map: "DF__cmctc__atremtype__71119511") @db.TinyInt
  ikmestype                    Int       @default(0, map: "DF__cmctc__ikmestype__7205B94A") @db.TinyInt
  gensoi                       Int       @default(1, map: "DF__cmctc__gensoi__72F9DD83") @db.TinyInt
  nomerge                      Int       @default(0, map: "DF__cmctc__nomerge__73EE01BC") @db.TinyInt
  korrvag                      Int       @default(0, map: "DF__cmctc__korrvag__74E225F5") @db.TinyInt
  extblocked                   Int       @default(0, map: "DF__cmctc__extblocke__75D64A2E") @db.TinyInt
  blockads                     Int       @default(0, map: "DF__cmctc__blockads__76CA6E67") @db.TinyInt
  blockinfo                    Int       @default(0, map: "DF__cmctc__blockinfo__77BE92A0") @db.TinyInt
  dgophone                     Int       @default(0, map: "DF__cmctc__dgophone__78B2B6D9") @db.TinyInt
  citizen                      Int       @default(0, map: "DF__cmctc__citizen__79A6DB12") @db.TinyInt
  birthtime                    String?   @db.Char(3)
  otherid                      String?   @db.VarChar(30)
  tin                          String?   @db.VarChar(30)
  tincountry                   String?   @db.Char(2)
  ppersorgnr                   String?   @db.VarChar(15)
  pfnamn                       String?   @db.VarChar(30)
  penamn                       String?   @db.VarChar(30)
  pcmctcben                    String?   @db.VarChar(100)
  dsguid                       String?   @db.VarChar(60)
  digitalcom                   Int       @default(0, map: "DF__cmctc__digitalco__7A9AFF4B") @db.TinyInt
  deletemark                   Int       @default(0, map: "DF__cmctc__deletemar__7B8F2384") @db.TinyInt
  timestamp                    String    @db.Char(10)
  aiinv_aiinv_keycmctcTocmctc  aiinv[]   @relation("aiinv_keycmctcTocmctc")
  aiinv_aiinv_keycmctc2Tocmctc aiinv[]   @relation("aiinv_keycmctc2Tocmctc")
  alobj                        alobj[]
  ambas                        ambas[]
  amext                        amext[]
  aocap                        aocap[]
  aoedo                        aoedo[]
  aofil                        aofil[]
  aohfc                        aohfc[]
  aorml_aorml_keycmctcTocmctc  aorml[]   @relation("aorml_keycmctcTocmctc")
  aorml_aorml_keycmctc6Tocmctc aorml[]   @relation("aorml_keycmctc6Tocmctc")
  aoufr                        aoufr[]
  aoupp_aoupp_keycmctcTocmctc  aoupp[]   @relation("aoupp_keycmctcTocmctc")
  aoupp_aoupp_keycmctc2Tocmctc aoupp[]   @relation("aoupp_keycmctc2Tocmctc")
  aoupp_aoupp_keycmctc3Tocmctc aoupp[]   @relation("aoupp_keycmctc3Tocmctc")
  aoupp_aoupp_keycmctc4Tocmctc aoupp[]   @relation("aoupp_keycmctc4Tocmctc")
  aoupp_aoupp_keycmctc5Tocmctc aoupp[]   @relation("aoupp_keycmctc5Tocmctc")
  aoupp_aoupp_keycmctc6Tocmctc aoupp[]   @relation("aoupp_keycmctc6Tocmctc")
  aoupp_aoupp_keycmctc7Tocmctc aoupp[]   @relation("aoupp_keycmctc7Tocmctc")
  aouro                        aouro[]
  aovte                        aovte[]
  aowbc                        aowbc[]
  aowbd                        aowbd[]
  atati                        atati[]
  atats                        atats[]
  baclh                        baclh[]
  bafen_bafen_keycmctcTocmctc  bafen[]   @relation("bafen_keycmctcTocmctc")
  bafen_bafen_keycmctc2Tocmctc bafen[]   @relation("bafen_keycmctc2Tocmctc")
  bafst_bafst_keycmctcTocmctc  bafst[]   @relation("bafst_keycmctcTocmctc")
  bafst_bafst_keycmctc2Tocmctc bafst[]   @relation("bafst_keycmctc2Tocmctc")
  bakmp_bakmp_keycmctcTocmctc  bakmp[]   @relation("bakmp_keycmctcTocmctc")
  bakmp_bakmp_keycmctc2Tocmctc bakmp[]   @relation("bakmp_keycmctc2Tocmctc")
  barek                        barek[]
  basys_basys_keycmctcTocmctc  basys[]   @relation("basys_keycmctcTocmctc")
  basys_basys_keycmctc2Tocmctc basys[]   @relation("basys_keycmctc2Tocmctc")
  bazav_bazav_keycmctcTocmctc  bazav[]   @relation("bazav_keycmctcTocmctc")
  bazav_bazav_keycmctc2Tocmctc bazav[]   @relation("bazav_keycmctc2Tocmctc")
  bazav_bazav_keycmctc3Tocmctc bazav[]   @relation("bazav_keycmctc3Tocmctc")
  bazav_bazav_keycmctc4Tocmctc bazav[]   @relation("bazav_keycmctc4Tocmctc")
  bkadu_bkadu_keycmctcTocmctc  bkadu[]   @relation("bkadu_keycmctcTocmctc")
  bkadu_bkadu_keycmctc2Tocmctc bkadu[]   @relation("bkadu_keycmctc2Tocmctc")
  bkalt                        bkalt[]
  bkcar                        bkcar[]
  bkchi_bkchi_keycmctcTocmctc  bkchi[]   @relation("bkchi_keycmctcTocmctc")
  bkchi_bkchi_keycmctc2Tocmctc bkchi[]   @relation("bkchi_keycmctc2Tocmctc")
  bkdcc                        bkdcc[]
  bksec_bksec_keycmctcTocmctc  bksec[]   @relation("bksec_keycmctcTocmctc")
  bksec_bksec_keycmctc2Tocmctc bksec[]   @relation("bksec_keycmctc2Tocmctc")
  brcdt                        brcdt[]
  cmabs                        cmabs[]
  cmcae                        cmcae[]
  cmcat                        cmcat[]
  cmcgc                        cmcgc[]
  cmcmk                        cmcmk[]
  cmcmp_cmcmp_keycmctcTocmctc  cmcmp[]   @relation("cmcmp_keycmctcTocmctc")
  cmcmp_cmcmp_keycmctc2Tocmctc cmcmp[]   @relation("cmcmp_keycmctc2Tocmctc")
  cmcmp_cmcmp_keycmctc3Tocmctc cmcmp[]   @relation("cmcmp_keycmctc3Tocmctc")
  cmcpt                        cmcpt[]
  cmcro                        cmcro[]
  cmcss                        cmcss[]
  cmcta                        cmcta?
  aover_cmctc_keyaoverToaover  aover?    @relation("cmctc_keyaoverToaover", fields: [keyaover], references: [keyaover], onDelete: NoAction, onUpdate: NoAction, map: "fkcmctckeyaover")
  aover_cmctc_keyaover2Toaover aover?    @relation("cmctc_keyaover2Toaover", fields: [keyaover2], references: [keyaover], onDelete: NoAction, onUpdate: NoAction, map: "fkcmctckeyaover2")
  cmctk                        cmctk     @relation(fields: [keycmctk], references: [keycmctk], onUpdate: NoAction, map: "fkcmctckeycmctk")
  cmcuh                        cmcuh?    @relation(fields: [keycmcuh], references: [keycmcuh], onDelete: NoAction, onUpdate: NoAction, map: "fkcmctckeycmcuh")
  cmtgr_cmctc_keycmtgrTocmtgr  cmtgr?    @relation("cmctc_keycmtgrTocmtgr", fields: [keycmtgr], references: [keycmtgr], onDelete: NoAction, onUpdate: NoAction, map: "fkcmctckeycmtgr")
  lrpmt                        lrpmt     @relation(fields: [keylrpmt], references: [keylrpmt], onUpdate: NoAction, map: "fkcmctckeylrpmt")
  prdel                        prdel?    @relation(fields: [keyprdel], references: [keyprdel], onDelete: NoAction, onUpdate: NoAction, map: "fkcmctckeyprdel")
  cmctp                        cmctp[]
  cmelr                        cmelr[]
  cminr_cminr_keycmctcTocmctc  cminr[]   @relation("cminr_keycmctcTocmctc")
  cminr_cminr_keycmctc2Tocmctc cminr[]   @relation("cminr_keycmctc2Tocmctc")
  cmlpi                        cmlpi[]
  cmrer                        cmrer[]
  cmres                        cmres[]
  cmrgk                        cmrgk[]
  cmtgk                        cmtgk[]
  cmtgr_cmtgr_keycmctcTocmctc  cmtgr[]   @relation("cmtgr_keycmctcTocmctc")
  crcom                        crcom[]
  crnoc                        crnoc[]
  crtsk_crtsk_keycmctcTocmctc  crtsk[]   @relation("crtsk_keycmctcTocmctc")
  crtsk_crtsk_keycmctc2Tocmctc crtsk[]   @relation("crtsk_keycmctc2Tocmctc")
  dodss                        dodss[]
  dorev_dorev_keycmctcTocmctc  dorev[]   @relation("dorev_keycmctcTocmctc")
  dorev_dorev_keycmctc2Tocmctc dorev[]   @relation("dorev_keycmctc2Tocmctc")
  dosgn                        dosgn[]
  doutl                        doutl[]
  drmpt                        drmpt[]
  fbbes                        fbbes[]
  fbbpk                        fbbpk[]
  fbreb                        fbreb[]
  fbres                        fbres[]
  feocd                        feocd[]
  hgerb                        hgerb[]
  hyber                        hyber[]
  hydis                        hydis[]
  hyfok                        hyfok[]
  hykrl                        hykrl[]
  hysec                        hysec[]
  hywre                        hywre[]
  ikbeh_ikbeh_keycmctcTocmctc  ikbeh[]   @relation("ikbeh_keycmctcTocmctc")
  ikbeh_ikbeh_keycmctc2Tocmctc ikbeh[]   @relation("ikbeh_keycmctc2Tocmctc")
  ikktp_ikktp_keycmctcTocmctc  ikktp[]   @relation("ikktp_keycmctcTocmctc")
  ikktp_ikktp_keycmctc2Tocmctc ikktp[]   @relation("ikktp_keycmctc2Tocmctc")
  ikmac                        ikmac[]
  kragl                        kragl[]
  kramp_kramp_keycmctcTocmctc  kramp[]   @relation("kramp_keycmctcTocmctc")
  kramp_kramp_keycmctc2Tocmctc kramp[]   @relation("kramp_keycmctc2Tocmctc")
  krbfl                        krbfl[]
  krbss                        krbss?
  krdcc                        krdcc[]
  krfkh_krfkh_keycmctc2Tocmctc krfkh[]   @relation("krfkh_keycmctc2Tocmctc")
  krfkh_krfkh_keycmctc3Tocmctc krfkh[]   @relation("krfkh_keycmctc3Tocmctc")
  krfkh_krfkh_keycmctc4Tocmctc krfkh[]   @relation("krfkh_keycmctc4Tocmctc")
  krfkh_krfkh_keycmctc5Tocmctc krfkh[]   @relation("krfkh_keycmctc5Tocmctc")
  krknr                        krknr?
  lbbes                        lbbes[]
  lnobj                        lnobj[]
  mmack                        mmack[]
  mmctc_mmctc_keycmctcTocmctc  mmctc?    @relation("mmctc_keycmctcTocmctc")
  mmctc_mmctc_keycmctc2Tocmctc mmctc[]   @relation("mmctc_keycmctc2Tocmctc")
  mmctc_mmctc_keycmctc3Tocmctc mmctc[]   @relation("mmctc_keycmctc3Tocmctc")
  mmfst_mmfst_keycmctcTocmctc  mmfst[]   @relation("mmfst_keycmctcTocmctc")
  mmfst_mmfst_keycmctc2Tocmctc mmfst[]   @relation("mmfst_keycmctc2Tocmctc")
  mmfst_mmfst_keycmctc3Tocmctc mmfst[]   @relation("mmfst_keycmctc3Tocmctc")
  mminh                        mminh[]
  mmolg_mmolg_keycmctcTocmctc  mmolg[]   @relation("mmolg_keycmctcTocmctc")
  mmolg_mmolg_keycmctc2Tocmctc mmolg[]   @relation("mmolg_keycmctc2Tocmctc")
  nysys_nysys_keycmctcTocmctc  nysys[]   @relation("nysys_keycmctcTocmctc")
  nysys_nysys_keycmctc2Tocmctc nysys[]   @relation("nysys_keycmctc2Tocmctc")
  nysys_nysys_keycmctc3Tocmctc nysys[]   @relation("nysys_keycmctc3Tocmctc")
  pract                        pract[]
  prark                        prark[]
  prdct                        prdct[]
  prldp                        prldp[]
  prmtk                        prmtk[]
  prmtr_prmtr_keycmctcTocmctc  prmtr[]   @relation("prmtr_keycmctcTocmctc")
  prmtr_prmtr_keycmctc2Tocmctc prmtr[]   @relation("prmtr_keycmctc2Tocmctc")
  prpci                        prpci[]
  prppr_prppr_keycmctcTocmctc  prppr[]   @relation("prppr_keycmctcTocmctc")
  prppr_prppr_keycmctc2Tocmctc prppr[]   @relation("prppr_keycmctc2Tocmctc")
  prppr_prppr_keycmctc3Tocmctc prppr[]   @relation("prppr_keycmctc3Tocmctc")
  prppr_prppr_keycmctc4Tocmctc prppr[]   @relation("prppr_keycmctc4Tocmctc")
  prprj_prprj_keycmctcTocmctc  prprj[]   @relation("prprj_keycmctcTocmctc")
  prprj_prprj_keycmctc2Tocmctc prprj[]   @relation("prprj_keycmctc2Tocmctc")
  prprj_prprj_keycmctc3Tocmctc prprj[]   @relation("prprj_keycmctc3Tocmctc")
  prprj_prprj_keycmctc4Tocmctc prprj[]   @relation("prprj_keycmctc4Tocmctc")
  prprj_prprj_keycmctc5Tocmctc prprj[]   @relation("prprj_keycmctc5Tocmctc")
  prpro                        prpro[]
  puprd                        puprd[]
  skkal                        skkal[]
  skund                        skund[]
  stcth                        stcth[]
  stund                        stund[]
  stupd_stupd_keycmctcTocmctc  stupd[]   @relation("stupd_keycmctcTocmctc")
  stupd_stupd_keycmctc2Tocmctc stupd[]   @relation("stupd_keycmctc2Tocmctc")
  tvprd                        tvprd[]
  tvsta                        tvsta[]
  tvvos                        tvvos[]
  vcrse_vcrse_keycmctcTocmctc  vcrse[]   @relation("vcrse_keycmctcTocmctc")
  vcrse_vcrse_keycmctc2Tocmctc vcrse[]   @relation("vcrse_keycmctc2Tocmctc")

  @@index([keyaover], map: "fkcmctcaover")
  @@index([keyaover2], map: "fkcmctcaover2")
  @@index([keycmctc2], map: "fkcmctccmctc2")
  @@index([keycmctk], map: "fkcmctccmctk")
  @@index([keycmcuh], map: "fkcmctccmcuh")
  @@index([keycmobj], map: "fkcmctccmobj")
  @@index([keycmtgr], map: "fkcmctccmtgr")
  @@index([keylrpmt], map: "fkcmctclrpmt")
  @@index([keyprdel], map: "fkcmctcprdel")
  @@index([keysylng], map: "fkcmctcsylng")
  @@index([keysyloc], map: "fkcmctcsyloc")
  @@index([keysyusr], map: "fkcmctcsyusr")
  @@index([cmctcben], map: "incmctc2")
  @@index([persorgnr], map: "incmctc3")
  @@index([fnamn], map: "incmctc4")
  @@index([enamn], map: "incmctc5")
  @@index([keycmctc, keysyusr], map: "incmctc6")
  @@index([keycmctc, deletemark, keycmobj], map: "incmctc7")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cmctc_dblcnt {
  persorgnr String? @db.VarChar(15)
  antal     Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cmctc_deleteDbl210118_drn {
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cmctc_dubletter {
  keycmctc     String  @db.Char(15)
  keycmobj     String  @db.Char(15)
  keysyusr     String? @db.Char(15)
  cmctckod     String  @db.VarChar(30)
  persorgnr    String? @db.VarChar(15)
  cmctcben     String  @db.VarChar(100)
  harAnvandare String  @db.VarChar(3)
  rollSokande  String  @db.VarChar(3)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cmctc_OldUserDbl {
  persorgnr String? @db.VarChar(15)
  antal     Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cmctc_oldUserid {
  userid     String    @db.VarChar(80)
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

model cmcte {
  keycmcte   String  @id(map: "PK__cmcte__75592B89") @db.Char(15)
  keycmctk   String  @db.Char(15)
  code       String  @db.Char(50)
  caption    String  @db.Char(30)
  ctedefault Int     @default(0, map: "DF__cmcte__ctedefaul__764D4FC2") @db.TinyInt
  timestamp  String  @db.Char(10)
  hyinf      hyinf[]

  @@unique([keycmctk, caption], map: "akcmcte1")
  @@unique([keycmctk, code], map: "akcmcte2")
  @@index([keycmctk], map: "fkcmctecmctk")
}

model cmctk {
  keycmctk  String  @id(map: "pkcmctk") @db.Char(15)
  code      String  @db.Char(3)
  caption   String  @db.Char(30)
  fysperson Int     @default(0, map: "DF__cmctk__fysperson__4306AE99") @db.TinyInt
  frinr     Int     @default(0, map: "DF__cmctk__frinr__43FAD2D2") @db.TinyInt
  credinv   Int     @default(0, map: "DF__cmctk__credinv__44EEF70B") @db.TinyInt
  repabkod  Int     @default(0, map: "DF__cmctk__repabkod__45E31B44") @db.TinyInt
  timestamp String  @db.Char(10)
  cmctc     cmctc[]
}

model cmctm {
  keycmctm  String @id(map: "pkcmctm") @db.Char(15)
  keycmctc  String @db.Char(15)
  keysymdl  String @db.Char(15)
  nocharge  Int    @db.TinyInt
  web       Int    @default(0, map: "DF__cmctm__web__5D469F6C") @db.TinyInt
  mobile    Int    @default(0, map: "DF__cmctm__mobile__5E3AC3A5") @db.TinyInt
  timestamp String @db.Char(10)

  @@unique([keycmctc, keysymdl], map: "akcmctm1")
  @@index([keycmctc], map: "fkcmctmcmctc")
  @@index([keysymdl], map: "fkcmctmsymdl")
}

model cmctp {
  keycmctp   String    @id(map: "pkcmctp") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmctt   String?   @db.Char(15)
  caption    String?   @db.VarChar(150)
  localmail  String?   @db.VarChar(100)
  localphone String?   @db.VarChar(150)
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  publish    Int       @default(0, map: "DF__cmctp__publish__61173050") @db.TinyInt
  timestamp  String    @db.Char(10)
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmctpkeycmctc")
  cmctt      cmctt?    @relation(fields: [keycmctt], references: [keycmctt], onUpdate: NoAction, map: "fkcmctpkeycmctt ")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkcmctpkeycmobj ")

  @@index([keycmctc], map: "fkcmctpcmctc")
  @@index([keycmctt], map: "fkcmctpcmctt")
  @@index([keycmobj], map: "fkcmctpcmobj")
}

model cmctr {
  keycmctr  String  @id(map: "pkcmctr") @db.Char(15)
  keycmobj  String  @db.Char(15)
  keycmobj2 String  @db.Char(15)
  keycmctt  String? @db.Char(15)
  caption   String? @db.VarChar(150)
  timestamp String  @db.Char(10)
  cmctt     cmctt?  @relation(fields: [keycmctt], references: [keycmctt], onDelete: Cascade, onUpdate: NoAction, map: "fkcmctrkeycmctt ")
  cmobj     cmobj   @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkcmctrkeycmobj")

  @@index([keycmctt], map: "fkcmctrcmctt")
  @@index([keycmobj], map: "fkcmctrcmobj")
  @@index([keycmobj2], map: "fkcmctrcmobj2")
}

model cmctt {
  keycmctt  String  @id(map: "pkcmctt") @db.Char(15)
  caption   String  @unique(map: "akcmctt1") @db.VarChar(60)
  sortorder Int     @default(0, map: "DF__cmctt__sortorder__52081696") @db.SmallInt
  timestamp String  @db.Char(10)
  cmctp     cmctp[]
  cmctr     cmctr[]
}

model cmcuh {
  keycmcuh  String  @id(map: "PK__cmcuh__033D368C") @db.Char(15)
  code      String? @db.Char(4)
  name      String? @db.Char(30)
  region    String? @db.Char(2)
  decimals  Int?    @db.SmallInt
  timestamp String  @db.Char(10)
  cmctc     cmctc[]
  drecc     drecc[]
  revrr     revrr[]
}

model cmcur {
  keycmcur  String   @id(map: "PK__cmcur__4924D839") @db.Char(15)
  keycmcuh  String?  @db.Char(15)
  regdate   DateTime @db.DateTime
  fromdate  DateTime @db.DateTime
  buy       Int?
  sell      Int?
  timestamp String   @db.Char(10)

  @@index([keycmcuh], map: "fkcmcurcmcuh")
}

model cmcuz {
  keycmcuz   String   @id(map: "pkcmcuz") @db.Char(15)
  keycmctc   String   @db.Char(15)
  keycmctc2  String?  @db.Char(15)
  keycmctc3  String?  @db.Char(15)
  keyaover   String?  @db.Char(15)
  keyaover2  String?  @db.Char(15)
  keyhyobj   String?  @db.Char(15)
  caption    String   @db.VarChar(60)
  cuzdesc    String?  @db.VarChar(2000)
  fdate      DateTime @db.Date
  cuztype    Int      @default(1, map: "DF__cmcuz__cuztype__43816CE1") @db.TinyInt
  hasservagr Int      @default(0, map: "DF__cmcuz__hasservag__4475911A") @db.TinyInt
  timestamp  String   @db.Char(10)

  @@index([keyaover], map: "fkcmcuzaover")
  @@index([keyaover2], map: "fkcmcuzaover2")
  @@index([keycmctc], map: "fkcmcuzcmctc")
  @@index([keycmctc2], map: "fkcmcuzcmctc2")
  @@index([keycmctc3], map: "fkcmcuzcmctc3")
  @@index([keyhyobj], map: "fkcmcuzhyobj")
}

model cmdbg {
  keycmdbg  String  @id(map: "pkcmdbg") @db.Char(15)
  keycmcmp  String? @db.Char(15)
  keycmdbm  String  @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keyrevrt  String? @db.Char(15)
  keyrevrt2 String? @db.Char(15)
  id        String? @db.Char(20)
  giro      String  @db.Char(20)
  bic       String? @db.Char(11)
  iban      String? @db.Char(42)
  timestamp String  @db.Char(10)
  cmdby     cmdby[]
  kragk     kragk[]

  @@index([keycmcmp], map: "fkcmdbgcmcmp")
  @@index([keycmdbm], map: "fkcmdbgcmdbm")
  @@index([keycode], map: "fkcmdbgcode")
  @@index([keydbtbl], map: "fkcmdbgdbtbl")
  @@index([keyrevrt], map: "fkcmdbgrevrt")
  @@index([keyrevrt2], map: "fkcmdbgrevrt2")
}

model cmdbm {
  keycmdbm   String  @id(map: "PK__cmdbm__6BAFC5BE") @db.Char(15)
  keycmrtn   String  @db.Char(15)
  debitprinc Int     @db.SmallInt
  name       String? @db.Char(30)
  id         String? @db.Char(20)
  giro       String? @db.Char(20)
  bic        String? @db.Char(11)
  iban       String? @db.Char(42)
  timestamp  String  @db.Char(10)
  krfkh      krfkh[]

  @@index([keycmrtn], map: "fkcmdbmcmrtn")
}

model cmdbs {
  keycmdbs  String @id(map: "pkcmdbs") @db.Char(15)
  srvname   String @db.VarChar(100)
  dbsname   String @db.VarChar(150)
  timestamp String @db.Char(10)
}

model cmdby {
  keycmdby  String @id(map: "pkcmdby") @db.Char(15)
  keycmdbg  String @db.Char(15)
  year      Int    @db.SmallInt
  keyrekpy  String @db.Char(15)
  timestamp String @db.Char(10)
  cmdbg     cmdbg  @relation(fields: [keycmdbg], references: [keycmdbg], onDelete: Cascade, onUpdate: NoAction, map: "fkcmdbykeycmdbg ")
  rekpy     rekpy  @relation(fields: [keyrekpy], references: [keyrekpy], onUpdate: NoAction, map: "fkcmdbykeyrekpy ")

  @@unique([keycmdbg, year], map: "akcmdby1")
  @@index([keyrekpy], map: "fkcmdbyrekpy")
}

model cmdsi {
  keycmdsi    String  @id(map: "pkcmdsi") @db.Char(15)
  keycmdsi2   String? @db.Char(15)
  keycmmds    String  @db.Char(15)
  istemplate  Int     @db.TinyInt
  sortorder   Int     @db.SmallInt
  entnodeid   String? @db.VarChar(255)
  condition   String? @db.VarChar(Max)
  caption     String? @db.VarChar(Max)
  fldlen      Int     @default(0, map: "DF__cmdsi__fldlen__03AF6839")
  fldalign    Int     @default(0, map: "DF__cmdsi__fldalign__04A38C72") @db.TinyInt
  paddingchr  String? @db.Char(1)
  formatstr   String? @db.VarChar(30)
  comment     String? @db.VarChar(Max)
  timestamp   String  @db.Char(10)
  cmdsi       cmdsi?  @relation("cmdsiTocmdsi", fields: [keycmdsi2], references: [keycmdsi], onDelete: NoAction, onUpdate: NoAction, map: "fkcmdsikeycmdsi2")
  other_cmdsi cmdsi[] @relation("cmdsiTocmdsi")
  cmmds       cmmds   @relation(fields: [keycmmds], references: [keycmmds], onUpdate: NoAction, map: "fkcmdsikeycmmds")
  cmmap       cmmap[]

  @@index([keycmmds], map: "fkcmdsicmmds")
  @@index([keycmdsi2], map: "fkcmdsikeycmdsi2")
}

model cmdte {
  keycmdte   String  @id(map: "PK__cmdte__5F1FD1A7") @db.Char(15)
  keycmctk   String? @db.Char(15)
  code       String  @db.Char(50)
  caption    String  @db.Char(30)
  dtedefault Int     @default(0, map: "DF__cmdte__dtedefaul__6013F5E0") @db.TinyInt
  timestamp  String  @db.Char(10)

  @@unique([keycmctk, caption], map: "akcmdte1")
  @@unique([keycmctk, code], map: "akcmdte2")
  @@index([keycmctk], map: "fkcmdtecmctk")
}

model cmean {
  keycmean  String  @id(map: "pkcmean") @db.Char(15)
  code      String  @db.Char(15)
  caption   String  @db.VarChar(60)
  bankid    String? @db.Char(15)
  bankcode  String? @db.Char(15)
  active    Int     @default(0, map: "DF__cmean__active__3A5F0A43") @db.TinyInt
  import    Int     @default(0, map: "DF__cmean__import__3B532E7C") @db.TinyInt
  bic       String? @db.Char(11)
  orgnr     String? @db.Char(15)
  timestamp String  @db.Char(10)
}

model cmeid {
  keycmeid   String  @id(map: "pkcmeid") @db.Char(15)
  keysymdl   String  @db.Char(15)
  keycmmap   String? @db.Char(15)
  export     Int     @db.TinyInt
  system     String? @db.VarChar(30)
  type       Int     @db.SmallInt
  path       String? @db.VarChar(200)
  supplier   String? @db.VarChar(30)
  filename   String? @db.VarChar(256)
  remzerobeg Int     @db.TinyInt
  remzeroend Int     @db.TinyInt
  eidused    Int     @db.TinyInt
  timestamp  String  @db.Char(10)
  cmmap      cmmap?  @relation(fields: [keycmmap], references: [keycmmap], onDelete: NoAction, onUpdate: NoAction, map: "fkcmeidkeycmmap")
  krfkh      krfkh[]

  @@index([keycmmap], map: "fkcmeidcmmap")
  @@index([keysymdl], map: "fkcmeidsymdl")
}

model cmeik {
  keycmeik  String  @id(map: "PK__cmeik__367CE370") @db.Char(15)
  keycmeid  String? @db.Char(15)
  keyrevrt  String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keycmeid], map: "fkcmeikcmeid")
  @@index([keyrevrt], map: "fkcmeikrevrt")
}

model cmela {
  keycmela  String  @id(map: "pkcmela") @db.Char(15)
  keycmelq  String  @db.Char(15)
  caption   String  @db.VarChar(250)
  notice    String  @db.VarChar(500)
  inputtype Int     @default(0, map: "DF__cmela__inputtype__0EA5A340") @db.TinyInt
  sortorder Int     @default(0, map: "DF__cmela__sortorder__0F99C779") @db.SmallInt
  iscorrect Int     @default(0, map: "DF__cmela__iscorrect__108DEBB2") @db.TinyInt
  timestamp String  @db.Char(10)
  cmelq     cmelq   @relation(fields: [keycmelq], references: [keycmelq], onUpdate: NoAction, map: "fkcmelakeycmelq ")
  cmely     cmely[]

  @@index([keycmelq], map: "fkcmelacmelq")
}

model cmeld {
  keycmeld   String  @id(map: "pkcmeld") @db.Char(15)
  keysyusr   String  @db.Char(15)
  caption    String  @db.VarChar(60)
  prccorrect Int     @default(100, map: "DF__cmeld__prccorrec__1626C977") @db.TinyInt
  rdmprcnt   Int     @default(100, map: "DF__cmeld__rdmprcnt__171AEDB0") @db.TinyInt
  survey     Int     @default(0, map: "DF__cmeld__survey__180F11E9") @db.TinyInt
  published  Int     @default(0, map: "DF__cmeld__published__19033622") @db.TinyInt
  useelearn  Int     @default(1, map: "DF__cmeld__useelearn__19F75A5B") @db.TinyInt
  timestamp  String  @db.Char(10)
  cmelp      cmelp[]
  cmelr      cmelr[]
  eldob      eldob[]

  @@index([keysyusr], map: "fkcmeldsyusr")
}

model cmelp {
  keycmelp  String  @id(map: "pkcmelp") @db.Char(15)
  keycmeld  String  @db.Char(15)
  caption   String  @db.VarChar(60)
  areadescr String  @db.VarChar(4000)
  sortorder Int     @default(0, map: "DF__cmelp__sortorder__5B5B0964") @db.SmallInt
  timestamp String  @db.Char(10)
  cmeld     cmeld   @relation(fields: [keycmeld], references: [keycmeld], onUpdate: NoAction, map: "fkcmelpkeycmeld ")
  cmelq     cmelq[]

  @@index([keycmeld], map: "fkcmelpcmeld")
}

model cmelq {
  keycmelq   String  @id(map: "pkcmelq") @db.Char(15)
  keycmelp   String  @db.Char(15)
  quetext    String  @db.VarChar(4000)
  sortorder  Int     @default(0, map: "DF__cmelq__sortorder__5F2B9A48") @db.SmallInt
  elqtype    Int     @default(0, map: "DF__cmelq__elqtype__601FBE81") @db.TinyInt
  multique   Int     @default(0, map: "DF__cmelq__multique__6113E2BA") @db.TinyInt
  uploaded   Int     @default(0, map: "DF__cmelq__uploaded__620806F3") @db.TinyInt
  horizontal Int     @default(0, map: "DF__cmelq__horizonta__62FC2B2C") @db.TinyInt
  isdemanded Int     @default(0, map: "DF__cmelq__isdemande__63F04F65") @db.TinyInt
  timestamp  String  @db.Char(10)
  cmela      cmela[]
  cmelp      cmelp   @relation(fields: [keycmelp], references: [keycmelp], onDelete: Cascade, onUpdate: NoAction, map: "fkcmelqkeycmelp ")
  cmely      cmely[]

  @@index([keycmelp], map: "fkcmelqcmelp")
}

model cmelr {
  keycmelr  String   @id(map: "pkcmelr") @db.Char(15)
  keycmeld  String   @db.Char(15)
  keycmctc  String?  @db.Char(15)
  keysyusr  String   @db.Char(15)
  runtime   DateTime @db.DateTime
  queresult Decimal  @default(0, map: "DF__cmelr__queresult__67C0E049") @db.Decimal(10, 2)
  contadm   Int      @default(0, map: "DF__cmelr__contadm__68B50482") @db.TinyInt
  fullname  String?  @db.VarChar(100)
  street    String?  @db.VarChar(100)
  zipcode   String?  @db.VarChar(20)
  city      String?  @db.VarChar(100)
  area      String?  @db.VarChar(100)
  email     String?  @db.VarChar(100)
  phone     String?  @db.VarChar(30)
  ftext     String?  @db.VarChar(Max)
  timestamp String   @db.Char(10)
  cmctc     cmctc?   @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkcmelrkeycmctc")
  cmeld     cmeld    @relation(fields: [keycmeld], references: [keycmeld], onDelete: Cascade, onUpdate: NoAction, map: "fkcmelrkeycmeld ")
  cmely     cmely[]

  @@index([keycmctc], map: "fkcmelrcmctc")
  @@index([keycmeld], map: "fkcmelrcmeld")
  @@index([keysyusr], map: "fkcmelrsyusr")
}

model cmely {
  keycmely  String  @id(map: "pkcmely") @db.Char(15)
  keycmelr  String  @db.Char(15)
  keycmelq  String? @db.Char(15)
  keycmela  String? @db.Char(15)
  ftext     String  @db.VarChar(Max)
  timestamp String  @db.Char(10)
  cmela     cmela?  @relation(fields: [keycmela], references: [keycmela], onDelete: Cascade, onUpdate: NoAction, map: "fkcmelykeycmela ")
  cmelq     cmelq?  @relation(fields: [keycmelq], references: [keycmelq], onDelete: Cascade, onUpdate: NoAction, map: "fkcmelykeycmelq ")
  cmelr     cmelr   @relation(fields: [keycmelr], references: [keycmelr], onDelete: Cascade, onUpdate: NoAction, map: "fkcmelykeycmelr ")

  @@index([keycmela], map: "fkcmelycmela")
  @@index([keycmelq], map: "fkcmelycmelq")
  @@index([keycmelr], map: "fkcmelycmelr")
}

model cmeml {
  keycmeml  String    @id(map: "pkcmeml") @db.Char(15)
  keycmemt  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  cmemlben  String    @db.VarChar(80)
  main      Int       @default(0, map: "DF__cmeml__main__3AEC5CD9") @db.TinyInt
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keycmemt], map: "fkcmemlcmemt")
  @@index([keycmobj], map: "fkcmemlcmobj")
}

model cmemt {
  keycmemt  String @id(map: "pkcmemt") @db.Char(15)
  caption   String @unique(map: "akcmemt") @db.VarChar(30)
  email     Int    @default(0, map: "DF__cmemt__email__4017E399") @db.TinyInt
  active    Int    @default(1, map: "DF__cmemt__active__410C07D2") @db.TinyInt
  repabkod  Int    @default(0, map: "DF__cmemt__repabkod__42002C0B") @db.TinyInt
  timestamp String @db.Char(10)
}

model cmfac {
  keycmfac  String @id(map: "pkcmfac") @db.Char(15)
  keycmctc  String @db.Char(15)
  caption   String @db.VarChar(200)
  timestamp String @db.Char(10)

  @@unique([keycmctc, caption], map: "akcmfac1")
  @@index([keycmctc], map: "fkcmfaccmctc")
}

model cmfri {
  keycmfri  String   @id(map: "pkcmfri") @db.Char(15)
  keysycmp  String   @db.Char(15)
  friname   String   @db.VarChar(30)
  friimage  String   @db.Text
  fridate   DateTime @db.DateTime
  frilen    Int
  timestamp String   @db.Char(10)

  @@index([keysycmp], map: "fkcmfrisycmp")
}

model cmfrm {
  keycmfrm  String @id(map: "pkcmfrm") @db.Char(15)
  keysyusr  String @db.Char(15)
  dotnet    Int    @default(0, map: "DF__cmfrm__dotnet__264DEFF5") @db.TinyInt
  caption   String @db.VarChar(30)
  formula   String @db.VarChar(Max)
  timestamp String @db.Char(10)

  @@index([keysyusr], map: "fkcmfrmsyusr")
}

model cmfrx {
  keycmfrx  String  @id(map: "pkcmfrx") @db.Char(15)
  keysytxc  String? @db.Char(15)
  frxname   String  @db.VarChar(30)
  caption   String  @db.VarChar(50)
  frxpth    String  @db.VarChar(30)
  frxlen    Int
  frxlayout String  @db.Text
  editable  Int     @default(0, map: "DF__cmfrx__editable__49D3A7B9") @db.TinyInt
  userdef   Int     @default(0, map: "DF__cmfrx__userdef__4AC7CBF2") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keysytxc], map: "fkcmfrxsytxc")
}

model cmftv {
  keycmftv  String @id(map: "pkcmftv") @db.Char(15)
  keydbtbl  String @db.Char(15)
  keydbfld  String @db.Char(15)
  keycode   String @db.Char(15)
  lcid      Int    @default(0, map: "DF__cmftv__lcid__2DA69C9F")
  langval   String @db.VarChar(2000)
  timestamp String @db.Char(10)

  @@index([keycode], map: "fkcmftvcode")
  @@index([keydbfld], map: "fkcmftvdbfld")
  @@index([keydbtbl], map: "fkcmftvdbtbl")
}

model cmgdr {
  keycmgdr   String @id(map: "pkcmgdr") @db.Char(15)
  keycmprc   String @unique(map: "akcmgdr") @db.Char(15)
  keycmuni   String @db.Char(15)
  gdprgroupd Int    @default(0, map: "DF__cmgdr__gdprgroup__52B68218") @db.TinyInt
  gdprtype   Int    @default(0, map: "DF__cmgdr__gdprtype__53AAA651") @db.TinyInt
  gdprqty    Int    @default(0, map: "DF__cmgdr__gdprqty__549ECA8A") @db.SmallInt
  gdprorder  Int    @default(0, map: "DF__cmgdr__gdprorder__5592EEC3") @db.TinyInt
  timestamp  String @db.Char(10)
  cmprc      cmprc  @relation(fields: [keycmprc], references: [keycmprc], onUpdate: NoAction, map: "fkcmgdrkeycmprc")
  cmuni      cmuni  @relation(fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkcmgdrkeycmuni ")
}

model cmibx {
  keycmibx  String   @id(map: "pkcmibx") @db.Char(15)
  keycmcmp  String   @db.Char(15)
  keysyusr  String   @db.Char(15)
  keysymob  String   @db.Char(15)
  keycode   String   @db.Char(15)
  ibxtype   Int
  ibxstatus Int      @db.TinyInt
  rdate     DateTime @db.DateTime
  answer    String   @db.Char(1)
  timestamp String   @db.Char(10)
  cmcmp     cmcmp    @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: Cascade, onUpdate: NoAction, map: "fkcmibxkeycmcmp")

  @@index([keycmcmp], map: "fkcmibxcmcmp")
  @@index([keycode], map: "fkcmibxcode")
  @@index([keysymob], map: "fkcmibxsymob")
  @@index([keysyusr], map: "fkcmibxsyusr")
}

model cmied {
  keycmied  String  @id(map: "PK__cmied__51BA1E3A") @db.Char(15)
  keysymdl  String  @db.Char(15)
  keysycls  String  @db.Char(15)
  keysytxc  String? @db.Char(15)
  keysytxc2 String? @db.Char(15)
  caption   String  @db.Char(50)
  import    Int     @db.TinyInt
  export    Int     @db.TinyInt
  active    Int     @db.TinyInt
  imppath   String? @db.Char(150)
  impfile   String? @db.Char(30)
  exppath   String? @db.Char(150)
  expfile   String? @db.Char(30)
  timestamp String  @db.Char(10)

  @@index([keysycls], map: "fkcmiedsycls")
  @@index([keysymdl], map: "fkcmiedsymdl")
  @@index([keysytxc], map: "fkcmiedsytxc")
  @@index([keysytxc2], map: "fkcmiedsytxc2")
}

model cmieh {
  keycmieh  String  @id(map: "PK__cmieh__52AE4273") @db.Char(15)
  keysyusr  String? @db.Char(15)
  caption   String  @db.Char(50)
  impexp    Int     @db.TinyInt
  accr      Int     @db.TinyInt
  accw      Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keysyusr], map: "fkcmiehsyusr")
}

model cmier {
  keycmier  String @id(map: "PK__cmier__53A266AC") @db.Char(15)
  keycmieh  String @db.Char(15)
  keycmied  String @db.Char(15)
  settings  String @db.Text
  timestamp String @db.Char(10)

  @@index([keycmied], map: "fkcmiercmied")
  @@index([keycmieh], map: "fkcmiercmieh")
}

model cmimm {
  keycmimm   String  @id(map: "pkcmimm") @db.Char(15)
  keycmimp   String  @db.Char(15)
  prgprop    String  @db.VarChar(100)
  fileprop   String  @db.VarChar(100)
  fixedvalue String? @db.VarChar(60)
  immaction  Int     @default(0, map: "DF__cmimm__immaction__4F82C22E") @db.TinyInt
  isunique   Int     @default(0, map: "DF__cmimm__isunique__5076E667") @db.TinyInt
  rowform    String? @db.VarChar(2000)
  timestamp  String  @db.Char(10)
  cmimp      cmimp   @relation(fields: [keycmimp], references: [keycmimp], onDelete: Cascade, onUpdate: NoAction, map: "fkcmimmkeycmimp")

  @@index([keycmimp], map: "fkcmimmcmimp")
}

model cmimp {
  keycmimp  String  @id(map: "pkcmimp") @db.Char(15)
  keysymdl  String? @db.Char(15)
  keysyomo  String? @db.Char(15)
  code      String  @db.VarChar(15)
  caption   String? @db.VarChar(90)
  descrip   String? @db.VarChar(600)
  impkind   Int     @default(0, map: "DF__cmimp__impkind__60C22A95") @db.TinyInt
  impfunc   Int     @default(0, map: "DF__cmimp__impfunc__61B64ECE") @db.TinyInt
  filepath  String? @db.VarChar(600)
  filepage  String? @db.VarChar(60)
  splitchar String? @db.VarChar(30)
  textenc   Int     @default(0, map: "DF__cmimp__textenc__62AA7307") @db.TinyInt
  pretag    String? @db.VarChar(60)
  useheader Int     @default(1, map: "DF__cmimp__useheader__639E9740") @db.TinyInt
  impused   Int     @default(1, map: "DF__cmimp__impused__6492BB79") @db.TinyInt
  timestamp String  @db.Char(10)
  cmimm     cmimm[]
}

model cminc {
  keycminc  String  @id(map: "pkcminc") @db.Char(15)
  keysymdl  String  @db.Char(15)
  caption   String  @db.VarChar(60)
  condform  String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  cmiva     cmiva[]

  @@index([keysymdl], map: "fkcmincsymdl")
}

model cmind {
  keycmind  String  @id(map: "PK__cmind__558AAF1E") @db.Char(15)
  cmindkod  String  @db.Char(30)
  cmindben  String  @db.Char(30)
  timestamp String  @db.Char(10)
  ambas     ambas[]
  avark     avark[]
  buinv     buinv[]
  hyinf     hyinf[]
  hying     hying[]
  hyrad     hyrad[]
}

model cminr {
  keycminr                     String @id(map: "pkcminr") @db.Char(15)
  keycmctc                     String @db.Char(15)
  keycmctc2                    String @db.Char(15)
  timestamp                    String @db.Char(10)
  cmctc_cminr_keycmctcTocmctc  cmctc  @relation("cminr_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkcminrkeycmctc")
  cmctc_cminr_keycmctc2Tocmctc cmctc  @relation("cminr_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onUpdate: NoAction, map: "fkcminrkeycmctc2")

  @@unique([keycmctc, keycmctc2], map: "akcminr1")
  @@index([keycmctc], map: "fkcminrcmctc")
  @@index([keycmctc2], map: "fkcminrcmctc2")
}

model cmint {
  keycmint  String @id(map: "pkcmint") @db.Char(15)
  keycmcmp  String @db.Char(15)
  keycmart  String @db.Char(15)
  caption   String @db.VarChar(70)
  price     Float  @default(0, map: "DF__cmint__price__1AD45D09") @db.Money
  timestamp String @db.Char(10)

  @@index([keycmart], map: "fkcmintcmart")
  @@index([keycmcmp], map: "fkcmintcmcmp")
}

model cminv {
  keycminv                     String  @id(map: "PK__cminv__269B8162") @db.Char(15)
  keycmind                     String  @db.Char(15)
  indexar                      Int     @db.SmallInt
  indexmanad                   Int     @db.TinyInt
  indexvarde                   Decimal @db.Decimal(12, 4)
  indexprel                    Int     @default(0, map: "DF__cminv__indexprel__278FA59B") @db.TinyInt
  timestamp                    String  @db.Char(10)
  ambas_ambas_keycminvTocminv  ambas[] @relation("ambas_keycminvTocminv")
  ambas_ambas_keycminv2Tocminv ambas[] @relation("ambas_keycminv2Tocminv")
  hyanr_hyanr_keycminvTocminv  hyanr[] @relation("hyanr_keycminvTocminv")
  hyanr_hyanr_keycminv2Tocminv hyanr[] @relation("hyanr_keycminv2Tocminv")
  hyanr_hyanr_keycminv3Tocminv hyanr[] @relation("hyanr_keycminv3Tocminv")
  hyinf                        hyinf[]
  hying_hying_keycminvTocminv  hying[] @relation("hying_keycminvTocminv")
  hying_hying_keycminv2Tocminv hying[] @relation("hying_keycminv2Tocminv")
  hying_hying_keycminv3Tocminv hying[] @relation("hying_keycminv3Tocminv")
  hyinr_hyinr_keycminvTocminv  hyinr[] @relation("hyinr_keycminvTocminv")
  hyinr_hyinr_keycminv2Tocminv hyinr[] @relation("hyinr_keycminv2Tocminv")
  hyrad_hyrad_keycminvTocminv  hyrad[] @relation("hyrad_keycminvTocminv")
  hyrad_hyrad_keycminv2Tocminv hyrad[] @relation("hyrad_keycminv2Tocminv")
  hyrad_hyrad_keycminv3Tocminv hyrad[] @relation("hyrad_keycminv3Tocminv")

  @@index([keycmind], map: "fkcminvcmind")
}

model cminy {
  keycminy   String  @id(map: "PK__cminy__2977EE0D") @db.Char(15)
  keycmind   String  @db.Char(15)
  indexar    Int     @db.SmallInt
  indexvarde Decimal @db.Decimal(12, 4)
  indexprel  Int     @default(0, map: "DF__cminy__indexprel__2A6C1246") @db.TinyInt
  timestamp  String  @db.Char(10)

  @@index([keycmind], map: "fkcminycmind")
}

model cmipd {
  keycmipd   String   @id(map: "PK__cmipd__232A17DA") @db.Char(15)
  illpaydate DateTime @db.DateTime
  illpayday  Int      @db.TinyInt
  illworkday Int      @db.TinyInt
  timestamp  String   @db.Char(10)
}

model cmiva {
  keycmiva  String @id(map: "pkcmiva") @db.Char(15)
  keycminc  String @db.Char(15)
  condition String @db.VarChar(60)
  value     Int    @default(0, map: "DF__cmiva__value__705106A0")
  timestamp String @db.Char(10)
  cminc     cminc  @relation(fields: [keycminc], references: [keycminc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmivakeycminc ")

  @@index([keycminc], map: "fkcmivacminc")
}

model cmkbe {
  keycmkbe   String   @id(map: "pkcmkbe") @db.Char(15)
  keycmkbt   String   @db.Char(15)
  keysyusr   String?  @db.Char(15)
  keysyusr2  String?  @db.Char(15)
  keysymdl   String?  @db.Char(15)
  question   String   @db.VarChar(1000)
  answer     String   @db.VarChar(8000)
  createdate DateTime @db.DateTime
  changedate DateTime @db.DateTime
  minversion String?  @db.Char(10)
  maxversion String?  @db.Char(10)
  publish    Int      @db.TinyInt
  timestamp  String   @db.Char(10)

  @@index([keycmkbt], map: "fkcmkbecmkbt")
  @@index([keysymdl], map: "fkcmkbesymdl")
  @@index([keysyusr], map: "fkcmkbesyusr")
  @@index([keysyusr2], map: "fkcmkbesyusr2")
}

model cmkbt {
  keycmkbt  String @id(map: "pkcmkbt") @db.Char(15)
  caption   String @db.Char(30)
  timestamp String @db.Char(10)
}

model cmlmh {
  keycmlmh  String @id(map: "pkcmlmh") @db.Char(15)
  keycmctc  String @unique(map: "akcmlmh1") @db.Char(15)
  uniqueid  String @db.UniqueIdentifier
  timestamp String @db.Char(10)
}

model cmlms {
  keycmlms  String    @id(map: "pkcmlms") @db.Char(15)
  keysylms  String    @db.Char(15)
  keysylmr  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  lmscnt    Int       @default(0, map: "DF__cmlms__lmscnt__7CEEF467")
  tdate     DateTime? @db.DateTime
  lmscnttmp Int       @default(0, map: "DF__cmlms__lmscnttmp__7DE318A0")
  tdatetmp  DateTime? @db.DateTime
  nocharge  Int       @default(0, map: "DF__cmlms__nocharge__7ED73CD9") @db.TinyInt
  timestamp String    @db.Char(10)

  @@index([keycmctc], map: "fkcmlmscmctc")
  @@index([keysylmr], map: "fkcmlmssylmr")
}

model cmlog {
  keycmlog  String   @id(map: "pkcmlog") @db.Char(15)
  keydbtbl  String?  @db.Char(15)
  keycode   String?  @db.Char(15)
  logtype   Int      @db.TinyInt
  logdate   DateTime @db.DateTime
  logtime   DateTime @db.DateTime
  logsource String?  @db.VarChar(30)
  logcat    String?  @db.VarChar(60)
  logevent  Int?
  loguser   String?  @db.VarChar(80)
  lognode   String?  @db.VarChar(30)
  logmemo   String?  @db.VarChar(Max)
  timestamp String   @db.Char(10)
  crnoc     crnoc[]

  @@index([keycode, keydbtbl], map: "_cmlog_keycode_keydbtbl")
  @@index([keycode], map: "fkcmlogcode")
  @@index([keydbtbl], map: "fkcmlogdbtbl")
  @@index([logdate], map: "incmlog_2DJ0GK8ZR")
}

model cmlot {
  keycmlot  String @id(map: "pkcmlot") @db.Char(15)
  keydbtbl  String @db.Char(15)
  caption   String @db.VarChar(30)
  timestamp String @db.Char(10)

  @@unique([keydbtbl, caption], map: "akcmlot")
}

model cmlpi {
  keycmlpi  String   @id(map: "pkcmlpi") @db.Char(15)
  keysyusr  String?  @db.Char(15)
  keycmctc  String?  @db.Char(15)
  accdate   DateTime @db.DateTime
  lpistatus Int      @default(0, map: "DF__cmlpi__lpistatus__7E52BFB0") @db.TinyInt
  timestamp String   @db.Char(10)
  cmctc     cmctc?   @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmlpikeycmctc")

  @@index([keycmctc], map: "fkcmlpicmctc")
  @@index([keysyusr], map: "fkcmlpisyusr")
}

model cmmap {
  keycmmap   String  @id(map: "pkcmmap") @db.Char(15)
  caption    String  @db.VarChar(100)
  keycmdsi   String  @db.Char(15)
  keybsend   String  @db.Char(15)
  keysymdl   String  @db.Char(15)
  nodekind   Int     @db.TinyInt
  jsonconfig String? @db.VarChar(Max)
  timestamp  String  @db.Char(10)
  bkkty      bkkty[]
  bkpuo      bkpuo[]
  cmeid      cmeid[]
  bsend      bsend   @relation(fields: [keybsend], references: [keybsend], onUpdate: NoAction, map: "fkcmmapkeybsend")
  cmdsi      cmdsi   @relation(fields: [keycmdsi], references: [keycmdsi], onUpdate: NoAction, map: "fkcmmapkeycmdsi")
  cmmoe      cmmoe[]
  faprn      faprn[]

  @@index([keybsend], map: "fkcmmapbsend")
  @@index([keycmdsi], map: "fkcmmapcmdsi")
}

model cmmds {
  keycmmds  String  @id(map: "pkcmmds") @db.Char(15)
  caption   String  @db.VarChar(Max)
  timestamp String  @db.Char(10)
  cmdsi     cmdsi[]
  cmmme     cmmme[]
}

model cmmem {
  keycmmem  String  @id(map: "pkcmmem") @db.Char(15)
  keycode   String  @db.Char(15)
  id        Int
  kind      Int     @default(0, map: "DF__cmmem__kind__6CC7DE3B") @db.TinyInt
  name      String? @db.Char(30)
  text      String  @db.Text
  priority  Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycode, keycmmem], map: "incmmem_2AZ0X2L08")
}

model cmmme {
  keycmmme  String  @id(map: "pkcmmme") @db.Char(15)
  keycmmds  String  @db.Char(15)
  caption   String  @db.VarChar(Max)
  timestamp String  @db.Char(10)
  cmmds     cmmds   @relation(fields: [keycmmds], references: [keycmmds], onDelete: Cascade, onUpdate: NoAction, map: "fkcmmmekeycmmds ")
  cmmve     cmmve[]

  @@index([keycmmds], map: "fkcmmmecmmds")
}

model cmmoe {
  keycmmoe  String  @id(map: "pkcmmoe") @db.Char(15)
  keycmmap  String  @db.Char(15)
  caption   String  @db.VarChar(100)
  value     String? @db.VarChar(Max)
  timestamp String  @db.Char(10)
  cmmap     cmmap   @relation(fields: [keycmmap], references: [keycmmap], onDelete: Cascade, onUpdate: NoAction, map: "fkcmmoekeycmmap")

  @@index([keycmmap], map: "fkcmmoecmmap")
}

model cmmve {
  keycmmve  String  @id(map: "pkcmmve") @db.Char(15)
  keycmmme  String  @db.Char(15)
  condition String? @db.VarChar(Max)
  sortorder Int     @db.SmallInt
  value     String? @db.VarChar(Max)
  timestamp String  @db.Char(10)
  cmmme     cmmme   @relation(fields: [keycmmme], references: [keycmmme], onDelete: Cascade, onUpdate: NoAction, map: "fkcmmvekeycmmme ")

  @@index([keycmmme], map: "fkcmmvecmmme")
}

model cmngr {
  keycmngr  String  @id(map: "PK__cmngr__5B438874") @db.Char(15)
  snicode   String  @db.Char(10)
  name      String  @db.Char(50)
  timestamp String  @db.Char(10)
  hytoo     hytoo[]
}

model cmobj {
  keycmobj                     String    @id(map: "pkcmobj") @db.Char(15)
  keycmobt                     String    @db.Char(15)
  bcode                        String?   @db.VarChar(500)
  bcodetype                    Int       @default(0, map: "DF__cmobj__bcodetype__6C76541B") @db.TinyInt
  objcond                      Int       @default(0, map: "DF__cmobj__objcond__6D6A7854") @db.TinyInt
  objcondate                   DateTime? @db.DateTime
  sharekind                    Int       @default(0, map: "DF__cmobj__sharekind__6E5E9C8D") @db.TinyInt
  energycls                    Int       @default(0, map: "DF__cmobj__energycls__6F52C0C6") @db.TinyInt
  nrginfreg                    DateTime? @db.Date
  nrginfrec                    DateTime? @db.Date
  nrgindex                     Decimal?  @db.Decimal(10, 2)
  heatingcls                   Int       @default(0, map: "DF__cmobj__heatingcl__7046E4FF") @db.TinyInt
  deletemark                   Int       @default(0, map: "DF__cmobj__deletemar__713B0938") @db.TinyInt
  timestamp                    String    @db.Char(10)
  aiinv                        aiinv?
  ambas                        ambas[]
  ambko                        ambko?
  amlcc                        amlcc[]
  amlcp                        amlcp?
  amlvh                        amlvh[]
  amlvr                        amlvr[]
  amvar                        amvar[]
  amvvn                        amvvn[]
  aoupp                        aoupp[]
  baaob                        baaob?
  baass                        baass[]
  babag                        babag?
  babdl                        babdl?
  babps                        babps?
  babuf                        babuf?
  babyg                        babyg?
  babyv                        babyv[]
  bacla                        bacla[]
  baclh                        baclh[]
  badlr_badlr_keycmobjTocmobj  badlr[]   @relation("badlr_keycmobjTocmobj")
  badlr_badlr_keycmobj2Tocmobj badlr[]   @relation("badlr_keycmobj2Tocmobj")
  bafen                        bafen?
  bafsa                        bafsa[]
  bafst                        bafst?
  bahyr                        bahyr?
  bakmp                        bakmp?
  balgh                        balgh?
  balok                        balok?
  bamms                        bamms[]
  barek                        barek[]
  barpl_barpl_keycmobjTocmobj  barpl[]   @relation("barpl_keycmobjTocmobj")
  barpl_barpl_keycmobj2Tocmobj barpl[]   @relation("barpl_keycmobj2Tocmobj")
  barum                        barum?
  basys                        basys?
  batxv                        batxv[]
  bauhe                        bauhe?
  bavan                        bavan?
  baxyk_baxyk_keycmobjTocmobj  baxyk[]   @relation("baxyk_keycmobjTocmobj")
  baxyk_baxyk_keycmobj2Tocmobj baxyk[]   @relation("baxyk_keycmobj2Tocmobj")
  bayta                        bayta?
  bazao                        bazao[]
  bazav                        bazav[]
  bkalt                        bkalt[]
  bkans                        bkans[]
  brcdt                        brcdt[]
  buobj                        buobj[]
  cmcmi                        cmcmi[]
  cmcmp                        cmcmp?
  cmctp                        cmctp[]
  cmctr                        cmctr[]
  cmobt                        cmobt     @relation(fields: [keycmobt], references: [keycmobt], onUpdate: NoAction, map: "fkcmobjkeycmobt ")
  crnoo                        crnoo[]
  dreco                        dreco[]
  drmpt                        drmpt[]
  eldob                        eldob[]
  fbbes                        fbbes[]
  fbgod                        fbgod[]
  hffnd                        hffnd[]
  hgerb                        hgerb[]
  hyaev                        hyaev[]
  hyamv                        hyamv[]
  hydio                        hydio[]
  hyinf                        hyinf?
  hyinv                        hyinv[]
  hymrp                        hymrp[]
  hyprt_hyprt_keycmobjTocmobj  hyprt?    @relation("hyprt_keycmobjTocmobj")
  hyprt_hyprt_keycmobj2Tocmobj hyprt[]   @relation("hyprt_keycmobj2Tocmobj")
  hyrad_hyrad_keycmobjTocmobj  hyrad[]   @relation("hyrad_keycmobjTocmobj")
  hyrad_hyrad_keycmobj2Tocmobj hyrad[]   @relation("hyrad_keycmobj2Tocmobj")
  hyroc                        hyroc[]
  hyspt                        hyspt[]
  hyvcc                        hyvcc[]
  ikber                        ikber[]
  ikbok                        ikbok[]
  ikmao                        ikmao[]
  iminv                        iminv[]
  lbbes                        lbbes[]
  lnbac                        lnbac[]
  mminh                        mminh[]
  mmolg                        mmolg[]
  nycyl                        nycyl[]
  nysys                        nysys[]
  nytyl                        nytyl[]
  pdddc                        pdddc[]
  pddpd                        pddpd[]
  pddrl                        pddrl[]
  praoc                        praoc[]
  prppo                        prppo[]
  prppr                        prppr[]
  pusta                        pusta[]
  puund                        puund[]
  puuns                        puuns[]
  rekpl                        rekpl[]
  skatc                        skatc[]
  skbor                        skbor[]
  skkal                        skkal[]
  skund                        skund[]
  skunk                        skunk[]
  stctr                        stctr[]
  stobj                        stobj[]
  stund                        stund[]
  stupd                        stupd[]
  trval                        trval[]
  tvobj                        tvobj[]
  tvprl                        tvprl[]
  tvpro                        tvpro[]
  tvscr                        tvscr[]
  tvsta                        tvsta[]
  tvvoo                        tvvoo[]
  vcprc                        vcprc[]
  vcprj                        vcprj[]
  vcrpl                        vcrpl[]
  vcvdg                        vcvdg[]
  vlutf                        vlutf[]

  @@index([keycmobt], map: "fkcmobjcmobt")
}

model cmobt {
  keycmobt  String  @id(map: "PK__cmobt__5D2BD0E6") @db.Char(15)
  timestamp String  @db.Char(10)
  aoplo     aoplo[]
  buobj     buobj[]
  cmobj     cmobj[]
  pubgh     pubgh[]
  pubtc     pubtc[]
}

model cmocr {
  keycmocr  String    @id(map: "pkcmocr") @db.Char(15)
  keycmobj  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  share     Decimal?  @default(0, map: "DF__cmocr__share__684C5D70") @db.Decimal(9, 4)
  fdate     DateTime? @db.Date
  tdate     DateTime? @db.Date
  timestamp String    @db.Char(10)
}

model cmotr {
  keycmotr  String @id(map: "PK__cmotr__18F76D81") @db.Char(15)
  keycmobt  String @db.Char(15)
  keycmobt2 String @db.Char(15)
  sortorder Int    @default(0, map: "DF__cmotr__sortorder__19EB91BA") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keycmobt], map: "fkcmotrcmobt")
  @@index([keycmobt2], map: "fkcmotrcmobt2")
}

model cmpar {
  keycmpar  String @id(map: "PK__cmpar__38652BE2") @db.Char(15)
  keycode   String @db.Char(15)
  keysycls  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycode], map: "fkcmparcode")
  @@index([keysycls], map: "fkcmparsycls")
}

model cmpbb {
  keycmpbb  String @id(map: "pkcmpbb") @db.Char(15)
  year      Int    @unique(map: "akcmpbb1") @db.SmallInt
  amount    Float  @db.Money
  timestamp String @db.Char(10)
}

model cmpbt {
  keycmpbt  String   @id(map: "pkcmpbt") @db.Char(15)
  starttime DateTime @db.Time
  endtime   DateTime @db.Time
  allsplit  Int      @default(0, map: "DF__cmpbt__allsplit__2494E45F") @db.TinyInt
  timestamp String   @db.Char(10)
  aoupp     aoupp[]
  lbbes     lbbes[]

  @@unique([starttime, endtime], map: "akcmpbt")
}

model cmpcn {
  keycmpcn  String @id(map: "PK__cmpcn__60083D91") @db.Char(15)
  timestamp String @db.Char(10)
}

model cmprc {
  keycmprc  String  @id(map: "pkcmprc") @db.Char(15)
  keysymdl  String  @db.Char(15)
  keysycls  String? @db.Char(15)
  keysytxc  String  @db.Char(15)
  keysytxc1 String? @db.Char(15)
  keysyimc  String  @db.Char(15)
  caption   String  @db.VarChar(50)
  prcid     Int     @default(0, map: "DF__cmprc__prcid__4751FDC5") @db.SmallInt
  prcalias  String? @db.VarChar(50)
  timestamp String  @db.Char(10)
  cmbtr     cmbtr[]
  cmgdr     cmgdr?

  @@index([keysycls], map: "fkcmprcsycls")
  @@index([keysyimc], map: "fkcmprcsyimc")
  @@index([keysymdl], map: "fkcmprcsymdl")
  @@index([keysytxc], map: "fkcmprcsytxc")
  @@index([keysytxc1], map: "fkcmprcsytxc1")
}

model cmprl {
  keycmprl  String @id(map: "pkcmprl") @db.Char(15)
  keycmpro  String @db.Char(15)
  keycmtgr  String @db.Char(15)
  value     String @db.VarChar(200)
  timestamp String @db.Char(10)
  cmpro     cmpro  @relation(fields: [keycmpro], references: [keycmpro], onUpdate: NoAction, map: "fkcmprlkeycmpro")
  cmtgr     cmtgr  @relation(fields: [keycmtgr], references: [keycmtgr], onUpdate: NoAction, map: "fkcmprlkeycmtgr")

  @@index([keycmpro], map: "fkcmprlcmpro")
  @@index([keycmtgr], map: "fkcmprlcmtgr")
}

model cmprn {
  keycmprn  String  @id(map: "pkcmprn") @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keysyusr  String? @db.Char(15)
  type      Int     @default(0, map: "DF__cmprn__type__2D178E88") @db.TinyInt
  settings  String? @db.VarChar(Max)
  timestamp String  @db.Char(10)

  @@unique([keysyusr, keydbtbl, keycode], map: "akcmprn1")
  @@index([keycode], map: "fkcmprncode")
  @@index([keydbtbl], map: "fkcmprndbtbl")
  @@index([keysyusr], map: "fkcmprnsyusr")
}

model cmpro {
  keycmpro  String  @id(map: "pkcmpro") @db.Char(15)
  keysytxc  String? @db.Char(15)
  caption   String  @db.VarChar(100)
  protype   Int     @db.TinyInt
  transfer  Int     @default(0, map: "DF__cmpro__transfer__6B28CA1B") @db.TinyInt
  diroffer  Int     @default(0, map: "DF__cmpro__diroffer__6C1CEE54") @db.TinyInt
  timestamp String  @db.Char(10)
  cmprl     cmprl[]
  hypro     hypro[]

  @@unique([caption, diroffer], map: "akcmpro1")
  @@index([keysytxc], map: "fkcmprosytxc")
}

model cmqrr {
  keycmqrr   String  @id(map: "pkcmqrr") @db.Char(15)
  keycmqry   String  @db.Char(15)
  qrrfunc    Int
  qrralias   String  @db.VarChar(30)
  qrrfield   String  @db.VarChar(50)
  qrralias2  String? @db.VarChar(30)
  qrrfield2  String? @db.VarChar(50)
  qrror      Int     @default(0, map: "DF__cmqrr__qrror__750B9A1C") @db.TinyInt
  qrrprio    Int     @default(0, map: "DF__cmqrr__qrrprio__75FFBE55") @db.TinyInt
  qrrnot     Int     @default(0, map: "DF__cmqrr__qrrnot__76F3E28E") @db.TinyInt
  qrroperand Int     @default(1, map: "DF__cmqrr__qrroperan__77E806C7")
  qrrcase    Int     @default(0, map: "DF__cmqrr__qrrcase__78DC2B00") @db.TinyInt
  qrrsoundex Int     @default(0, map: "DF__cmqrr__qrrsounde__79D04F39") @db.TinyInt
  qrrvalue   String? @db.VarChar(Max)
  qrrexpr    String? @db.VarChar(Max)
  timestamp  String  @db.Char(10)
  cmqry      cmqry   @relation(fields: [keycmqry], references: [keycmqry], onDelete: Cascade, onUpdate: NoAction, map: "fkcmqrrkeycmqry ")

  @@index([keycmqry], map: "fkcmqrrcmqry")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cmqrr_210616_BUversion19 {
  keycmqrr   String  @db.Char(15)
  keycmqry   String  @db.Char(15)
  qrrfunc    Int
  qrralias   String  @db.VarChar(30)
  qrrfield   String  @db.VarChar(50)
  qrralias2  String? @db.VarChar(30)
  qrrfield2  String? @db.VarChar(50)
  qrror      Int     @db.TinyInt
  qrrprio    Int     @db.TinyInt
  qrrnot     Int     @db.TinyInt
  qrroperand Int
  qrrcase    Int     @db.TinyInt
  qrrsoundex Int     @db.TinyInt
  qrrvalue   String? @db.VarChar(Max)
  qrrexpr    String? @db.VarChar(Max)
  timestamp  String  @db.Char(10)

  @@ignore
}

model cmqry {
  keycmqry  String  @id(map: "pkcmqry") @db.Char(15)
  keysyusr  String? @db.Char(15)
  caption   String  @db.VarChar(250)
  internal  Int     @default(0, map: "DF__cmqry__internal__6F3F55D2") @db.TinyInt
  accr      Int     @default(0, map: "DF__cmqry__accr__70337A0B") @db.TinyInt
  accw      Int     @default(0, map: "DF__cmqry__accw__71279E44") @db.TinyInt
  qryquery  String  @db.VarChar(Max)
  qrymemo   String? @db.VarChar(Max)
  timestamp String  @db.Char(10)
  bsend     bsend[]
  bubub     bubub[]
  buchg     buchg[]
  buchr     buchr[]
  cmbtr     cmbtr[]
  cmqrr     cmqrr[]
  cmrbr     cmrbr[]
  cmrdc     cmrdc[]
  cmrdr     cmrdr[]
  cmunf     cmunf[]
  cmunp     cmunp[]
  cmuns     cmuns[]

  @@index([keysyusr], map: "fkcmqrysyusr")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cmqry_210616_BUversion19 {
  keycmqry  String  @db.Char(15)
  keysyusr  String? @db.Char(15)
  caption   String  @db.VarChar(250)
  internal  Int     @db.TinyInt
  accr      Int     @db.TinyInt
  accw      Int     @db.TinyInt
  qryquery  String  @db.VarChar(Max)
  qrymemo   String? @db.VarChar(Max)
  timestamp String  @db.Char(10)

  @@ignore
}

model cmrba {
  keycmrba  String @id(map: "pkcmrba") @db.Char(15)
  keycmrbh  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)
  cmrbh     cmrbh  @relation(fields: [keycmrbh], references: [keycmrbh], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrbakeycmrbh ")

  @@unique([keycmrbh, keysygrp], map: "akcmrba")
  @@index([keysygrp], map: "fkcmrbasygrp")
}

model cmrbh {
  keycmrbh  String  @id(map: "pkcmrbh") @db.Char(15)
  keysyusr  String? @db.Char(15)
  caption   String  @db.VarChar(80)
  dotnet    Int     @default(0, map: "DF__cmrbh__dotnet__5447774B") @db.TinyInt
  accr      Int     @default(0, map: "DF__cmrbh__accr__553B9B84") @db.TinyInt
  accw      Int     @default(0, map: "DF__cmrbh__accw__562FBFBD") @db.TinyInt
  publish   Int     @default(0, map: "DF__cmrbh__publish__5723E3F6") @db.TinyInt
  timestamp String  @db.Char(10)
  cmbtr     cmbtr[]
  cmrba     cmrba[]
  cmrbr     cmrbr[]

  @@index([keysyusr], map: "fkcmrbhsyusr")
}

model cmrbr {
  keycmrbr  String  @id(map: "pkcmrbr") @db.Char(15)
  keycmqry  String  @db.Char(15)
  keycmrpl  String? @db.Char(15)
  keycmfrx  String? @db.Char(15)
  keycmrpt  String  @db.Char(15)
  keycmrbh  String  @db.Char(15)
  caption   String  @db.VarChar(250)
  rbrorder  Int     @default(0, map: "DF__cmrbr__rbrorder__1CD3C706")
  rbrdest   Int     @default(1, map: "DF__cmrbr__rbrdest__1DC7EB3F")
  rbrconfig String  @db.VarChar(Max)
  timestamp String  @db.Char(10)
  cmqry     cmqry   @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkcmrbrkeycmqry")
  cmrbh     cmrbh   @relation(fields: [keycmrbh], references: [keycmrbh], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrbrkeycmrbh")
  cmrpl     cmrpl?  @relation(fields: [keycmrpl], references: [keycmrpl], onUpdate: NoAction, map: "fkcmrbrkeycmrpl")
  cmrpt     cmrpt   @relation(fields: [keycmrpt], references: [keycmrpt], onUpdate: NoAction, map: "fkcmrbrkeycmrpt")
  cmrpe     cmrpe[]

  @@index([keycmfrx], map: "fkcmrbrcmfrx")
  @@index([keycmqry], map: "fkcmrbrcmqry")
  @@index([keycmrbh], map: "fkcmrbrcmrbh")
  @@index([keycmrpt], map: "fkcmrbrcmrpt")
}

model cmrdc {
  keycmrdc   String  @id(map: "pkcmrdc") @db.Char(15)
  keycmrdr   String  @db.Char(15)
  keycmqry   String? @db.Char(15)
  id         Int     @default(0, map: "DF__cmrdc__id__268DE717")
  type       Int     @default(0, map: "DF__cmrdc__type__27820B50")
  keycode    String? @db.Char(15)
  caption    String? @db.VarChar(50)
  sortorder  Int     @default(0, map: "DF__cmrdc__sortorder__28762F89")
  decimals   Int     @default(0, map: "DF__cmrdc__decimals__296A53C2") @db.TinyInt
  digitgroup Int     @default(0, map: "DF__cmrdc__digitgrou__2A5E77FB") @db.TinyInt
  bcolor     Int     @default(0, map: "DF__cmrdc__bcolor__2B529C34")
  fcolor     Int     @default(0, map: "DF__cmrdc__fcolor__2C46C06D")
  textalign  Int     @default(0, map: "DF__cmrdc__textalign__2D3AE4A6")
  fontname   String  @db.VarChar(50)
  fontstyle  Int     @default(0, map: "DF__cmrdc__fontstyle__2E2F08DF")
  fontsize   Int     @default(0, map: "DF__cmrdc__fontsize__2F232D18")
  visible    Int     @default(0, map: "DF__cmrdc__visible__30175151") @db.TinyInt
  formula    String? @db.VarChar(Max)
  timestamp  String  @db.Char(10)
  cmqry      cmqry?  @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkcmrdckeycmqry ")
  cmrdr      cmrdr   @relation(fields: [keycmrdr], references: [keycmrdr], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrdckeycmrdr ")

  @@index([keycmqry], map: "fkcmrdccmqry")
  @@index([keycmrdr], map: "fkcmrdccmrdr")
}

model cmrdh {
  keycmrdh  String  @id(map: "pkcmrdh") @db.Char(15)
  keycmrpt  String  @db.Char(15)
  keysyusr  String  @db.Char(15)
  caption   String  @db.VarChar(250)
  colcount  Int     @default(0, map: "DF__cmrdh__colcount__694C5312")
  accr      Int     @default(0, map: "DF__cmrdh__accr__6A40774B") @db.TinyInt
  accw      Int     @default(0, map: "DF__cmrdh__accw__6B349B84") @db.TinyInt
  timestamp String  @db.Char(10)
  cmunfpubl Int     @default(0, map: "DF__cmrdh__cmunfpubl__782F9FD2") @db.TinyInt
  cmrdr     cmrdr[]

  @@index([keycmrpt], map: "fkcmrdhcmrpt")
  @@index([keysyusr], map: "fkcmrdhsyusr")
}

model cmrdq {
  keycmrdq  String  @id(map: "pkcmrdq") @db.Char(15)
  keycmqry  String  @db.Char(15)
  keycmrdh  String  @db.Char(15)
  keycode   String? @db.Char(15)
  type      Int     @default(0, map: "DF__cmrdq__type__6E11082F")
  caption   String  @db.VarChar(30)
  timestamp String  @db.Char(10)

  @@index([keycmqry], map: "fkcmrdqcmqry")
  @@index([keycmrdh], map: "fkcmrdqcmrdh")
}

model cmrdr {
  keycmrdr  String  @id(map: "pkcmrdr") @db.Char(15)
  keycmrdh  String  @db.Char(15)
  keysymdl  String  @db.Char(15)
  keycmqry  String? @db.Char(15)
  type      Int     @default(0, map: "DF__cmrdr__type__7DA0E01D") @db.TinyInt
  caption   String? @db.VarChar(Max)
  sortorder Int     @default(0, map: "DF__cmrdr__sortorder__7E950456")
  bcolor    Int     @default(0, map: "DF__cmrdr__bcolor__7F89288F")
  fcolor    Int     @default(0, map: "DF__cmrdr__fcolor__007D4CC8")
  textalign Int     @default(0, map: "DF__cmrdr__textalign__01717101")
  fontname  String  @db.VarChar(50)
  fontstyle Int     @default(0, map: "DF__cmrdr__fontstyle__0265953A")
  fontsize  Int     @default(0, map: "DF__cmrdr__fontsize__0359B973")
  visible   Int     @default(0, map: "DF__cmrdr__visible__044DDDAC") @db.TinyInt
  pagebreak Int     @default(0, map: "DF__cmrdr__pagebreak__054201E5") @db.TinyInt
  timestamp String  @db.Char(10)
  cmrdc     cmrdc[]
  cmqry     cmqry?  @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkcmrdrkeycmqry ")
  cmrdh     cmrdh   @relation(fields: [keycmrdh], references: [keycmrdh], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrdrkeycmrdh ")

  @@index([keycmqry], map: "fkcmrdrcmqry")
  @@index([keycmrdh], map: "fkcmrdrcmrdh")
  @@index([keysymdl], map: "fkcmrdrsymdl")
}

model cmrel {
  keycmrel  String    @id(map: "pkcmrel") @db.Char(15)
  keycmobj  String    @db.Char(15)
  keycmobj2 String    @db.Char(15)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@unique([keycmobj, keycmobj2], map: "akcmrel")
  @@index([keycmobj2], map: "fkcmrelcmobj2")
}

model cmrem {
  keycmrem  String   @id(map: "pkcmrem") @db.Char(15)
  keysyusr  String   @db.Char(15)
  start     DateTime @db.DateTime
  remind    DateTime @db.DateTime
  caption   String   @db.VarChar(254)
  internal  Int      @default(0, map: "DF__cmrem__internal__4A95720C") @db.TinyInt
  imcid     Int?
  timestamp String   @db.Char(10)
  cmcal     cmcal[]

  @@index([keysyusr], map: "fkcmremsyusr")
}

model cmrer {
  keycmrer  String @id(map: "pkcmrer") @db.Char(15)
  keycmrgr  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrerkeycmctc")
  cmrgr     cmrgr  @relation(fields: [keycmrgr], references: [keycmrgr], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrerkeycmrgr")

  @@unique([keycmrgr, keycmctc], map: "akcmrer1")
  @@index([keycmctc], map: "fkcmrercmctc")
  @@index([keycmrgr], map: "fkcmrercmrgr")
}

model cmres {
  keycmres   String    @id(map: "pkcmres") @db.Char(15)
  keycmctc   String    @db.Char(15)
  keyatway   String?   @db.Char(15)
  keyskyrk   String?   @db.Char(15)
  code       String    @db.VarChar(30)
  externres  Int       @default(0, map: "DF__cmres__externres__2B12A512") @db.TinyInt
  reference  String?   @db.VarChar(30)
  resmessage String?   @db.VarChar(60)
  emplfdate  DateTime? @db.Date
  empltdate  DateTime? @db.Date
  timestamp  String    @db.Char(10)
  atway      atway?    @relation(fields: [keyatway], references: [keyatway], onUpdate: NoAction, map: "fkcmreskeyatway")
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmreskeycmctc")
  skyrk      skyrk?    @relation(fields: [keyskyrk], references: [keyskyrk], onUpdate: NoAction, map: "fkcmreskeyskyrk ")

  @@index([keyatway], map: "fkcmresatway")
  @@index([keycmctc], map: "fkcmrescmctc")
  @@index([keyskyrk], map: "fkcmresskyrk")
  @@index([code], map: "incmres_code")
}

model cmrgc {
  keycmrgc  String @id(map: "PK__cmrgc__550C5788") @db.Char(15)
  keycmobj  String @db.Char(15)
  keycmrgr  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmobj], map: "fkcmrgccmobj")
  @@index([keycmrgr], map: "fkcmrgccmrgr")
}

model cmrgk {
  keycmrgk  String    @id(map: "pkcmrgk") @db.Char(15)
  keycmrgr  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  fdate     DateTime? @db.Date
  tdate     DateTime? @db.Date
  timestamp String    @db.Char(10)
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrgkkeycmctc")
  cmrgr     cmrgr     @relation(fields: [keycmrgr], references: [keycmrgr], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrgkkeycmrgr")

  @@unique([keycmrgr, keycmctc, fdate, tdate], map: "akcmrgk")
  @@index([keycmctc], map: "fkcmrgkcmctc")
}

model cmrgn {
  keycmrgn  String  @id(map: "pkcmrgn") @db.Char(15)
  code      String  @unique(map: "akcmrgn") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  cmcmp     cmcmp[]
}

model cmrgr {
  keycmrgr   String  @id(map: "pkcmrgr") @db.Char(15)
  keybaret   String? @db.Char(15)
  code       String  @db.VarChar(10)
  caption    String? @db.VarChar(30)
  resmail    Int     @default(0, map: "DF__cmrgr__resmail__0A06B702") @db.TinyInt
  mailnoti   Int     @default(0, map: "DF__cmrgr__mailnoti__0AFADB3B") @db.TinyInt
  incplanbrd Int     @default(0, map: "DF__cmrgr__incplanbr__0BEEFF74") @db.TinyInt
  timestamp  String  @db.Char(10)
  aocap      aocap[]
  aorml      aorml[]
  aoupp      aoupp[]
  barek      barek[]
  cmrer      cmrer[]
  cmrgk      cmrgk[]
  baret      baret?  @relation(fields: [keybaret], references: [keybaret], onUpdate: NoAction, map: "fkcmrgrkeybaret")
  lbbes      lbbes[]
  skund      skund[]

  @@index([keybaret], map: "fkcmrgrbaret")
}

model cmrgt {
  keycmrgt  String  @id(map: "PK__cmrgt__2BD537CB") @db.Char(15)
  keycmrpt  String  @db.Char(15)
  keycmrpg  String? @db.Char(15)
  userdef   Int     @db.TinyInt
  publish   Int     @default(0, map: "DF__cmrgt__publish__2CC95C04") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycmrpg], map: "fkcmrgtcmrpg")
  @@index([keycmrpt], map: "fkcmrgtcmrpt")
}

model cmrnh {
  keycmrnh  String @id(map: "PK__cmrnh__6A85CC04") @db.Char(15)
  code      String @db.Char(6)
  caption   String @db.Char(40)
  timestamp String @db.Char(10)
}

model cmrnr {
  keycmrnr  String   @id(map: "PK__cmrnr__6B79F03D") @db.Char(15)
  keycmrnh  String   @db.Char(15)
  regdate   DateTime @db.DateTime
  fromdate  DateTime @db.DateTime
  prcnt     Float    @db.SmallMoney
  factor    Float?   @db.SmallMoney
  ishare    Float?   @db.Money
  timestamp String   @db.Char(10)

  @@index([keycmrnh], map: "fkcmrnrcmrnh")
}

model cmrol {
  keycmrol   String  @id(map: "pkcmrol") @db.Char(15)
  keysytxc   String  @db.Char(15)
  caption    String  @db.VarChar(60)
  forceorgnr Int     @default(0, map: "DF__cmrol__forceorgn__5D292393") @db.TinyInt
  loadlookup Int     @default(0, map: "DF__cmrol__loadlooku__5E1D47CC") @db.TinyInt
  timestamp  String  @db.Char(10)
  cmcro      cmcro[]

  @@index([keysytxc], map: "fkcmrolsytxc")
}

model cmrpc {
  keycmrpc   String  @id(map: "pkcmrpc") @db.Char(15)
  keycmrph   String? @db.Char(15)
  keysymdl   String? @db.Char(15)
  keysytxc   String? @db.Char(15)
  keysycls   String? @db.Char(15)
  rpcname    String  @db.VarChar(30)
  caption    String  @db.VarChar(60)
  rpcorder   Int
  rpctype    Int?
  rpcfont    String  @db.VarChar(150)
  rpcalign   Int     @db.TinyInt
  rpcdec     Int     @db.TinyInt
  rpcdel     Int     @db.TinyInt
  rpcvisible Int     @db.TinyInt
  rpccalc    Int     @db.TinyInt
  rpcdef     String? @db.Text
  timestamp  String  @db.Char(10)

  @@index([keycmrph], map: "fkcmrpccmrph")
  @@index([keysycls], map: "fkcmrpcsycls")
  @@index([keysymdl], map: "fkcmrpcsymdl")
  @@index([keysytxc], map: "fkcmrpcsytxc")
}

model cmrpe {
  keycmrpe  String   @id(map: "pkcmrpe") @db.Char(15)
  keycmrpt  String   @db.Char(15)
  keycmrbr  String?  @db.Char(15)
  keysyusr  String?  @db.Char(15)
  rpttime   DateTime @db.DateTime
  timestamp String   @db.Char(10)
  cmrbr     cmrbr?   @relation(fields: [keycmrbr], references: [keycmrbr], onUpdate: NoAction, map: "fkcmrpekeycmrbr ")
  cmrpt     cmrpt    @relation(fields: [keycmrpt], references: [keycmrpt], onDelete: Cascade, onUpdate: NoAction, map: "fkcmrpekeycmrpt")

  @@index([keycmrbr], map: "fkcmrpecmrbr")
  @@index([keycmrpt], map: "fkcmrpecmrpt")
  @@index([keysyusr], map: "fkcmrpesyusr")
}

model cmrpg {
  keycmrpg  String  @id(map: "pkcmrpg") @db.Char(15)
  keycmrpg1 String? @db.Char(15)
  keysymdl  String? @db.Char(15)
  keysytxc  String? @db.Char(15)
  keysyusr  String? @db.Char(15)
  caption   String  @db.VarChar(50)
  userdef   Int     @default(0, map: "DF__cmrpg__userdef__373006D9") @db.TinyInt
  isglobal  Int     @default(0, map: "DF__cmrpg__isglobal__38242B12") @db.TinyInt
  accr      Int     @default(0, map: "DF__cmrpg__accr__39184F4B") @db.TinyInt
  accw      Int     @default(0, map: "DF__cmrpg__accw__3A0C7384") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycmrpg1], map: "fkcmrpgcmrpg1")
  @@index([keysymdl], map: "fkcmrpgsymdl")
  @@index([keysytxc], map: "fkcmrpgsytxc")
  @@index([keysyusr], map: "fkcmrpgsyusr")
}

model cmrph {
  keycmrph  String  @id(map: "pkcmrph") @db.Char(15)
  keysyusr  String? @db.Char(15)
  caption   String  @db.VarChar(50)
  accr      Int     @default(0, map: "DF__cmrph__accr__021800DC") @db.TinyInt
  accw      Int     @default(0, map: "DF__cmrph__accw__030C2515") @db.TinyInt
  dotnet    Int     @default(0, map: "DF__cmrph__dotnet__0400494E") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keysyusr], map: "fkcmrphsyusr")
}

model cmrpl {
  keycmrpl  String  @id(map: "pkcmrpl") @db.Char(15)
  keycmrpl1 String? @db.Char(15)
  keysytxc  String? @db.Char(15)
  rplfile   String  @db.VarChar(200)
  rplname   String  @unique(map: "akcmrpl1") @db.VarChar(100)
  caption   String  @db.VarChar(50)
  rpllayout String  @db.Text
  userdef   Int     @default(0, map: "DF__cmrpl__userdef__6EF95AFF") @db.TinyInt
  rplkind   Int     @default(0, map: "DF__cmrpl__rplkind__6FED7F38") @db.TinyInt
  timestamp String  @db.Char(10)
  bspgs     bspgs[]
  cmrbr     cmrbr[]
  faprn     faprn[]

  @@index([keycmrpl1], map: "fkcmrplcmrpl1")
  @@index([keysytxc], map: "fkcmrplsytxc")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cmrpl_PA200910_keycmrpl_19N0GO240GO23Z {
  keycmrpl  String  @db.Char(15)
  keycmrpl1 String? @db.Char(15)
  keysytxc  String? @db.Char(15)
  rplfile   String  @db.VarChar(200)
  rplname   String  @db.VarChar(100)
  caption   String  @db.VarChar(50)
  rpllayout String  @db.Text
  userdef   Int     @db.TinyInt
  rplkind   Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@ignore
}

model cmrpt {
  keycmrpt  String  @id(map: "pkcmrpt") @db.Char(15)
  keysycls  String? @db.Char(15)
  keysytxc2 String? @db.Char(15)
  keysytxc  String? @db.Char(15)
  keysyimc  String  @db.Char(15)
  keysyusr  String? @db.Char(15)
  caption   String  @db.VarChar(250)
  class     String? @db.VarChar(100)
  rptdest   Int     @default(0, map: "DF__cmrpt__rptdest__09B922A4")
  userdef   Int     @default(0, map: "DF__cmrpt__userdef__0AAD46DD") @db.TinyInt
  accr      Int     @default(0, map: "DF__cmrpt__accr__0BA16B16") @db.TinyInt
  accw      Int     @default(0, map: "DF__cmrpt__accw__0C958F4F") @db.TinyInt
  rptrsh    Int     @default(0, map: "DF__cmrpt__rptrsh__0D89B388") @db.TinyInt
  timestamp String  @db.Char(10)
  bsdef     bsdef[]
  cmrbr     cmrbr[]
  cmrpe     cmrpe[]
  hydis     hydis[]

  @@index([keysycls], map: "fkcmrptsycls")
  @@index([keysyimc], map: "fkcmrptsyimc")
  @@index([keysytxc], map: "fkcmrptsytxc")
  @@index([keysytxc2], map: "fkcmrptsytxc2")
  @@index([keysyusr], map: "fkcmrptsyusr")
}

model cmrpw {
  keycmrpw   String @id(map: "pkcmrpw") @db.Char(15)
  keycmrpt   String @db.Char(15)
  tblalias   String @db.VarChar(30)
  fldalias   String @db.VarChar(30)
  sortorder  Int    @default(0, map: "DF__cmrpw__sortorder__2FF3FB33") @db.TinyInt
  qryoperand Int    @default(1, map: "DF__cmrpw__qryoperan__30E81F6C")
  qrrnot     Int    @default(0, map: "DF__cmrpw__qrrnot__31DC43A5") @db.TinyInt
  timestamp  String @db.Char(10)

  @@unique([keycmrpt, tblalias, fldalias], map: "akcmrpw1")
  @@unique([keycmrpt, sortorder], map: "akcmrpw2")
  @@index([keycmrpt], map: "fkcmrpwcmrpt")
}

model cmrpx {
  keycmrpx  String @id(map: "PK__cmrpx__7132C993") @db.Char(15)
  keycmfrx  String @db.Char(15)
  keycmrpt  String @db.Char(15)
  rpxdef    Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keycmfrx], map: "fkcmrpxcmfrx")
  @@index([keycmrpt], map: "fkcmrpxcmrpt")
}

model cmrpy {
  keycmrpy   String @id(map: "pkcmrpy") @db.Char(15)
  keycmrpt   String @db.Char(15)
  keycmrpl   String @db.Char(15)
  rpydefault Int    @db.TinyInt
  timestamp  String @db.Char(10)

  @@unique([keycmrpt, keycmrpl], map: "akcmrpy1")
  @@index([keycmrpl], map: "fkcmrpycmrpl")
  @@index([keycmrpt], map: "fkcmrpycmrpt")
  @@index([rpydefault], map: "incmrpy_1GH0RTWBX")
  @@index([rpydefault], map: "incmrpy_3GF17PXX2")
}

model cmrsc {
  keycmrsc  String @id(map: "pkcmrsc") @db.Char(15)
  keycmrph  String @db.Char(15)
  keycmrsh  String @db.Char(15)
  rscdef    Int    @default(0, map: "DF__cmrsc__rscdef__10662033") @db.TinyInt
  dotnet    Int    @default(0, map: "DF__cmrsc__dotnet__115A446C") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keycmrph], map: "fkcmrsccmrph")
  @@index([keycmrsh], map: "fkcmrsccmrsh")
}

model cmrsh {
  keycmrsh  String  @id(map: "pkcmrsh") @db.Char(15)
  keysyusr  String? @db.Char(15)
  keycmrpt  String  @db.Char(15)
  caption   String  @db.VarChar(50)
  accr      Int     @default(0, map: "DF__cmrsh__accr__1436B117") @db.TinyInt
  accw      Int     @default(0, map: "DF__cmrsh__accw__152AD550") @db.TinyInt
  dotnet    Int     @default(0, map: "DF__cmrsh__dotnet__161EF989") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycmrpt], map: "fkcmrshcmrpt")
  @@index([keysyusr], map: "fkcmrshsyusr")
}

model cmrsr {
  keycmrsr   String  @id(map: "pkcmrsr") @db.Char(15)
  keycmrsh   String  @db.Char(15)
  keysymdl   String? @db.Char(15)
  rsrtype    Int     @db.SmallInt
  caption    String? @db.VarChar(50)
  rsrorder   Int     @db.SmallInt
  rsrvalue   String? @db.Text
  rsrvisible Int     @db.TinyInt
  rsrsign    Int     @db.TinyInt
  timestamp  String  @db.Char(10)

  @@index([keycmrsh], map: "fkcmrsrcmrsh")
  @@index([keysymdl], map: "fkcmrsrsymdl")
}

model cmrtn {
  keycmrtn  String  @id(map: "PK__cmrtn__235F2204") @db.Char(15)
  keysymdl  String? @db.Char(15)
  typeid    Int     @db.SmallInt
  name      String? @db.Char(30)
  timestamp String  @db.Char(10)
  revrt     revrt[]

  @@index([keysymdl], map: "fkcmrtnsymdl")
}

model cmsfd {
  keycmsfd  String  @id(map: "pkcmsfd") @db.Char(15)
  caption   String  @unique(map: "akcmsfd") @db.VarChar(60)
  timestamp String  @db.Char(10)
  cmart     cmart[]
}

model cmsom {
  keycmsom  String  @id(map: "pkcmsom") @db.Char(15)
  keycmctc  String? @db.Char(15)
  keycmctc2 String? @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String? @db.VarChar(30)
  tela      String? @db.VarChar(30)
  telb      String? @db.VarChar(30)
  telc      String? @db.VarChar(30)
  pga       String? @db.VarChar(11)
  pgb       String? @db.VarChar(11)
  pgc       String? @db.VarChar(11)
  bga       String? @db.VarChar(11)
  bgb       String? @db.VarChar(11)
  bgc       String? @db.VarChar(11)
  email     String? @db.VarChar(80)
  orgno     String? @db.VarChar(15)
  timestamp String  @db.Char(10)
  cmcmp     cmcmp[]
  feocd     feocd[]
  prprj     prprj[]

  @@index([keycmctc], map: "fkcmsomcmctc")
  @@index([keycmctc2], map: "fkcmsomcmctc2")
}

model cmsrk {
  keycmsrk  String @id(map: "PK__cmsrk__76EBA2E9") @db.Char(15)
  keycmsom  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmctc], map: "fkcmsrkcmctc")
  @@index([keycmsom], map: "fkcmsrkcmsom")
}

model cmstc {
  keycmstc  String @id(map: "pkcmstc") @db.Char(15)
  keycmsth  String @db.Char(15)
  keycmcmp  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmcmp], map: "fkcmstccmcmp")
  @@index([keycmsth], map: "fkcmstccmsth")
}

model cmstg {
  keycmstg  String   @id(map: "PK__cmstg__77DFC722") @db.Char(15)
  keycmsth  String?  @db.Char(15)
  fromdate  DateTime @db.DateTime
  todate    DateTime @db.DateTime
  closedate DateTime @db.DateTime
  timestamp String   @db.Char(10)

  @@index([keycmsth], map: "fkcmstgcmsth")
}

model cmsth {
  keycmsth  String  @id(map: "PK__cmsth__78D3EB5B") @db.Char(15)
  keysygrp  String? @db.Char(15)
  name      String? @db.Char(30)
  timestamp String  @db.Char(10)

  @@index([keysygrp], map: "fkcmsthsygrp")
}

model cmstk {
  keycmstk  String  @id(map: "PK__cmstk__79C80F94") @db.Char(15)
  keycmsth  String? @db.Char(15)
  keydbtbl  String? @db.Char(15)
  keycode   String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keycmsth], map: "fkcmstkcmsth")
  @@index([keycode], map: "fkcmstkcode")
  @@index([keydbtbl], map: "fkcmstkdbtbl")
}

model cmtag {
  keycmtag  String @id(map: "pkcmtag") @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  tag       String @db.VarChar(Max)
  timestamp String @db.Char(10)

  @@unique([keydbtbl, keycode], map: "akcmtag1")
}

model cmteg {
  keycmteg  String  @id(map: "pkcmteg") @db.Char(15)
  keycmteg2 String? @db.Char(15)
  caption   String  @db.VarChar(80)
  timestamp String  @db.Char(10)
  cmtep     cmtep[]

  @@unique([keycmteg2, caption], map: "akcmteg")
  @@index([keycmteg2], map: "fkcmtegcmteg2")
}

model cmtel {
  keycmtel  String    @id(map: "pkcmtel") @db.Char(15)
  keycmtet  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  cmtelben  String    @db.Char(30)
  main      Int       @default(0, map: "DF__cmtel__main__437BAFE5") @db.TinyInt
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keycmobj], map: "fkcmtelcmobj")
  @@index([keycmtet], map: "fkcmtelcmtet")
}

model cmtep {
  keycmtep  String  @id(map: "pkcmtep") @db.Char(15)
  keycmtyp  String  @db.Char(15)
  keycmteg  String? @db.Char(15)
  keydbtbl  String? @db.Char(15)
  keycmttt  String? @db.Char(15)
  caption   String  @db.VarChar(80)
  textlen   Int?    @db.TinyInt
  lookup    Int     @default(0, map: "DF__cmtep__lookup__0A40E0D6") @db.TinyInt
  inputtype Int     @default(0, map: "DF__cmtep__inputtype__0B35050F") @db.TinyInt
  printsort Int     @default(0, map: "DF__cmtep__printsort__0C292948") @db.TinyInt
  timestamp String  @db.Char(10)
  batep     batep?
  cmteg     cmteg?  @relation(fields: [keycmteg], references: [keycmteg], onUpdate: NoAction, map: "fkcmtepkeycmteg ")
  cmtyp     cmtyp   @relation(fields: [keycmtyp], references: [keycmtyp], onDelete: Cascade, onUpdate: NoAction, map: "fkcmtepkeycmtyp")
  cmtex     cmtex[]

  @@unique([keycmtyp, caption], map: "akcmtep")
  @@index([keycmteg], map: "fkcmtepcmteg")
  @@index([keycmttt], map: "fkcmtepcmttt")
}

model cmtet {
  keycmtet  String @id(map: "pkcmtet") @db.Char(15)
  caption   String @unique(map: "akcmtet") @db.VarChar(30)
  active    Int    @default(1, map: "DF__cmtet__active__4F5A2729") @db.TinyInt
  repabkod  Int    @default(0, map: "DF__cmtet__repabkod__504E4B62") @db.TinyInt
  timestamp String @db.Char(10)
}

model cmtex {
  keycmtex  String @id(map: "pkcmtex") @db.Char(15)
  keycmtep  String @db.Char(15)
  keycode   String @db.Char(15)
  text      String @db.VarChar(254)
  timestamp String @db.Char(10)
  cmtep     cmtep  @relation(fields: [keycmtep], references: [keycmtep], onDelete: Cascade, onUpdate: NoAction, map: "fkcmtexkeycmtep ")

  @@unique([keycode, keycmtep], map: "incmtex_2LR0I2LGS")
  @@index([keycmtep], map: "fkcmtexcmtep")
}

model cmtgf {
  keycmtgf  String    @id(map: "pkcmtgf") @db.Char(15)
  keycmtgr  String    @db.Char(15)
  keycmfac  String    @db.Char(15)
  fromdate  DateTime? @db.DateTime
  todate    DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keycmfac], map: "fkcmtgfcmfac")
  @@index([keycmtgr], map: "fkcmtgfcmtgr")
}

model cmtgk {
  keycmtgk  String    @id(map: "pkcmtgk") @db.Char(15)
  keycmtgr  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  fromdate  DateTime? @db.DateTime
  todate    DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcmtgkkeycmctc")
  cmtgr     cmtgr     @relation(fields: [keycmtgr], references: [keycmtgr], onUpdate: NoAction, map: "fkcmtgkkeycmtgr")

  @@index([keycmctc], map: "fkcmtgkcmctc")
  @@index([keycmtgr], map: "fkcmtgkcmtgr")
}

model cmtgp {
  keycmtgp  String  @id(map: "pkcmtgp") @db.Char(15)
  caption   String  @unique(map: "akcmtgp1") @db.VarChar(100)
  timestamp String  @db.Char(10)
  cmtrd     cmtrd[]
}

model cmtgr {
  keycmtgr                    String    @id(map: "pkcmtgr") @db.Char(15)
  keycmctc                    String    @db.Char(15)
  code                        String    @db.VarChar(30)
  caption                     String    @db.VarChar(100)
  fromdate                    DateTime? @db.Date
  todate                      DateTime? @db.Date
  timestamp                   String    @db.Char(10)
  cmctc_cmctc_keycmtgrTocmtgr cmctc[]   @relation("cmctc_keycmtgrTocmtgr")
  cmprl                       cmprl[]
  cmtgk                       cmtgk[]
  cmctc_cmtgr_keycmctcTocmctc cmctc     @relation("cmtgr_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkcmtgrkeycmctc")
  hytga                       hytga[]
  hytgr                       hytgr[]

  @@index([keycmctc], map: "fkcmtgrcmctc")
}

model cmtrd {
  keycmtrd  String  @id(map: "pkcmtrd") @db.Char(15)
  keycmtgp  String  @db.Char(15)
  code      String  @unique(map: "akcmtrd1") @db.VarChar(30)
  caption   String  @db.VarChar(100)
  timestamp String  @db.Char(10)
  cmcpt     cmcpt[]
  cmtgp     cmtgp   @relation(fields: [keycmtgp], references: [keycmtgp], onUpdate: NoAction, map: "fkcmtrdkeycmtgp")
  hyobj     hyobj[]
  hystl     hystl[]

  @@index([keycmtgp], map: "fkcmtrdcmtgp")
}

model cmttc {
  keycmttc  String @id(map: "pkcmttc") @db.Char(15)
  keycmttt  String @db.Char(15)
  caption   String @db.VarChar(250)
  timestamp String @db.Char(10)
  cmttt     cmttt  @relation(fields: [keycmttt], references: [keycmttt], onDelete: Cascade, onUpdate: NoAction, map: "fkcmttckeycmttt")

  @@index([keycmttt], map: "fkcmttccmttt")
}

model cmttt {
  keycmttt   String  @id(map: "pkcmttt") @db.Char(15)
  caption    String  @unique(map: "akcmttt") @db.VarChar(50)
  allowempty Int     @default(0, map: "DF__cmttt__allowempt__64CA455B") @db.TinyInt
  timestamp  String  @db.Char(10)
  cmttc      cmttc[]
}

model cmtxc {
  keycmtxc  String  @id(map: "pkcmtxc") @db.Char(15)
  keysytxc  String? @db.Char(15)
  keysytxc2 String? @db.Char(15)
  id        Int     @unique(map: "akcmtxc1") @default(0, map: "DF__cmtxc__id__0A235806")
  caption   String  @db.VarChar(250)
  timestamp String  @db.Char(10)

  @@index([keysytxc], map: "fkcmtxcsytxc")
  @@index([keysytxc2], map: "fkcmtxcsytxc2")
}

model cmtxt {
  keycmtxt  String  @id(map: "pkcmtxt") @db.Char(15)
  keycmtxc  String  @db.Char(15)
  keycmcmp  String? @db.Char(15)
  lcid      Int     @default(0, map: "DF__cmtxt__lcid__34B8B050")
  userdef   Int     @default(0, map: "DF__cmtxt__userdef__35ACD489") @db.TinyInt
  txtprp    String  @db.VarChar(Max)
  timestamp String  @db.Char(10)

  @@unique([keycmtxc, keycmcmp, lcid, userdef], map: "akcmtxt1")
  @@index([keycmcmp], map: "fkcmtxtcmcmp")
  @@index([keycmtxc], map: "fkcmtxtcmtxc")
}

model cmtyp {
  keycmtyp                     String  @id(map: "pkcmtyp") @db.Char(15)
  keycmtyp2                    String? @db.Char(15)
  caption                      String  @db.VarChar(60)
  sortorder                    Int     @default(0, map: "DF__cmtyp__sortorder__33C21956") @db.SmallInt
  txtallow                     Int     @default(0, map: "DF__cmtyp__txtallow__34B63D8F") @db.TinyInt
  sublvls                      Int     @default(0, map: "DF__cmtyp__sublvls__35AA61C8") @db.TinyInt
  publish                      Int     @default(1, map: "DF__cmtyp__publish__369E8601") @db.TinyInt
  validmdl                     String? @db.VarChar(80)
  hidetype                     Int     @default(0, map: "DF__cmtyp__hidetype__3792AA3A") @db.TinyInt
  repab                        Int     @default(0, map: "DF__cmtyp__repab__3886CE73") @db.TinyInt
  timestamp                    String  @db.Char(10)
  bakmt                        bakmt[]
  basyt_basyt_keycmtypTocmtyp  basyt[] @relation("basyt_keycmtypTocmtyp")
  basyt_basyt_keycmtyp2Tocmtyp basyt[] @relation("basyt_keycmtyp2Tocmtyp")
  cmtep                        cmtep[]
  cmvap                        cmvap[]
  dorev_dorev_keycmtypTocmtyp  dorev[] @relation("dorev_keycmtypTocmtyp")
  dorev_dorev_keycmtyp2Tocmtyp dorev[] @relation("dorev_keycmtyp2Tocmtyp")
  fbbeh                        fbbeh[]
  fbbka                        fbbka[]
  fbbla                        fbbla[]
  fbreb                        fbreb[]

  @@index([keycmtyp2], map: "fkcmtypcmtyp2")
}

model cmucc {
  keycmucc  String @id(map: "pkcmucc") @db.Char(15)
  keycmunc  String @db.Char(15)
  colorhex  String @db.VarChar(20)
  sortorder Int    @default(0, map: "DF__cmucc__sortorder__3C48C717") @db.SmallInt
  timestamp String @db.Char(10)
  cmunc     cmunc  @relation(fields: [keycmunc], references: [keycmunc], onUpdate: NoAction, map: "fkcmucckeycmunc")

  @@index([keycmunc], map: "fkcmucccmunc")
}

model cmuid {
  keycmuid  String  @id(map: "pkcmuid") @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  uniqueid  String  @db.UniqueIdentifier
  calias    String? @db.VarChar(100)
  idkind    Int     @default(0, map: "DF__cmuid__idkind__69AC7651") @db.TinyInt
  timestamp String  @db.Char(10)

  @@unique([keycode, idkind, keydbtbl], map: "akcmuid1")
  @@index([uniqueid, calias, keycmuid], map: "incmuid1")
}

model cmunc {
  keycmunc                     String  @id(map: "pkcmunc") @db.Char(15)
  keycmunf                     String  @db.Char(15)
  keycmunf2                    String  @db.Char(15)
  sortorder                    Int     @default(0, map: "DF__cmunc__sortorder__384CA49F")
  cntprpname                   String? @db.VarChar(90)
  grpprpname                   String? @db.VarChar(90)
  widkind                      Int     @default(0, map: "DF__cmunc__widkind__3940C8D8") @db.TinyInt
  widclrrev                    Int     @default(0, map: "DF__cmunc__widclrrev__3A34ED11") @db.TinyInt
  widminval                    Decimal @default(0, map: "DF__cmunc__widminval__3B29114A") @db.Decimal(12, 2)
  widlowrg                     Decimal @default(0, map: "DF__cmunc__widlowrg__3C1D3583") @db.Decimal(12, 2)
  widhighrg                    Decimal @default(0, map: "DF__cmunc__widhighrg__3D1159BC") @db.Decimal(12, 2)
  widmaxval                    Decimal @default(0, map: "DF__cmunc__widmaxval__3E057DF5") @db.Decimal(12, 2)
  timestamp                    String  @db.Char(10)
  cmucc                        cmucc[]
  cmunf_cmunc_keycmunfTocmunf  cmunf   @relation("cmunc_keycmunfTocmunf", fields: [keycmunf], references: [keycmunf], onDelete: Cascade, onUpdate: NoAction, map: "fkcmunckeycmunf")
  cmunf_cmunc_keycmunf2Tocmunf cmunf   @relation("cmunc_keycmunf2Tocmunf", fields: [keycmunf2], references: [keycmunf], onUpdate: NoAction, map: "fkcmunckeycmunf2")
  cmuno                        cmuno[]

  @@unique([keycmunf, keycmunf2], map: "akcmunc")
  @@index([keycmunf2], map: "fkcmunccmunf2")
}

model cmund {
  keycmund  String @id(map: "pkcmund") @db.Char(15)
  keycmunf  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)
  cmunf     cmunf  @relation(fields: [keycmunf], references: [keycmunf], onDelete: Cascade, onUpdate: NoAction, map: "fkcmundkeycmunf")

  @@unique([keycmunf, keysygrp], map: "akcmund1")
  @@index([keycmunf], map: "fkcmundcmunf")
  @@index([keysygrp], map: "fkcmundsygrp")
}

model cmunf {
  keycmunf                     String    @id(map: "pkcmunf") @db.Char(15)
  keycmunf2                    String?   @db.Char(15)
  keycmung                     String    @db.Char(15)
  keycmunt                     String?   @db.Char(15)
  keysytxc                     String?   @db.Char(15)
  keycmqry                     String?   @db.Char(15)
  keycode                      String?   @db.Char(15)
  keycode2                     String?   @db.Char(15)
  caption                      String?   @db.VarChar(200)
  descript                     String?   @db.VarChar(2000)
  ftype                        Int       @default(0, map: "DF__cmunf__ftype__3B7B974D") @db.TinyInt
  ctype                        String?   @db.VarChar(400)
  omtid                        Int       @default(0, map: "DF__cmunf__omtid__3C6FBB86")
  sortorder                    Int       @default(0, map: "DF__cmunf__sortorder__3D63DFBF")
  ispublish                    Int       @default(0, map: "DF__cmunf__ispublish__3E5803F8") @db.TinyInt
  userdef                      Int       @default(0, map: "DF__cmunf__userdef__3F4C2831") @db.TinyInt
  sharestat                    Int       @default(0, map: "DF__cmunf__sharestat__40404C6A") @db.TinyInt
  defaultws                    Int       @default(0, map: "DF__cmunf__defaultws__413470A3") @db.TinyInt
  defaultwws                   Int       @default(0, map: "DF__cmunf__defaultww__422894DC") @db.TinyInt
  defaultmws                   Int       @default(0, map: "DF__cmunf__defaultmw__431CB915") @db.TinyInt
  defaultapp                   Int       @default(0, map: "DF__cmunf__defaultap__4410DD4E") @db.TinyInt
  timesused                    Int       @default(0, map: "DF__cmunf__timesused__45050187")
  lastused                     DateTime? @db.DateTime
  timestamp                    String    @db.Char(10)
  cmunc_cmunc_keycmunfTocmunf  cmunc[]   @relation("cmunc_keycmunfTocmunf")
  cmunc_cmunc_keycmunf2Tocmunf cmunc[]   @relation("cmunc_keycmunf2Tocmunf")
  cmund                        cmund[]
  cmqry                        cmqry?    @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkcmunfkeycmqry ")
  cmung                        cmung     @relation(fields: [keycmung], references: [keycmung], onDelete: Cascade, onUpdate: NoAction, map: "fkcmunfkeycmung ")
  cmunt                        cmunt?    @relation(fields: [keycmunt], references: [keycmunt], onDelete: NoAction, onUpdate: NoAction, map: "fkcmunfkeycmunt ")
  cmuno                        cmuno[]
  cmunp                        cmunp[]

  @@index([keycmqry], map: "fkcmunfcmqry")
  @@index([keycmung], map: "fkcmunfcmung")
  @@index([keycmunt], map: "fkcmunfcmunt")
  @@index([keysytxc], map: "fkcmunfsyomt")
  @@index([keysytxc], map: "fkcmunfsytxc")
}

model cmung {
  keycmung  String  @id(map: "pkcmung") @db.Char(15)
  keysyusr  String  @db.Char(15)
  keysytxc  String? @db.Char(15)
  caption   String? @db.VarChar(150)
  sortorder Int     @default(0, map: "DF__cmung__sortorder__3787BD42")
  userdef   Int     @default(0, map: "DF__cmung__userdef__387BE17B") @db.TinyInt
  expanded  Int     @default(0, map: "DF__cmung__expanded__397005B4") @db.TinyInt
  timestamp String  @db.Char(10)
  cmunf     cmunf[]
  cmuns     cmuns[]

  @@index([keysytxc], map: "fkcmungsytxc")
  @@index([keysyusr], map: "fkcmungsyusr")
}

model cmuni {
  keycmuni                     String  @id(map: "pkcmuni") @db.Char(15)
  keysytxc                     String  @db.Char(15)
  tosi                         String  @db.VarChar(Max)
  fromsi                       String  @db.VarChar(Max)
  timestamp                    String  @db.Char(10)
  bazdm                        bazdm[]
  cmart_cmart_keycmuniTocmuni  cmart[] @relation("cmart_keycmuniTocmuni")
  cmart_cmart_keycmuni2Tocmuni cmart[] @relation("cmart_keycmuni2Tocmuni")
  cmgdr                        cmgdr[]
  fbbka_fbbka_keycmuniTocmuni  fbbka[] @relation("fbbka_keycmuniTocmuni")
  fbbka_fbbka_keycmuni2Tocmuni fbbka[] @relation("fbbka_keycmuni2Tocmuni")
  hybev_hybev_keycmuniTocmuni  hybev[] @relation("hybev_keycmuniTocmuni")
  hybev_hybev_keycmuni2Tocmuni hybev[] @relation("hybev_keycmuni2Tocmuni")
  hycal                        hycal[]
  hycnc                        hycnc[]
  hycnr                        hycnr[]
  hyobj_hyobj_keycmuniTocmuni  hyobj[] @relation("hyobj_keycmuniTocmuni")
  hyobj_hyobj_keycmuni2Tocmuni hyobj[] @relation("hyobj_keycmuni2Tocmuni")
  hyobj_hyobj_keycmuni3Tocmuni hyobj[] @relation("hyobj_keycmuni3Tocmuni")
  hyrad                        hyrad[]
  hysec_hysec_keycmuniTocmuni  hysec[] @relation("hysec_keycmuniTocmuni")
  hysec_hysec_keycmuni2Tocmuni hysec[] @relation("hysec_keycmuni2Tocmuni")
  hysec_hysec_keycmuni3Tocmuni hysec[] @relation("hysec_keycmuni3Tocmuni")
  hysem                        hysem[]
  lbplr                        lbplr[]
  puatg                        puatg[]
  revrr                        revrr[]
  skatg                        skatg[]
  skkot                        skkot[]
  tvpca                        tvpca[]
  tvvou                        tvvou[]
  ubmea                        ubmea[]

  @@index([keysytxc], map: "fkcmunisytxc")
}

model cmuno {
  keycmuno   String  @id(map: "pkcmuno") @db.Char(15)
  keycmunc   String? @db.Char(15)
  keycmunf   String? @db.Char(15)
  keysyomo   String? @db.Char(15)
  keysyusr   String? @db.Char(15)
  onokind    Int     @default(0, map: "DF__cmuno__onokind__47B4036A") @db.TinyInt
  itemcnt    Int     @default(0, map: "DF__cmuno__itemcnt__48A827A3") @db.TinyInt
  onosetting String? @db.Xml
  sortorder  Int     @default(0, map: "DF__cmuno__sortorder__499C4BDC") @db.SmallInt
  timestamp  String  @db.Char(10)
  cmunc      cmunc?  @relation(fields: [keycmunc], references: [keycmunc], onDelete: NoAction, onUpdate: NoAction, map: "fkcmunokeycmunc")
  cmunf      cmunf?  @relation(fields: [keycmunf], references: [keycmunf], onDelete: Cascade, onUpdate: NoAction, map: "fkcmunokeycmunf")

  @@index([keycmunc], map: "fkcmunocmunc")
  @@index([keycmunf], map: "fkcmunocmunf")
  @@index([keysyomo], map: "fkcmunosyomo")
  @@index([keysyusr], map: "fkcmunosyusr")
}

model cmunp {
  keycmunp  String @id(map: "pkcmunp") @db.Char(15)
  keycmunf  String @db.Char(15)
  keycmqry  String @db.Char(15)
  caption   String @db.VarChar(100)
  sortorder Int    @default(0, map: "DF__cmunp__sortorder__7DB02168") @db.SmallInt
  timestamp String @db.Char(10)
  cmqry     cmqry  @relation(fields: [keycmqry], references: [keycmqry], onDelete: Cascade, onUpdate: NoAction, map: "fkcmunpkeycmqry ")
  cmunf     cmunf  @relation(fields: [keycmunf], references: [keycmunf], onDelete: Cascade, onUpdate: NoAction, map: "fkcmunpkeycmunf")

  @@index([keycmqry], map: "fkcmunpcmqry")
  @@index([keycmunf], map: "fkcmunpcmunf")
}

model cmuns {
  keycmuns  String  @id(map: "pkcmuns") @db.Char(15)
  keycmung  String  @db.Char(15)
  keysyomt  String  @db.Char(15)
  keysytxc  String? @db.Char(15)
  keycmqry  String? @db.Char(15)
  caption   String? @db.VarChar(150)
  omtkind   Int     @default(0, map: "DF__cmuns__omtkind__0274D685")
  sortorder Int     @default(0, map: "DF__cmuns__sortorder__0368FABE")
  userdef   Int     @default(0, map: "DF__cmuns__userdef__045D1EF7") @db.TinyInt
  timestamp String  @db.Char(10)
  cmqry     cmqry?  @relation(fields: [keycmqry], references: [keycmqry], onUpdate: NoAction, map: "fkcmunskeycmqry ")
  cmung     cmung   @relation(fields: [keycmung], references: [keycmung], onDelete: Cascade, onUpdate: NoAction, map: "fkcmunskeycmung ")

  @@index([keycmqry], map: "fkcmunscmqry")
  @@index([keycmung], map: "fkcmunscmung")
  @@index([keysyomt], map: "fkcmunssyomt")
  @@index([keysytxc], map: "fkcmunssytxc")
}

model cmunt {
  keycmunt  String  @id(map: "pkcmunt") @db.Char(15)
  caption   String  @unique(map: "akcmunt") @db.VarChar(60)
  colorhex  String? @db.VarChar(20)
  timestamp String  @db.Char(10)
  cmunf     cmunf[]
}

model cmvac {
  keycmvac  String @id(map: "pkcmvac") @db.Char(15)
  keycmvat  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)
  cmvat     cmvat  @relation(fields: [keycmvat], references: [keycmvat], onDelete: Cascade, onUpdate: NoAction, map: "fkcmvackeycmvat ")

  @@unique([keycmvat, keysygrp], map: "akcmvac")
  @@index([keysygrp], map: "fkcmvacsygrp")
}

model cmvad {
  keycmvad   String  @id(map: "pkcmvad") @db.Char(15)
  caption    String  @unique(map: "akcmvad") @db.VarChar(60)
  importrum  Int     @default(0, map: "DF__cmvad__importrum__30CB7E68") @db.TinyInt
  importsys  Int     @default(0, map: "DF__cmvad__importsys__31BFA2A1") @db.TinyInt
  importkmp  Int     @default(0, map: "DF__cmvad__importkmp__32B3C6DA") @db.TinyInt
  importlgh  Int     @default(0, map: "DF__cmvad__importlgh__33A7EB13") @db.TinyInt
  importlok  Int     @default(0, map: "DF__cmvad__importlok__349C0F4C") @db.TinyInt
  importbps  Int     @default(0, map: "DF__cmvad__importbps__35903385") @db.TinyInt
  importhyr  Int     @default(0, map: "DF__cmvad__importhyr__368457BE") @db.TinyInt
  importuhe  Int     @default(0, map: "DF__cmvad__importuhe__37787BF7") @db.TinyInt
  moverum    Int     @default(0, map: "DF__cmvad__moverum__386CA030") @db.TinyInt
  movesys    Int     @default(0, map: "DF__cmvad__movesys__3960C469") @db.TinyInt
  movekmp    Int     @default(0, map: "DF__cmvad__movekmp__3A54E8A2") @db.TinyInt
  movelgh    Int     @default(0, map: "DF__cmvad__movelgh__3B490CDB") @db.TinyInt
  movetlok   Int     @default(0, map: "DF__cmvad__movetlok__3C3D3114") @db.TinyInt
  movetbps   Int     @default(0, map: "DF__cmvad__movetbps__3D31554D") @db.TinyInt
  movehyr    Int     @default(0, map: "DF__cmvad__movehyr__3E257986") @db.TinyInt
  moveuhe    Int     @default(0, map: "DF__cmvad__moveuhe__3F199DBF") @db.TinyInt
  chktyperum Int     @default(0, map: "DF__cmvad__chktyperu__400DC1F8") @db.TinyInt
  chktypesys Int     @default(0, map: "DF__cmvad__chktypesy__4101E631") @db.TinyInt
  chktypekmp Int     @default(0, map: "DF__cmvad__chktypekm__41F60A6A") @db.TinyInt
  chktypelgh Int     @default(1, map: "DF__cmvad__chktypelg__42EA2EA3") @db.TinyInt
  chktypelok Int     @default(1, map: "DF__cmvad__chktypelo__43DE52DC") @db.TinyInt
  chktypebps Int     @default(1, map: "DF__cmvad__chktypebp__44D27715") @db.TinyInt
  chktypehyr Int     @default(1, map: "DF__cmvad__chktypehy__45C69B4E") @db.TinyInt
  chktypeuhe Int     @default(0, map: "DF__cmvad__chktypeuh__46BABF87") @db.TinyInt
  replacerum Int     @default(0, map: "DF__cmvad__replaceru__47AEE3C0") @db.TinyInt
  replacesys Int     @default(0, map: "DF__cmvad__replacesy__48A307F9") @db.TinyInt
  replacekmp Int     @default(0, map: "DF__cmvad__replacekm__49972C32") @db.TinyInt
  replacelgh Int     @default(0, map: "DF__cmvad__replacelg__4A8B506B") @db.TinyInt
  replacelok Int     @default(0, map: "DF__cmvad__replacelo__4B7F74A4") @db.TinyInt
  replacebps Int     @default(0, map: "DF__cmvad__replacebp__4C7398DD") @db.TinyInt
  replacehyr Int     @default(0, map: "DF__cmvad__replacehy__4D67BD16") @db.TinyInt
  replaceuhe Int     @default(0, map: "DF__cmvad__replaceuh__4E5BE14F") @db.TinyInt
  storefile  Int     @default(1, map: "DF__cmvad__storefile__4F500588") @db.TinyInt
  storedwg   Int     @default(1, map: "DF__cmvad__storedwg__504429C1") @db.TinyInt
  createao   Int     @default(1, map: "DF__cmvad__createao__51384DFA") @db.TinyInt
  isstandard Int     @default(0, map: "DF__cmvad__isstandar__522C7233") @db.TinyInt
  imppath    String? @db.VarChar(600)
  histpath   String? @db.VarChar(600)
  dwgpath    String? @db.VarChar(600)
  dwghist    String? @db.VarChar(600)
  timestamp  String  @db.Char(10)
  cmvai      cmvai[]
}

model cmvai {
  keycmvai  String  @id(map: "pkcmvai") @db.Char(15)
  keycmvad  String  @db.Char(15)
  keydbfld  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keycode2  String? @db.Char(15)
  vaikind   Int     @default(0, map: "DF__cmvai__vaikind__02235094") @db.TinyInt
  alias     String  @db.VarChar(30)
  measure   Int     @default(1, map: "DF__cmvai__measure__031774CD") @db.TinyInt
  filterfld String? @db.VarChar(60)
  filterval String? @db.VarChar(60)
  timestamp String  @db.Char(10)
  cmvad     cmvad   @relation(fields: [keycmvad], references: [keycmvad], onDelete: Cascade, onUpdate: NoAction, map: "fkcmvaikeycmvad ")

  @@index([keycmvad], map: "fkcmvaicmvad")
  @@index([keydbfld], map: "fkcmvaidbfld")
  @@index([keycode], map: "fkcmvaikeycode")
  @@index([keycode2], map: "fkcmvaikeycode2")
  @@index([alias], map: "incmvaialias")
}

model cmval {
  keycmval  String @id(map: "pkcmval") @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  keycmvat  String @db.Char(15)
  value     Float  @default(0, map: "DF__cmval__value__4C2A2925") @db.Money
  timestamp String @db.Char(10)

  @@unique([keycmvat, keycode], map: "akcmval1")
  @@index([keycmvat], map: "fkcmvalcmvat")
  @@index([keycode], map: "fkcmvalcode")
  @@index([keydbtbl], map: "fkcmvaldbtbl")
}

model cmvap {
  keycmvap  String @id(map: "pkcmvap") @db.Char(15)
  keycmvat  String @db.Char(15)
  keycmtyp  String @db.Char(15)
  timestamp String @db.Char(10)
  cmtyp     cmtyp  @relation(fields: [keycmtyp], references: [keycmtyp], onDelete: Cascade, map: "fkcmvapkeycmtyp")
  cmvat     cmvat  @relation(fields: [keycmvat], references: [keycmvat], onDelete: Cascade, map: "fkcmvapkeycmvat")

  @@unique([keycmvat, keycmtyp], map: "akcmvapcmvatcmtyp")
  @@index([keycmtyp], map: "fkcmvapcmtyp")
  @@index([keycmvat], map: "fkcmvapcmvat")
}

model cmvat {
  keycmvat                     String  @id(map: "pkcmvat") @db.Char(15)
  keycmuni                     String? @db.Char(15)
  caption                      String  @db.VarChar(30)
  inputmask                    String? @db.VarChar(30)
  locked                       Int     @default(0, map: "DF__cmvat__locked__208F4951") @db.TinyInt
  repabkod                     Int     @default(0, map: "DF__cmvat__repabkod__21836D8A") @db.TinyInt
  timestamp                    String  @db.Char(10)
  amvsg                        amvsg[]
  amyoc                        amyoc[]
  avark                        avark[]
  babyv                        babyv[]
  badlr_badlr_keycmvatTocmvat  badlr[] @relation("badlr_keycmvatTocmvat")
  badlr_badlr_keycmvat2Tocmvat badlr[] @relation("badlr_keycmvat2Tocmvat")
  brdkr                        brdkr[]
  cmart_cmart_keycmvatTocmvat  cmart[] @relation("cmart_keycmvatTocmvat")
  cmart_cmart_keycmvat2Tocmvat cmart[] @relation("cmart_keycmvat2Tocmvat")
  cmvac                        cmvac[]
  cmvap                        cmvap[]
  hyinf_hyinf_keycmvatTocmvat  hyinf[] @relation("hyinf_keycmvatTocmvat")
  hyinf_hyinf_keycmvat2Tocmvat hyinf[] @relation("hyinf_keycmvat2Tocmvat")
  hyinf_hyinf_keycmvat3Tocmvat hyinf[] @relation("hyinf_keycmvat3Tocmvat")
  hyinf_hyinf_keycmvat4Tocmvat hyinf[] @relation("hyinf_keycmvat4Tocmvat")
  ikbrk                        ikbrk[]
  ikund                        ikund[]
  pdddk_pdddk_keycmvatTocmvat  pdddk[] @relation("pdddk_keycmvatTocmvat")
  pdddk_pdddk_keycmvat2Tocmvat pdddk[] @relation("pdddk_keycmvat2Tocmvat")
  pdddk_pdddk_keycmvat3Tocmvat pdddk[] @relation("pdddk_keycmvat3Tocmvat")
  pdddk_pdddk_keycmvat4Tocmvat pdddk[] @relation("pdddk_keycmvat4Tocmvat")
  puatg_puatg_keycmvatTocmvat  puatg[] @relation("puatg_keycmvatTocmvat")
  puatg_puatg_keycmvat2Tocmvat puatg[] @relation("puatg_keycmvat2Tocmvat")
  puund                        puund[]
  puuns                        puuns[]
  skkal                        skkal[]
  skkav                        skkav[]
  skpin                        skpin[]
  skund                        skund[]
  skunk                        skunk[]
  stund                        stund[]
  ubmec                        ubmec[]

  @@index([keycmuni], map: "fkcmvatcmuni")
  @@index([caption], map: "incmvat1")
}

model cmwoc {
  keycmwoc  String @id(map: "pkcmwoc") @db.Char(15)
  keycmwol  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmctc], map: "fkcmwoccmctc")
  @@index([keycmwol], map: "fkcmwoccmwol")
}

model cmwol {
  keycmwol  String @id(map: "pkcmwol") @db.Char(15)
  caption   String @db.VarChar(100)
  timestamp String @db.Char(10)
}

model cmwor {
  keycmwor  String @id(map: "pkcmwor") @db.Char(15)
  keycmwol  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmobj], map: "fkcmworcmobj")
  @@index([keycmwol], map: "fkcmworcmwol")
}

model cmwrc {
  keycmwrc                     String @id(map: "pkcmwrc") @db.Char(15)
  keycmwro                     String @db.Char(15)
  keycmwro2                    String @db.Char(15)
  timestamp                    String @db.Char(10)
  cmwro_cmwrc_keycmwroTocmwro  cmwro  @relation("cmwrc_keycmwroTocmwro", fields: [keycmwro], references: [keycmwro], onUpdate: NoAction, map: "fkcmwrckeycmwro")
  cmwro_cmwrc_keycmwro2Tocmwro cmwro  @relation("cmwrc_keycmwro2Tocmwro", fields: [keycmwro2], references: [keycmwro], onUpdate: NoAction, map: "fkcmwrckeycmwro2")

  @@unique([keycmwro, keycmwro2], map: "akcmwrc")
  @@index([keycmwro], map: "fkcmwrccmwro")
  @@index([keycmwro2], map: "fkcmwrccmwro2")
}

model cmwro {
  keycmwro                     String  @id(map: "pkcmwro") @db.Char(15)
  keysygrp                     String  @db.Char(15)
  caption                      String  @db.VarChar(100)
  publish                      Int     @default(0, map: "DF__cmwro__publish__66E54A73") @db.TinyInt
  ccasvat                      Int     @default(0, map: "DF__cmwro__ccasvat__67D96EAC") @db.TinyInt
  ccastage                     Int     @default(0, map: "DF__cmwro__ccastage__68CD92E5") @db.TinyInt
  timestamp                    String  @db.Char(10)
  cmwrc_cmwrc_keycmwroTocmwro  cmwrc[] @relation("cmwrc_keycmwroTocmwro")
  cmwrc_cmwrc_keycmwro2Tocmwro cmwrc[] @relation("cmwrc_keycmwro2Tocmwro")
  hywre                        hywre[]

  @@unique([keysygrp, caption], map: "akcmwro1")
  @@index([keysygrp], map: "fkcmwrosygrp")
}

model cmxxk {
  keycmxxk  String  @id(map: "pkcmxxk") @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keycode2  String  @db.Char(15)
  keycode3  String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keycode], map: "fkcmxxkcode")
  @@index([keycode2], map: "fkcmxxkcode2")
  @@index([keycode3], map: "fkcmxxkcode3")
  @@index([keydbtbl], map: "fkcmxxkdbtbl")
}

model cmxxx {
  keycmxxx  String    @id(map: "pkcmxxx") @db.Char(15)
  keydbtbl  String    @db.Char(15)
  keycode   String    @db.Char(15)
  varchar1  String?   @db.VarChar(200)
  varchar2  String?   @db.VarChar(200)
  varchar3  String?   @db.VarChar(200)
  datetime1 DateTime? @db.DateTime
  datetime2 DateTime? @db.DateTime
  datetime3 DateTime? @db.DateTime
  int1      Int?
  int2      Int?
  int3      Int?
  money1    Float?    @db.Money
  money2    Float?    @db.Money
  money3    Float?    @db.Money
  timestamp String    @db.Char(10)

  @@index([keydbtbl, keycode], map: "incmxxx_3B50LV3J5")
}

model cmxxz {
  keycmxxz  String    @id(map: "pkcmxxz") @db.Char(15)
  keydbtbl  String    @db.Char(15)
  keycode   String    @db.Char(15)
  varchar1  String?   @db.VarChar(500)
  varchar2  String?   @db.VarChar(500)
  varchar3  String?   @db.VarChar(500)
  datetime1 DateTime? @db.DateTime
  datetime2 DateTime? @db.DateTime
  datetime3 DateTime? @db.DateTime
  int1      Int?
  int2      Int?
  int3      Int?
  money1    Float?    @db.Money
  money2    Float?    @db.Money
  money3    Float?    @db.Money
  timestamp String    @db.Char(10)

  @@index([keydbtbl, keycode], map: "incmxxz_3GT1B53RZ")
}

model cmxzz {
  keycmxzz  String    @id(map: "pkcmxzz") @db.Char(15)
  keydbtbl  String    @db.Char(15)
  keycode   String    @db.Char(15)
  varchar1  String?   @db.VarChar(500)
  varchar2  String?   @db.VarChar(500)
  varchar3  String?   @db.VarChar(500)
  varchar4  String?   @db.VarChar(1000)
  varchar5  String?   @db.VarChar(1000)
  varchar6  String?   @db.VarChar(Max)
  datetime1 DateTime? @db.DateTime
  datetime2 DateTime? @db.DateTime
  datetime3 DateTime? @db.DateTime
  int1      Int?
  int2      Int?
  int3      Int?
  int4      Int?
  int5      Int?
  money1    Float?    @db.Money
  money2    Float?    @db.Money
  money3    Float?    @db.Money
  money4    Float?    @db.Money
  timestamp String    @db.Char(10)
}

model crcat {
  keycrcat  String  @id(map: "pkcrcat") @db.Char(15)
  caption   String  @unique(map: "akcrcat1") @db.VarChar(60)
  timestamp String  @db.Char(10)
  crtsk     crtsk[]
}

model crcoa {
  keycrcoa  String @id(map: "pkcrcoa") @db.Char(15)
  keycrcom  String @db.Char(15)
  attfile   String @db.VarChar(Max)
  timestamp String @db.Char(10)
  crcom     crcom  @relation(fields: [keycrcom], references: [keycrcom], onDelete: Cascade, onUpdate: NoAction, map: "fkcrcoakeycrcom")

  @@index([keycrcom], map: "fkcrcoacrcom")
}

model crcoc {
  keycrcoc  String @id(map: "pkcrcoc") @db.Char(15)
  keycrcom  String @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycrcom], map: "fkcrcoccrcom")
}

model crcom {
  keycrcom  String   @id(map: "pkcrcom") @db.Char(15)
  keycmctc  String?  @db.Char(15)
  msgid     String?  @db.VarChar(100)
  fromadr   String   @db.VarChar(200)
  toadr     String   @db.VarChar(4000)
  ccadr     String?  @db.VarChar(4000)
  comsub    String   @db.VarChar(1000)
  commessa  String   @db.VarChar(Max)
  conalias  String?  @db.VarChar(100)
  logtime   DateTime @db.DateTime
  messtype  Int      @default(0, map: "DF__crcom__messtype__0F0C0C4C") @db.TinyInt
  rstatus   Int      @default(0, map: "DF__crcom__rstatus__10003085") @db.TinyInt
  hstatus   Int      @default(0, map: "DF__crcom__hstatus__10F454BE") @db.TinyInt
  wstatus   Int      @default(0, map: "DF__crcom__wstatus__11E878F7") @db.TinyInt
  pubstatus Int      @default(1, map: "DF__crcom__pubstatus__12DC9D30") @db.TinyInt
  isfeedbk  Int      @default(1, map: "DF__crcom__isfeedbk__13D0C169") @db.TinyInt
  timestamp String   @db.Char(10)
  crcoa     crcoa[]
  cmctc     cmctc?   @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcrcomkeycmctc")
  crnoc     crnoc[]

  @@index([msgid], map: "crcommsgid")
  @@index([keycmctc], map: "fkcrcomcmctc")
}

model crnca {
  keycrnca  String  @id(map: "pkcrnca") @db.Char(15)
  caption   String  @unique(map: "akcrnca") @db.VarChar(60)
  timestamp String  @db.Char(10)
  crnot     crnot[]
}

model crnoa {
  keycrnoa  String  @id(map: "pkcrnoa") @db.Char(15)
  keycrnot  String  @db.Char(15)
  keycrnol  String? @db.Char(15)
  filename  String  @db.VarChar(150)
  filedata  Bytes
  kind      Int     @default(0, map: "DF__crnoa__kind__199EA958") @db.TinyInt
  timestamp String  @db.Char(10)
  crnol     crnol?  @relation(fields: [keycrnol], references: [keycrnol], onDelete: Cascade, onUpdate: NoAction, map: "fkcrnoakeycrnol")
  crnot     crnot   @relation(fields: [keycrnot], references: [keycrnot], onUpdate: NoAction, map: "fkcrnoakeycrnot")

  @@index([keycrnol], map: "fkcrnoacrnol")
  @@index([keycrnot], map: "fkcrnoacrnot")
}

model crnoc {
  keycrnoc  String    @id(map: "pkcrnoc") @db.Char(15)
  keycrnot  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  keysyque  String?   @db.Char(15)
  keycmlog  String?   @db.Char(15)
  keycrcom  String?   @db.Char(15)
  address   String    @db.VarChar(250)
  mkind     Int       @default(0, map: "DF__crnoc__mkind__70F8925E") @db.TinyInt
  mstatus   Int       @default(0, map: "DF__crnoc__mstatus__71ECB697") @db.TinyInt
  stime     DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkcrnockeycmctc")
  cmlog     cmlog?    @relation(fields: [keycmlog], references: [keycmlog], onUpdate: NoAction, map: "fkcrnockeycmlog ")
  crcom     crcom?    @relation(fields: [keycrcom], references: [keycrcom], onDelete: NoAction, onUpdate: NoAction, map: "fkcrnockeycrcom")
  crnot     crnot     @relation(fields: [keycrnot], references: [keycrnot], onDelete: Cascade, onUpdate: NoAction, map: "fkcrnockeycrnot")

  @@unique([keycrnot, keycmctc, address, mkind], map: "akcrnoc")
}

model crnol {
  keycrnol   String  @id(map: "pkcrnol") @db.Char(15)
  keycrnot   String  @db.Char(15)
  keysylng   String  @db.Char(15)
  header     String  @db.VarChar(400)
  gentext    String  @db.VarChar(Max)
  mailheader String? @db.VarChar(400)
  mailtext   String  @db.VarChar(Max)
  smstext    String  @db.VarChar(Max)
  areaheader String  @db.VarChar(400)
  areatext   String  @db.VarChar(Max)
  webheader  String? @db.VarChar(400)
  webtext    String  @db.VarChar(Max)
  timestamp  String  @db.Char(10)
  crnoa      crnoa[]
  crnot      crnot   @relation(fields: [keycrnot], references: [keycrnot], onUpdate: NoAction, map: "fkcrnolkeycrnot")

  @@unique([keycrnot, keysylng], map: "akcrnol")
}

model crnoo {
  keycrnoo  String @id(map: "pkcrnoo") @db.Char(15)
  keycrnot  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkcrnookeycmobj ")
  crnot     crnot  @relation(fields: [keycrnot], references: [keycrnot], onDelete: Cascade, onUpdate: NoAction, map: "fkcrnookeycrnot")

  @@unique([keycmobj, keycrnot], map: "akcrnoo")
}

model crnot {
  keycrnot   String    @id(map: "pkcrnot") @db.Char(15)
  keycrnca   String?   @db.Char(15)
  code       String    @unique(map: "akcrnot") @db.VarChar(15)
  caption    String    @db.VarChar(90)
  header     String    @db.VarChar(400)
  crstatus   Int       @default(0, map: "DF__crnot__crstatus__0A5C65C8") @db.TinyInt
  gentext    String    @db.VarChar(Max)
  mailheader String?   @db.VarChar(400)
  mailtext   String    @db.VarChar(Max)
  mailstatus Int       @default(0, map: "DF__crnot__mailstatu__0B508A01") @db.TinyInt
  smstext    String    @db.VarChar(Max)
  smsstatus  Int       @default(0, map: "DF__crnot__smsstatus__0C44AE3A") @db.TinyInt
  areaheader String    @db.VarChar(400)
  areatext   String    @db.VarChar(Max)
  areastatus Int       @default(0, map: "DF__crnot__areastatu__0D38D273") @db.TinyInt
  webheader  String?   @db.VarChar(400)
  webtext    String    @db.VarChar(Max)
  webstatus  Int       @default(0, map: "DF__crnot__webstatus__0E2CF6AC") @db.TinyInt
  senderadr  String?   @db.VarChar(250)
  sendertype Int       @default(0, map: "DF__crnot__sendertyp__0F211AE5") @db.TinyInt
  plsendtime DateTime? @db.DateTime
  pubfdate   DateTime? @db.DateTime
  pubtdate   DateTime? @db.DateTime
  usagekind  Int       @default(0, map: "DF__crnot__usagekind__10153F1E") @db.TinyInt
  istemplate Int       @default(0, map: "DF__crnot__istemplat__11096357") @db.TinyInt
  timestamp  String    @db.Char(10)
  crnoa      crnoa[]
  crnoc      crnoc[]
  crnol      crnol[]
  crnoo      crnoo[]
  crnca      crnca?    @relation(fields: [keycrnca], references: [keycrnca], onDelete: NoAction, onUpdate: NoAction, map: "fkcrnotkeycrnca")
  femsg      femsg[]

  @@index([keycrnca], map: "fkcrnotcrnca")
}

model crotv {
  keycrotv  String @id(map: "pkcrotv") @db.Char(15)
  objtype   Int    @unique(map: "akcrotv1") @default(0, map: "DF__crotv__objtype__69008A87") @db.TinyInt
  objalias  String @unique(map: "akcrotv2") @db.VarChar(20)
  timestamp String @db.Char(10)
}

model crtsk {
  keycrtsk                     String    @id(map: "pkcrtsk") @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycrcat                     String?   @db.Char(15)
  keyprprj                     String?   @db.Char(15)
  descript                     String?   @db.VarChar(Max)
  status                       Int       @default(0, map: "DF__crtsk__status__7180C1EF") @db.TinyInt
  startdate                    DateTime? @db.Date
  starttime                    DateTime? @db.Time
  enddate                      DateTime? @db.Date
  endtime                      DateTime? @db.Time
  timestamp                    String    @db.Char(10)
  cmctc_crtsk_keycmctcTocmctc  cmctc?    @relation("crtsk_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkcrtskkeycmctc")
  cmctc_crtsk_keycmctc2Tocmctc cmctc?    @relation("crtsk_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkcrtskkeycmctc2")
  crcat                        crcat?    @relation(fields: [keycrcat], references: [keycrcat], onUpdate: NoAction, map: "fkcrtskkeycrcat ")
  prprj                        prprj?    @relation(fields: [keyprprj], references: [keyprprj], onUpdate: NoAction, map: "fkcrtskkeyprprj")

  @@index([keycmctc], map: "fkcrtskcmctc")
  @@index([keycmctc2], map: "fkcrtskcmctc2")
  @@index([keycrcat], map: "fkcrtskcrcat")
  @@index([keyprprj], map: "fkcrtskprprj")
}

model cruml {
  keycruml   String @id(map: "pkcruml") @db.Char(15)
  keycrumt   String @db.Char(15)
  keysylng   String @db.Char(15)
  umtsubj    String @db.VarChar(1000)
  umtattach  String @db.VarChar(1000)
  umtcontent String @db.VarChar(Max)
  timestamp  String @db.Char(10)
  crumt      crumt  @relation(fields: [keycrumt], references: [keycrumt], onDelete: Cascade, onUpdate: NoAction, map: "fkcrumlkeycrumt")

  @@unique([keycrumt, keysylng], map: "akcruml")
}

model crumt {
  keycrumt   String   @id(map: "pkcrumt") @db.Char(15)
  caption    String   @unique(map: "akcrumt") @db.VarChar(80)
  umtdescr   String   @db.VarChar(250)
  umtsubj    String?  @db.VarChar(1000)
  umtattach  String?  @db.VarChar(1000)
  umtcontent String?  @db.VarChar(Max)
  umtkind    Int      @default(0, map: "DF__crumt__umtkind__756148E2") @db.TinyInt
  umtusage   Int      @default(0, map: "DF__crumt__umtusage__76556D1B") @db.TinyInt
  umtsign    String   @db.VarChar(80)
  senderaddr String?  @db.VarChar(100)
  creatime   DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  aocrd      aocrd[]
  aokco      aokco[]
  bkmtc      bkmtc[]
  cruml      cruml[]
}

model doacc {
  keydoacc  String @id(map: "pkdoacc") @db.Char(15)
  keydorev  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keydorev, keysygrp], map: "akdoacc1")
  @@index([keydorev], map: "fkdoaccdorev")
  @@index([keysygrp], map: "fkdoaccsygrp")
}

model doact {
  keydoact  String @id(map: "pkdoact") @db.Char(15)
  keydotyp  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keydotyp, keysygrp], map: "akdoact")
  @@index([keydotyp], map: "fkdoactdotyp")
  @@index([keysygrp], map: "fkdoactsygrp")
}

model dodse {
  keydodse   String    @id(map: "pkdodse") @db.Char(15)
  keydorev   String    @db.Char(15)
  keysyusr   String    @db.Char(15)
  createdate DateTime  @db.DateTime
  senddate   DateTime? @db.DateTime
  validto    DateTime? @db.DateTime
  canceldate DateTime? @db.DateTime
  exdocid    String?   @db.VarChar(100)
  timestamp  String    @db.Char(10)
  dorev      dorev     @relation(fields: [keydorev], references: [keydorev], onDelete: Cascade, onUpdate: NoAction, map: "fkdodsekeydorev ")
  dodss      dodss[]

  @@index([keydorev], map: "ix_dodsekeydorev")
  @@index([keysyusr], map: "ix_dodsekeysyusr")
  @@index([validto], map: "ix_dodsevalidto")
}

model dodss {
  keydodss   String    @id(map: "pkdodss") @db.Char(15)
  keydodse   String    @db.Char(15)
  keycmctc   String?   @db.Char(15)
  signorder  Int       @default(0, map: "DF__dodss__signorder__4D093EC5")
  name       String    @db.VarChar(100)
  company    String?   @db.VarChar(50)
  email      String?   @db.VarChar(80)
  phone      String?   @db.VarChar(30)
  civicno    String?   @db.VarChar(15)
  signdate   DateTime? @db.DateTime
  rejectdate DateTime? @db.DateTime
  deliverymd Int       @db.TinyInt
  authsign   Int       @db.TinyInt
  authview   Int       @db.TinyInt
  timestamp  String    @db.Char(10)
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkdodsskeycmctc")
  dodse      dodse     @relation(fields: [keydodse], references: [keydodse], onUpdate: NoAction, map: "fkdodsskeydodse")

  @@index([keydodse], map: "ix_akdodsskeydodse")
  @@index([keycmctc], map: "ix_dodsskeycmctc")
}

model doers {
  keydoers                     String    @id(map: "pkdoers") @db.Char(15)
  keydorev                     String    @db.Char(15)
  keydorev2                    String    @db.Char(15)
  fdate                        DateTime? @db.Date
  tdate                        DateTime? @db.Date
  timestamp                    String    @db.Char(10)
  dorev_doers_keydorevTodorev  dorev     @relation("doers_keydorevTodorev", fields: [keydorev], references: [keydorev], onUpdate: NoAction, map: "fkdoerskeydorev")
  dorev_doers_keydorev2Todorev dorev     @relation("doers_keydorev2Todorev", fields: [keydorev2], references: [keydorev], onUpdate: NoAction, map: "fkdoerskeydorev2")

  @@index([keydorev], map: "fkdoersdorev")
  @@index([keydorev2], map: "fkdoersdorev2")
}

model dofil {
  keydofil  String @id(map: "PK__dofil__272FB2E8") @db.Char(15)
  keydorev  String @db.Char(15)
  filtype   Int    @db.TinyInt
  fildata   String @db.Text
  timestamp String @db.Char(10)

  @@index([keydorev], map: "fkdofildorev")
}

model dofle {
  keydofle  String @id(map: "pkdofle") @db.Char(15)
  keydorev  String @db.Char(15)
  filtype   Int    @default(1, map: "DF__dofle__filtype__34DC066E") @db.TinyInt
  filedata  Bytes
  timestamp String @db.Char(10)
  dorev     dorev  @relation(fields: [keydorev], references: [keydorev], onDelete: Cascade, onUpdate: NoAction, map: "fkdoflekeydorev ")

  @@index([keydorev], map: "fkdofledorev")
}

model doftp {
  keydoftp  String  @id(map: "pkdoftp") @db.Char(15)
  filtyp    String  @db.VarChar(30)
  extension String? @db.Char(4)
  timestamp String  @db.Char(10)
  dorev     dorev[]
}

model dokop {
  keydokop  String  @id(map: "pkdokop") @db.Char(15)
  keydorev  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keycode2  String? @db.Char(15)
  contype   Int     @default(0, map: "DF__dokop__contype__5CAA00A6") @db.TinyInt
  publish   Int     @default(0, map: "DF__dokop__publish__5D9E24DF") @db.TinyInt
  sortorder Int     @default(0, map: "DF__dokop__sortorder__5E924918")
  labeling  String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  dorev     dorev   @relation(fields: [keydorev], references: [keydorev], onDelete: Cascade, map: "fkdokopkeydorev")

  @@unique([keydorev, keycode, contype], map: "akdokop")
  @@index([keycode], map: "fkdokopcode")
  @@index([keycode2], map: "fkdokopcode2")
  @@index([keydorev], map: "fkdokopdorev")
}

model domap {
  keydomap  String  @id(map: "pkdomap") @db.Char(15)
  keycmtyp  String  @db.Char(15)
  keydomap2 String? @db.Char(15)
  code      String  @db.VarChar(30)
  caption   String  @db.VarChar(30)
  note      String  @db.VarChar(30)
  timestamp String  @db.Char(10)

  @@index([keycmtyp], map: "fkdomapcmtyp")
  @@index([keydomap2], map: "fkdomapdomap2")
}

model dorev {
  keydorev                     String    @id(map: "pkdorev") @db.Char(15)
  keydoftp                     String?   @db.Char(15)
  keydotyp                     String?   @db.Char(15)
  keydosty                     String?   @db.Char(15)
  keycmtyp                     String?   @db.Char(15)
  keycmtyp2                    String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  skapsign                     String?   @db.VarChar(80)
  skapdat                      DateTime? @db.Date
  dok                          String    @db.VarChar(30)
  rev                          String    @db.VarChar(30)
  revid                        String?   @db.VarChar(30)
  regdat                       DateTime? @db.Date
  regsign                      String?   @db.VarChar(80)
  revbes                       String?   @db.VarChar(70)
  revben                       String?   @db.VarChar(70)
  revdat                       DateTime? @db.Date
  revsign                      String?   @db.VarChar(80)
  recidate                     DateTime? @db.Date
  retudate                     DateTime? @db.Date
  fdate                        DateTime? @db.Date
  tdate                        DateTime? @db.Date
  calibrate                    String?   @db.VarChar(30)
  multiplier                   Int
  divider                      Int
  path                         String?   @db.VarChar(Max)
  cdnr                         String?   @db.VarChar(30)
  datastored                   Int       @default(0, map: "DF__dorev__datastore__1FF5F821") @db.TinyInt
  orgutl                       Int       @default(0, map: "DF__dorev__orgutl__20EA1C5A") @db.TinyInt
  revers                       Int       @default(0, map: "DF__dorev__revers__21DE4093") @db.TinyInt
  layers                       String?   @db.VarChar(Max)
  grade                        Int       @default(0, map: "DF__dorev__grade__22D264CC") @db.TinyInt
  publiceras                   Int       @default(0, map: "DF__dorev__publicera__23C68905") @db.TinyInt
  timestamp                    String    @db.Char(10)
  bkdok                        bkdok[]
  dodse                        dodse[]
  doers_doers_keydorevTodorev  doers[]   @relation("doers_keydorevTodorev")
  doers_doers_keydorev2Todorev doers[]   @relation("doers_keydorev2Todorev")
  dofle                        dofle[]
  dokop                        dokop[]
  cmctc_dorev_keycmctcTocmctc  cmctc?    @relation("dorev_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkdorevkeycmctc")
  cmctc_dorev_keycmctc2Tocmctc cmctc?    @relation("dorev_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkdorevkeycmctc2")
  cmtyp_dorev_keycmtypTocmtyp  cmtyp?    @relation("dorev_keycmtypTocmtyp", fields: [keycmtyp], references: [keycmtyp], onDelete: NoAction, onUpdate: NoAction, map: "fkdorevkeycmtyp ")
  cmtyp_dorev_keycmtyp2Tocmtyp cmtyp?    @relation("dorev_keycmtyp2Tocmtyp", fields: [keycmtyp2], references: [keycmtyp], onDelete: NoAction, onUpdate: NoAction, map: "fkdorevkeycmtyp2 ")
  doftp                        doftp?    @relation(fields: [keydoftp], references: [keydoftp], onDelete: NoAction, onUpdate: NoAction, map: "fkdorevkeydoftp")
  dosty                        dosty?    @relation(fields: [keydosty], references: [keydosty], onUpdate: NoAction, map: "fkdorevkeydosty ")
  dotyp                        dotyp?    @relation(fields: [keydotyp], references: [keydotyp], onDelete: NoAction, onUpdate: NoAction, map: "fkdorevkeydotyp ")
  dorob                        dorob[]
  dosgn                        dosgn[]
  doutl                        doutl[]
  hydis                        hydis[]
  ubprd                        ubprd[]
  vwlay                        vwlay[]

  @@index([keycmctc], map: "fkdorevcmctc")
  @@index([keycmctc2], map: "fkdorevcmctc2")
  @@index([keycmtyp], map: "fkdorevcmtyp")
  @@index([keycmtyp2], map: "fkdorevcmtyp2")
  @@index([keydoftp], map: "fkdorevdoftp")
  @@index([keydosty], map: "fkdorevdosty")
  @@index([keydotyp], map: "fkdorevdotyp")
  @@index([dok, rev, keydorev], map: "indorev1")
}

model dorlx {
  keydorlx  String @id(map: "pkdorlx") @db.Char(15)
  keydorev  String @db.Char(15)
  filedata  String @db.Xml
  timestamp String @db.Char(10)

  @@index([keydorev], map: "fkdorlxdorev")
}

model dorob {
  keydorob  String @id(map: "pkdorob") @db.Char(15)
  keydorev  String @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  robid     Int
  timestamp String @db.Char(10)
  dorev     dorev  @relation(fields: [keydorev], references: [keydorev], onDelete: Cascade, onUpdate: NoAction, map: "fkdorobkeydorev ")

  @@index([keycode], map: "fkdorobcode")
  @@index([keydbtbl], map: "fkdorobdbtbl")
  @@index([keydorev], map: "fkdorobdorev")
}

model dosgn {
  keydosgn   String    @id(map: "pkdosgn") @db.Char(15)
  keydorev   String    @db.Char(15)
  keydosrr   String?   @db.Char(15)
  keycmctc   String?   @db.Char(15)
  signcreate DateTime? @db.Date
  signdate   DateTime? @db.Date
  signstatus Int       @default(0, map: "DF__dosgn__signstatu__4D656F92") @db.TinyInt
  signdue    DateTime? @db.Date
  signorder  Int       @default(1, map: "DF__dosgn__signorder__4E5993CB") @db.TinyInt
  timestamp  String    @db.Char(10)
  dosrr      dosrr?    @relation(fields: [keydosrr], references: [keydosrr], onUpdate: NoAction, map: "fkdosgndosrrkeydosrr ")
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkdosgnkeycmctc")
  dorev      dorev     @relation(fields: [keydorev], references: [keydorev], onDelete: Cascade, onUpdate: NoAction, map: "fkdosgnkeydorev ")

  @@unique([keydorev, signorder], map: "akdosgn")
  @@index([keycmctc], map: "fkdosgncmctc")
  @@index([keydosrr], map: "fkdosgndosrr")
}

model dosrr {
  keydosrr  String  @id(map: "pkdosrr") @db.Char(15)
  caption   String  @unique(map: "akdosrr") @db.VarChar(90)
  timestamp String  @db.Char(10)
  dosgn     dosgn[]
}

model dosty {
  keydosty  String  @id(map: "pkdosty") @db.Char(15)
  keydotyp  String  @db.Char(15)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  bkdok     bkdok[]
  bkdot     bkdot[]
  bsdef     bsdef[]
  dorev     dorev[]

  @@unique([keydotyp, caption], map: "akdosty1")
  @@index([keydotyp], map: "fkdostydotyp")
}

model dotyp {
  keydotyp  String  @id(map: "pkdotyp") @db.Char(15)
  keydorev  String? @db.Char(15)
  keycmtyp  String? @db.Char(15)
  caption   String  @unique(map: "akdotyp1") @db.VarChar(60)
  viewer    Int     @default(0, map: "DF__dotyp__viewer__3C007CA3") @db.TinyInt
  timestamp String  @db.Char(10)
  bkdok     bkdok[]
  bkdot     bkdot[]
  bsdef     bsdef[]
  dorev     dorev[]

  @@index([keycmtyp], map: "fkdotypcmtyp")
  @@index([keydorev], map: "fkdotypdorev")
}

model doutl {
  keydoutl   String    @id(map: "pkdoutl") @db.Char(15)
  keydorev   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keycmctc   String    @db.Char(15)
  keysyusr2  String?   @db.Char(15)
  utlav      String    @db.VarChar(80)
  referens   String?   @db.VarChar(40)
  utdatum    DateTime  @db.DateTime
  refnr      String?   @db.VarChar(30)
  kopia      Int       @db.TinyInt
  utltyp     Int       @db.TinyInt
  aterlamnas Int       @db.TinyInt
  insenast   DateTime? @db.DateTime
  atltill    String?   @db.VarChar(80)
  indatum    DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkdoutlkeycmctc")
  dorev      dorev     @relation(fields: [keydorev], references: [keydorev], onDelete: Cascade, onUpdate: NoAction, map: "fkdoutlkeydorev ")

  @@index([keycmctc], map: "fkdoutlcmctc")
  @@index([keydorev], map: "fkdoutldorev")
  @@index([keysyusr], map: "fkdoutlsyusr")
  @@index([keysyusr2], map: "fkdoutlsyusr2")
}

model drava {
  keydrava  String @id(map: "pkdrava") @db.Char(15)
  keydrmpt  String @db.Char(15)
  keydrmtv  String @db.Char(15)
  keydruni  String @db.Char(15)
  mtstype   Int    @default(0, map: "DF__drava__mtstype__7BFE5062") @db.TinyInt
  year      Int    @db.SmallInt
  period    Int    @db.TinyInt
  realvalue Float  @db.Money
  corrvalue Float  @db.Money
  levelreal Float  @default(0, map: "DF__drava__levelreal__7CF2749B") @db.Money
  levelcorr Float  @default(0, map: "DF__drava__levelcorr__7DE698D4") @db.Money
  timestamp String @db.Char(10)

  @@index([keydrmpt], map: "fkdravadrmpt")
  @@index([keydrmtv], map: "fkdravadrmtv")
  @@index([keydruni], map: "fkdravadruni")
}

model dravg {
  keydravg  String  @id(map: "PK__dravg__2CB38214") @db.Char(15)
  keycode   String? @db.Char(15)
  code      String  @db.Char(30)
  caption   String  @db.Char(60)
  type      Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycode], map: "fkdravgcode")
}

model dravk {
  keydravk  String @id(map: "PK__dravk__09FE775D") @db.Char(15)
  keydrmpt  String @db.Char(15)
  keydravg  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keydravg], map: "fkdravkdravg")
  @@index([keydrmpt], map: "fkdravkdrmpt")
}

model drbud {
  keydrbud  String @id(map: "PK__drbud__3C8AC281") @db.Char(15)
  keydrmpt  String @db.Char(15)
  keydruni  String @db.Char(15)
  year      Int    @db.SmallInt
  buforb    Float  @db.Money
  bufast    Float  @db.Money
  burorlig  Float  @db.Money
  timestamp String @db.Char(10)

  @@index([keydrmpt], map: "fkdrbuddrmpt")
  @@index([keydruni], map: "fkdrbuddruni")
}

model drbur {
  keydrbur  String @id(map: "PK__drbur__3E730AF3") @db.Char(15)
  keydrbud  String @db.Char(15)
  period    Int    @db.SmallInt
  pbuforb   Float  @db.Money
  pbufast   Float  @db.Money
  pburorlig Float  @db.Money
  timestamp String @db.Char(10)

  @@index([keydrbud], map: "fkdrburdrbud")
}

model drdea {
  keydrdea  String @id(map: "pkdrdea") @db.Char(15)
  keysymdl  String @db.Char(15)
  keydrtam  String @db.Char(15)
  keycmart  String @db.Char(15)
  costtype  Int    @default(1, map: "DF__drdea__costtype__42D1A46F") @db.TinyInt
  debiting  Int    @default(1, map: "DF__drdea__debiting__43C5C8A8") @db.TinyInt
  purpose   Int    @default(1, map: "DF__drdea__purpose__44B9ECE1") @db.TinyInt
  timestamp String @db.Char(10)

  @@unique([keysymdl, keydrtam, keycmart, costtype, debiting, purpose], map: "akdrdea1")
  @@index([keycmart], map: "fkdrdeacmart")
  @@index([keydrtam], map: "fkdrdeadrtam")
  @@index([keysymdl], map: "fkdrdeasymdl")
}

model drdeb {
  keydrdeb  String  @id(map: "PK__drdeb__563FA78C") @db.Char(15)
  keydrmpt  String? @db.Char(15)
  keycmobj  String? @db.Char(15)
  keydruni  String  @db.Char(15)
  year      Int     @db.SmallInt
  period    Int     @db.TinyInt
  debfast   Float?  @db.Money
  debrorlig Float?  @db.Money
  debforb   Float?  @db.Money
  timestamp String  @db.Char(10)

  @@index([keycmobj], map: "fkdrdebcmobj")
  @@index([keydrmpt], map: "fkdrdebdrmpt")
  @@index([keydruni], map: "fkdrdebdruni")
}

model drecc {
  keydrecc  String    @id(map: "pkdrecc") @db.Char(15)
  keydrecp  String    @db.Char(15)
  keycmcuh  String    @db.Char(15)
  costtype  Int       @default(0, map: "DF__drecc__costtype__5F7B8059") @db.TinyInt
  amount    Float     @db.Money
  vatprcnt  Decimal   @db.Decimal(13, 10)
  caption   String    @db.VarChar(100)
  invdate   DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmcuh     cmcuh     @relation(fields: [keycmcuh], references: [keycmcuh], onUpdate: NoAction, map: "fkdrecckeycmcuh ")
  drecp     drecp     @relation(fields: [keydrecp], references: [keydrecp], onUpdate: NoAction, map: "fkdrecckeydrecp ")

  @@index([keycmcuh], map: "fkdrecccmcuh")
  @@index([keydrecp], map: "fkdreccdrecp")
}

model dreco {
  keydreco   String  @id(map: "pkdreco") @db.Char(15)
  keydbtbl   String  @db.Char(15)
  keycmobj   String  @db.Char(15)
  keycmart   String  @db.Char(15)
  keydrtar   String? @db.Char(15)
  operator   Int     @default(0, map: "DF__dreco__operator__56FB48F1") @db.TinyInt
  billtype   Int     @default(0, map: "DF__dreco__billtype__57EF6D2A") @db.TinyInt
  billmethod Int     @default(0, map: "DF__dreco__billmetho__58E39163") @db.TinyInt
  number     Int?    @default(0, map: "DF__dreco__number__59D7B59C") @db.TinyInt
  tenatdoc   Int     @default(0, map: "DF__dreco__tenatdoc__5ACBD9D5") @db.TinyInt
  propdoc    Int     @default(0, map: "DF__dreco__propdoc__5BBFFE0E") @db.TinyInt
  caption    String? @db.VarChar(200)
  timestamp  String  @db.Char(10)
  cmart      cmart   @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkdrecokeycmart")
  cmobj      cmobj   @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkdrecokeycmobj")
  drtar      drtar?  @relation(fields: [keydrtar], references: [keydrtar], onDelete: NoAction, onUpdate: NoAction, map: "fkdrecokeydrtar ")
  drecp      drecp[]

  @@index([keycmart], map: "fkdrecocmart")
  @@index([keycmobj], map: "fkdrecocmobj")
  @@index([keydrtar], map: "fkdrecodrtar")
}

model drecp {
  keydrecp  String   @id(map: "pkdrecp") @db.Char(15)
  keydreco  String   @db.Char(15)
  updated   DateTime @db.DateTime
  fromdate  DateTime @db.DateTime
  todate    DateTime @db.DateTime
  status    Int      @default(0, map: "DF__drecp__status__0457FF4D") @db.TinyInt
  budget    Int      @default(0, map: "DF__drecp__budget__054C2386") @db.TinyInt
  costs     Int      @default(0, map: "DF__drecp__costs__064047BF") @db.TinyInt
  comment   String   @db.VarChar(100)
  timestamp String   @db.Char(10)
  drecc     drecc[]
  dreco     dreco    @relation(fields: [keydreco], references: [keydreco], onUpdate: NoAction, map: "fkdrecpkeydreco ")

  @@index([keydreco], map: "fkdrecpdreco")
}

model drfil {
  keydrfil  String   @id(map: "PK__drfil__405B5365") @db.Char(15)
  keydrmtv  String   @db.Char(15)
  filvalue  Float    @db.Money
  fildate   DateTime @db.DateTime
  filafter  Int      @db.TinyInt
  timestamp String   @db.Char(10)

  @@index([keydrmtv], map: "fkdrfildrmtv")
}

model drfor {
  keydrfor   String @id(map: "PK__drfor__0DCF0841") @db.Char(15)
  keydrmhf   String @db.Char(15)
  keycmobj   String @db.Char(15)
  forarea    Float  @db.Money
  forpercent Float  @db.Money
  timestamp  String @db.Char(10)

  @@index([keycmobj], map: "fkdrforcmobj")
  @@index([keydrmhf], map: "fkdrfordrmhf")
}

model drgrd {
  keydrgrd   String @id(map: "PK__drgrd__2CE88C3E") @db.Char(15)
  keydrort   String @db.Char(15)
  year       Int    @db.SmallInt
  period     Int    @db.TinyInt
  grdnormal  Int    @db.SmallInt
  grdreal    Int?   @db.SmallInt
  grdenergy1 Int    @db.SmallInt
  grdenergy2 Int    @db.SmallInt
  grdenergy3 Int    @db.SmallInt
  grdenergy4 Int    @db.SmallInt
  grdenergy5 Int    @db.SmallInt
  grdenergy6 Int    @db.SmallInt
  grdenergy7 Int    @db.SmallInt
  grdenergy8 Int    @db.SmallInt
  grdenergy9 Int    @db.SmallInt
  timestamp  String @db.Char(10)

  @@index([keydrort], map: "fkdrgrddrort")
}

model drind {
  keydrind  String @id(map: "pkdrind") @db.Char(15)
  keydrort  String @db.Char(15)
  type      Int    @db.TinyInt
  year      Int?   @db.SmallInt
  period    Int    @db.TinyInt
  indexnorm Int    @default(0, map: "DF__drind__indexnorm__12B89E07") @db.SmallInt
  indexreal Int?   @db.SmallInt
  timestamp String @db.Char(10)

  @@index([keydrort], map: "fkdrinddrort")
}

model drmet {
  keydrmet  String    @id(map: "PK__drmet__0FB750B3") @db.Char(15)
  keydrmpt  String    @db.Char(15)
  keydrtar  String    @db.Char(15)
  keydrtar2 String?   @db.Char(15)
  code      String    @db.Char(30)
  caption   String    @db.Char(30)
  metabonn  String    @db.Char(30)
  metabonn2 String?   @db.Char(30)
  metgen    Int       @db.TinyInt
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keydrmpt], map: "fkdrmetdrmpt")
  @@index([keydrtar], map: "fkdrmetdrtar")
  @@index([keydrtar2], map: "fkdrmetdrtar2")
}

model drmfc {
  keydrmfc  String    @id(map: "pkdrmfc") @db.Char(15)
  keydrtam  String    @db.Char(15)
  keycmuni  String?   @db.Char(15)
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  prel      Int       @default(0, map: "DF__drmfc__prel__1E15210C") @db.TinyInt
  emission  Decimal?  @db.Decimal(7, 2)
  timestamp String    @db.Char(10)

  @@index([keycmuni], map: "fkdrmfccmuni")
  @@index([keydrtam], map: "fkdrmfcdrtam")
}

model drmhf {
  keydrmhf  String    @id(map: "PK__drmhf__119F9925") @db.Char(15)
  keydrmpt  String    @db.Char(15)
  mhfspread Int       @db.TinyInt
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keydrmpt], map: "fkdrmhfdrmpt")
}

model drmhv {
  keydrmhv  String @id(map: "PK__drmhv__1293BD5E") @db.Char(15)
  keydrmet  String @db.Char(15)
  mhvval1   Float? @db.Money
  mhvval2   Float? @db.Money
  mhvval3   Float? @db.Money
  mhvval4   Float? @db.Money
  mhvval5   Float? @db.Money
  timestamp String @db.Char(10)

  @@index([keydrmet], map: "fkdrmhvdrmet")
}

model drmpt {
  keydrmpt   String  @id(map: "pkdrmpt") @db.Char(15)
  keycmobj   String  @db.Char(15)
  keycmctc   String? @db.Char(15)
  keydrmts   String  @db.Char(15)
  keydrort   String? @db.Char(15)
  keydromr   String? @db.Char(15)
  mtstype    Int     @default(0, map: "DF__drmpt__mtstype__10EDDE65") @db.TinyInt
  indextype  Int     @default(1, map: "DF__drmpt__indextype__11E2029E") @db.TinyInt
  code       String  @db.Char(30)
  caption    String  @db.Char(50)
  mptplace   String? @db.Char(100)
  mptexport  Int     @db.TinyInt
  mptactive  Int     @db.TinyInt
  mptclimate Int
  mptclmtype Int     @db.TinyInt
  mpteancode String  @db.Char(30)
  mptgmethod Int?    @db.TinyInt
  mptvvp     Int     @db.TinyInt
  mptanlid   String? @db.Char(25)
  debiting   Int     @default(0, map: "DF__drmpt__debiting__12D626D7") @db.TinyInt
  readinterv Int     @default(1, map: "DF__drmpt__readinter__13CA4B10") @db.TinyInt
  operator   Int     @default(0, map: "DF__drmpt__operator__14BE6F49") @db.TinyInt
  refyear    Int?    @db.SmallInt
  timestamp  String  @db.Char(10)
  cmctc      cmctc?  @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkdrmptkeycmctc")
  cmobj      cmobj   @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkdrmptkeycmobj")
  drmts      drmts   @relation(fields: [keydrmts], references: [keydrmts], onUpdate: NoAction, map: "fkdrmptkeydrmts ")
  dromr      dromr?  @relation(fields: [keydromr], references: [keydromr], onDelete: Cascade, onUpdate: NoAction, map: "fkdrmptkeydromr ")
  drort      drort?  @relation(fields: [keydrort], references: [keydrort], onDelete: NoAction, onUpdate: NoAction, map: "fkdrmptkeydrort ")

  @@index([keycmctc], map: "fkdrmptcmctc")
  @@index([keycmobj], map: "fkdrmptcmobj")
  @@index([keydrmts], map: "fkdrmptdrmts")
  @@index([keydromr], map: "fkdrmptdromr")
  @@index([keydrort], map: "fkdrmptdrort")
  @@index([debiting, keydrmpt, mptactive, code], map: "indrmpt_3500QDJHG")
}

model drmts {
  keydrmts   String  @id(map: "PK__drmts__13FDAE3A") @db.Char(15)
  keydruni   String  @db.Char(15)
  keydruni2  String  @db.Char(15)
  caption    String  @db.Char(30)
  mtsclimate Int     @db.TinyInt
  mtsnetfee  Int     @db.TinyInt
  mtsrefill  Int     @db.TinyInt
  sysrec     Int     @db.TinyInt
  timestamp  String  @db.Char(10)
  aoupp      aoupp[]
  drmpt      drmpt[]

  @@index([keydruni], map: "fkdrmtsdruni")
  @@index([keydruni2], map: "fkdrmtsdruni2")
}

model drmtv {
  keydrmtv   String @id(map: "PK__drmtv__16644E42") @db.Char(15)
  keydruni   String @db.Char(15)
  keydrmet   String @db.Char(15)
  keydrtam   String @db.Char(15)
  caption    String @db.Char(30)
  mtvvaltype Int    @db.TinyInt
  mtvorder   Int
  mtvconst   Int
  mtvdigit   Int    @db.TinyInt
  mtvdec     Int    @db.TinyInt
  mtvunknown Int    @db.TinyInt
  mtverror   Float  @db.Money
  timestamp  String @db.Char(10)

  @@index([keydrmet], map: "fkdrmtvdrmet")
  @@index([keydrtam], map: "fkdrmtvdrtam")
  @@index([keydruni], map: "fkdrmtvdruni")
}

model dromr {
  keydromr  String  @id(map: "PK__dromr__69DC8BE5") @db.Char(15)
  code      String  @db.Char(3)
  caption   String  @db.Char(30)
  timestamp String  @db.Char(10)
  drmpt     drmpt[]
}

model drort {
  keydrort  String  @id(map: "pkdrort") @db.Char(15)
  code      String  @db.Char(5)
  caption   String  @db.Char(30)
  type      Int     @default(1, map: "DF__drort__type__15950AB2") @db.TinyInt
  ortactive Int     @db.TinyInt
  ortdut    Int     @db.SmallInt
  sysrec    Int     @db.TinyInt
  timestamp String  @db.Char(10)
  drmpt     drmpt[]
}

model drouk {
  keydrouk  String @id(map: "PK__drouk__5B045CA9") @db.Char(15)
  keydrmpt  String @db.Char(15)
  keydrmpt2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keydrmpt], map: "fkdroukdrmpt")
  @@index([keydrmpt2], map: "fkdroukdrmpt2")
}

model drque {
  keydrque  String    @id(map: "pkdrque") @db.Char(15)
  keydbtbl  String?   @db.Char(15)
  keycode   String?   @db.Char(15)
  questatus Int       @default(0, map: "DF__drque__questatus__523191DD") @db.TinyInt
  quetype   Int       @default(0, map: "DF__drque__quetype__5325B616") @db.SmallInt
  scheduled DateTime? @db.DateTime
  requestid String?   @db.VarChar(60)
  request   String?   @db.VarChar(Max)
  timestamp String    @db.Char(10)

  @@index([keycode], map: "fkdrquecode")
  @@index([keydbtbl], map: "fkdrquedbtbl")
}

model drrek {
  keydrrek  String  @id(map: "PK__drrek__0F38F91D") @db.Char(15)
  keydrres  String? @db.Char(15)
  keydrmts  String? @db.Char(15)
  prio      Int     @default(1, map: "DF__drrek__prio__102D1D56") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keydrmts], map: "fkdrrekdrmts")
  @@index([keydrres], map: "fkdrrekdrres")
}

model drres {
  keydrres  String @id(map: "PK__drres__32A16594") @db.Char(15)
  keydruni  String @db.Char(15)
  keydruni2 String @db.Char(15)
  caption   String @db.Char(30)
  sysrec    Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keydruni], map: "fkdrresdruni")
  @@index([keydruni2], map: "fkdrresdruni2")
}

model drsol {
  keydrsol  String @id(map: "pkdrsol") @unique(map: "akdrsol1") @db.Char(15)
  keyhyrad  String @db.Char(15)
  keydrdea  String @db.Char(15)
  keykrfsl  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keydrdea], map: "fkdrsoldrdea")
  @@index([keyhyrad], map: "fkdrsolhyrad")
  @@index([keykrfsl], map: "fkdrsolkrfsl")
  @@index([keyhyrad, keydrdea, keykrfsl], map: "indrsol_2BM0TDU8X")
  @@index([keyhyrad, keydrdea, keykrfsl], map: "indrsol_3VU0TQZ43")
}

model drtaf {
  keydrtaf   String  @id(map: "PK__drtaf__1940BAED") @db.Char(15)
  keydrmfc   String  @db.Char(15)
  taftype    Int     @db.TinyInt
  tafformula String? @db.Text
  tafspec1   Float   @db.Money
  tafspec2   Float   @db.Money
  tafspec3   Float   @db.Money
  tafspec4   Float   @db.Money
  tafspec5   Float   @db.Money
  tafspec6   Float   @db.Money
  tafspec7   Float   @db.Money
  tafspec8   Float   @db.Money
  tafspec9   Float   @db.Money
  tafspec10  Float   @db.Money
  tafspec11  Float   @db.Money
  tafspec12  Float   @db.Money
  timestamp  String  @db.Char(10)

  @@index([keydrmfc], map: "fkdrtafdrmfc")
}

model drtam {
  keydrtam   String @id(map: "PK__drtam__1A34DF26") @db.Char(15)
  keydruni   String @db.Char(15)
  keydrtar   String @db.Char(15)
  caption    String @db.Char(30)
  tamorder   Int
  tamsumcons Int    @db.TinyInt
  tamsumcost Int    @db.TinyInt
  timestamp  String @db.Char(10)

  @@index([keydrtar], map: "fkdrtamdrtar")
  @@index([keydruni], map: "fkdrtamdruni")
}

model drtar {
  keydrtar   String  @id(map: "PK__drtar__42439BD7") @db.Char(15)
  keydrmts   String  @db.Char(15)
  keycmctc   String? @db.Char(15)
  caption    String  @db.Char(30)
  tarfixed   Int     @db.TinyInt
  tardynamic Int     @db.TinyInt
  tardist    Int     @db.TinyInt
  tarmcount  Int     @db.TinyInt
  tarnetfee  Int     @db.TinyInt
  tarvar1    String  @db.Char(30)
  tarvar2    String  @db.Char(30)
  tarvar3    String  @db.Char(30)
  tarvar4    String  @db.Char(30)
  tarvar5    String  @db.Char(30)
  tarused    Int     @default(0, map: "DF__drtar__tarused__4337C010") @db.TinyInt
  timestamp  String  @db.Char(10)
  dreco      dreco[]

  @@index([keycmctc], map: "fkdrtarcmctc")
  @@index([keydrmts], map: "fkdrtardrmts")
}

model drunc {
  keydrunc   String   @id(map: "PK__drunc__45200882") @db.Char(15)
  keydrmts   String   @db.Char(15)
  keydruni   String   @db.Char(15)
  keydruni2  String?  @db.Char(15)
  uncsumcons Int      @db.TinyInt
  uncfactor  Decimal? @db.Decimal(13, 6)
  timestamp  String   @db.Char(10)

  @@index([keydrmts], map: "fkdruncdrmts")
  @@index([keydruni], map: "fkdruncdruni")
  @@index([keydruni2], map: "fkdruncdruni2")
}

model druni {
  keydruni  String  @id(map: "PK__druni__1D114BD1") @db.Char(15)
  keydruni2 String? @db.Char(15)
  code      String  @db.Char(30)
  caption   String  @db.Char(30)
  unifactor Decimal @db.Decimal(13, 6)
  sysrec    Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keydruni2], map: "fkdrunidruni2")
}

model drval {
  keydrval                     String    @id(map: "pkdrval") @db.Char(15)
  keydrmtv                     String    @db.Char(15)
  keydrtam                     String    @db.Char(15)
  keydrmpt                     String    @db.Char(15)
  valvalue                     Float     @db.Money
  valcons                      Float     @db.Money
  valdate                      DateTime  @db.DateTime
  valtype                      Int       @db.TinyInt
  exportdate                   DateTime? @db.DateTime
  signature                    String?   @db.VarChar(80)
  source                       Int       @default(0, map: "DF__drval__source__18CA80B0") @db.TinyInt
  tobuffer                     Int       @default(0, map: "DF__drval__tobuffer__19BEA4E9") @db.TinyInt
  timestamp                    String    @db.Char(10)
  drvat                        drvat[]
  hyrad_hyrad_keydrvalTodrval  hyrad[]   @relation("hyrad_keydrvalTodrval")
  hyrad_hyrad_keydrval2Todrval hyrad[]   @relation("hyrad_keydrval2Todrval")

  @@unique([keydrmtv, valdate], map: "akdrval1")
  @@index([keydrmpt], map: "fkdrvaldrmpt")
  @@index([keydrmtv], map: "fkdrvaldrmtv")
  @@index([keydrtam], map: "fkdrvaldrtam")
  @@index([valdate, keydrmpt], map: "indrval_3500QCCIF")
  @@index([valdate, keydrval, keydrmpt], map: "indrval_3500QCCLA")
  @@index([keydrval, valdate, keydrmpt], map: "indrval_3500QCCOH")
  @@index([keydrmpt], map: "indrval_ejavl")
}

model drvat {
  keydrvat   String    @id(map: "pkdrvat") @db.Char(15)
  keydrval   String    @db.Char(15)
  valvalue   Float?    @db.Money
  valcons    Float     @db.Money
  valtime    DateTime  @db.DateTime
  exportdate DateTime? @db.DateTime
  source     Int       @default(0, map: "DF__drvat__source__38783633") @db.TinyInt
  signature  String?   @db.VarChar(80)
  timestamp  String    @db.Char(10)
  drval      drval     @relation(fields: [keydrval], references: [keydrval], onDelete: Cascade, onUpdate: NoAction, map: "fkdrvalkeydrval")

  @@index([keydrval], map: "fkdrvatdrval")
}

model eldob {
  keyeldob  String @id(map: "pkeldob") @db.Char(15)
  keycmeld  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  cmeld     cmeld  @relation(fields: [keycmeld], references: [keycmeld], onDelete: Cascade, onUpdate: NoAction, map: "fkeldobkeycmeld")
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkeldobkeycmobj")

  @@index([keycmeld], map: "fkeldobcmeld")
  @@index([keycmobj], map: "fkeldobcmobj")
}

model fadbh {
  keyfadbh   String    @id(map: "pkfadbh") @db.Char(15)
  keyfadbt   String?   @db.Char(15)
  keyrevrt   String?   @db.Char(15)
  keysylng   String    @db.Char(15)
  keydbtbl   String?   @db.Char(15)
  keycode    String?   @db.Char(15)
  rowno      Int       @db.TinyInt
  text       String    @db.VarChar(60)
  fromdate   DateTime? @db.DateTime
  todate     DateTime? @db.DateTime
  printblank Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@index([keycode], map: "fkfadbhcode")
  @@index([keydbtbl], map: "fkfadbhdbtbl")
  @@index([keyfadbt], map: "fkfadbhfadbt")
  @@index([keyrevrt], map: "fkfadbhrevrt")
  @@index([keysylng], map: "fkfadbhsylng")
  @@index([keycode, keydbtbl, keyfadbt, keysylng, fromdate, todate], map: "infadbh_1R10SDJQG")
}

model fadbk {
  keyfadbk  String  @id(map: "PK__fadbk__470850F4") @db.Char(15)
  keyfadbx  String  @db.Char(15)
  keyrevrt  String? @db.Char(15)
  type      Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keyfadbx], map: "fkfadbkfadbx")
  @@index([keyrevrt], map: "fkfadbkrevrt")
}

model fadbt {
  keyfadbt  String  @id(map: "pkfadbt") @db.Char(15)
  keyrevrt  String? @db.Char(15)
  typeid    Int
  name      String? @db.Char(30)
  printname Int     @default(0, map: "DF__fadbt__printname__777A76D8") @db.TinyInt
  bundle    Int     @default(0, map: "DF__fadbt__bundle__786E9B11") @db.TinyInt
  keycmctc  String? @db.Char(15)
  timestamp String  @db.Char(10)
  krdbt     krdbt[]
  lnvrt     lnvrt[]

  @@index([keycmctc], map: "fkfadbtcmctc")
  @@index([keyrevrt], map: "fkfadbtrevrt")
}

model fadbu {
  keyfadbu   String  @id(map: "pkfadbu") @db.Char(15)
  keyrevrt   String  @db.Char(15)
  keycmctc   String? @db.Char(15)
  whenpsk    Int     @db.TinyInt
  giro       String? @db.Char(15)
  setdebitid Int     @db.TinyInt
  imminvid   Int     @db.TinyInt
  invformula String? @db.VarChar(200)
  invcond    String? @db.VarChar(100)
  regdebstat Int     @db.TinyInt
  fakdebstat Int     @db.TinyInt
  paystatus  Int     @db.TinyInt
  diffjust   Int     @db.TinyInt
  intpay     Int     @default(0, map: "DF__fadbu__intpay__7903FAAE") @db.TinyInt
  prnstatus  Int     @default(0, map: "DF__fadbu__prnstatus__79F81EE7") @db.TinyInt
  ocrtype    Int     @default(0, map: "DF__fadbu__ocrtype__7AEC4320") @db.TinyInt
  ocrformula String? @db.VarChar(200)
  timestamp  String  @db.Char(10)

  @@index([keycmctc], map: "fkfadbucmctc")
}

model fadbx {
  keyfadbx  String  @id(map: "PK__fadbx__61B15A38") @db.Char(15)
  keysylng  String  @db.Char(15)
  keycmcmp  String? @db.Char(15)
  caption   String  @db.Char(30)
  vtext     String? @db.Char(85)
  texta1    String? @db.Char(30)
  textb1    String? @db.Char(20)
  textc1    String? @db.Char(20)
  textd1    String? @db.Char(15)
  texta2    String? @db.Char(30)
  textb2    String? @db.Char(20)
  textc2    String? @db.Char(20)
  textd2    String? @db.Char(15)
  texta3    String? @db.Char(30)
  textb3    String? @db.Char(20)
  textc3    String? @db.Char(20)
  textd3    String? @db.Char(15)
  texta4    String? @db.Char(30)
  textb4    String? @db.Char(20)
  textc4    String? @db.Char(20)
  textd4    String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keycmcmp], map: "fkfadbxcmcmp")
  @@index([keysylng], map: "fkfadbxsylng")
}

model faper {
  keyfaper  String @id(map: "PK__faper__385A3EEA") @db.Char(15)
  keysytxc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keysytxc], map: "fkfapersytxc")
}

model faprn {
  keyfaprn   String  @id(map: "pkfaprn") @db.Char(15)
  keyrevrt   String? @db.Char(15)
  keycmcmp   String? @db.Char(15)
  keycmdbm   String  @db.Char(15)
  keycmrpl   String? @db.Char(15)
  keycmfrx   String? @db.Char(15)
  keykrkrv   String? @db.Char(15)
  keycmmap   String? @db.Char(15)
  type       Int?
  ocrqty     Int     @db.TinyInt
  defaultdbm Int     @db.TinyInt
  einvoiceid String? @db.Char(4)
  einvid2    String? @db.Char(4)
  exportid   Int?
  noskip     Int     @db.TinyInt
  classid    Int?
  remkrfkh   Int?    @db.TinyInt
  nointerrpt Int     @db.TinyInt
  fadbhoverr Int     @db.TinyInt
  b2bexpkind Int     @default(0, map: "DF__faprn__b2bexpkin__76124D36") @db.TinyInt
  timestamp  String  @db.Char(10)
  cmcmp      cmcmp?  @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: Cascade, onUpdate: NoAction, map: "fkfaprnkeycmcmp ")
  cmmap      cmmap?  @relation(fields: [keycmmap], references: [keycmmap], onUpdate: NoAction, map: "fkfaprnkeycmmap")
  cmrpl      cmrpl?  @relation(fields: [keycmrpl], references: [keycmrpl], onUpdate: NoAction, map: "fkfaprnkeycmrpl ")
  krkrv      krkrv?  @relation(fields: [keykrkrv], references: [keykrkrv], onDelete: NoAction, onUpdate: NoAction, map: "fkfaprnkeykrkrv")
  revrt      revrt?  @relation(fields: [keyrevrt], references: [keyrevrt], onDelete: Cascade, onUpdate: NoAction, map: "fkfaprnkeyrevrt ")

  @@index([keycmcmp], map: "fkfaprncmcmp")
  @@index([keycmdbm], map: "fkfaprncmdbm")
  @@index([keycmfrx], map: "fkfaprncmfrx")
  @@index([keycmmap], map: "fkfaprncmmap")
  @@index([keycmrpl], map: "fkfaprncmrpl")
  @@index([keykrkrv], map: "fkfaprnkrkrv")
  @@index([keyrevrt], map: "fkfaprnrevrt")
}

model fbanm {
  keyfbanm   String    @id(map: "pkfbanm") @db.Char(15)
  keyfbbes   String    @db.Char(15)
  keyfbanp   String?   @db.Char(15)
  keysceft   String?   @db.Char(15)
  code       String    @db.VarChar(10)
  caption    String?   @db.VarChar(100)
  notering   String?   @db.VarChar(Max)
  status     Int       @default(1, map: "DF__fbanm__status__6262D9FC") @db.TinyInt
  effect     Int       @default(0, map: "DF__fbanm__effect__6356FE35") @db.TinyInt
  effecttype Int       @default(0, map: "DF__fbanm__effecttyp__644B226E") @db.TinyInt
  remcost    Float     @default(0, map: "DF__fbanm__remcost__653F46A7") @db.Money
  atgdatum   DateTime? @db.DateTime
  recchedate DateTime? @db.DateTime
  lstfixdate DateTime? @db.DateTime
  generatepu Int       @default(0, map: "DF__fbanm__generatep__66336AE0") @db.TinyInt
  aocreated  Int       @default(0, map: "DF__fbanm__aocreated__67278F19") @db.TinyInt
  timestamp  String    @db.Char(10)
  fbanp      fbanp?    @relation(fields: [keyfbanp], references: [keyfbanp], onDelete: NoAction, onUpdate: NoAction, map: "fkfbanmkeyfbanp")
  fbbes      fbbes     @relation(fields: [keyfbbes], references: [keyfbbes], onDelete: Cascade, onUpdate: NoAction, map: "fkfbanmkeyfbbes")
  sceft      sceft?    @relation(fields: [keysceft], references: [keysceft], onDelete: NoAction, onUpdate: NoAction, map: "fkfbanmkeysceft ")

  @@index([keyfbanp], map: "fkfbanmfbanp")
  @@index([keyfbbes], map: "fkfbanmfbbes")
  @@index([keysceft], map: "fkfbanmsceft")
}

model fbanp {
  keyfbanp   String  @id(map: "pkfbanp") @db.Char(15)
  keyfbanp2  String? @db.Char(15)
  keyfbbla   String  @db.Char(15)
  code       String  @db.VarChar(10)
  caption    String? @db.VarChar(100)
  descript   String? @db.VarChar(Max)
  rubrik     Int     @default(0, map: "DF__fbanp__rubrik__38AC9752") @db.TinyInt
  status     Int     @default(0, map: "DF__fbanp__status__39A0BB8B") @db.TinyInt
  statustype Int     @default(0, map: "DF__fbanp__statustyp__3A94DFC4") @db.TinyInt
  faultvalue Int     @default(0, map: "DF__fbanp__faultvalu__3B8903FD")
  printsort  Int     @default(0, map: "DF__fbanp__printsort__3C7D2836") @db.SmallInt
  standardp  Int     @default(0, map: "DF__fbanp__standardp__3D714C6F") @db.TinyInt
  timestamp  String  @db.Char(10)
  fbanm      fbanm[]
  fbbla      fbbla   @relation(fields: [keyfbbla], references: [keyfbbla], onDelete: Cascade, onUpdate: NoAction, map: "fkfbanpkeyfbbla")
  scane      scane[]
  scchr      scchr[]

  @@index([keyfbanp2], map: "fkfbanpfbanp2")
  @@index([keyfbbla], map: "fkfbanpfbbla")
}

model fbant {
  keyfbant  String @id(map: "pkfbant") @db.Char(15)
  caption   String @db.VarChar(250)
  timestamp String @db.Char(10)
}

model fbbeh {
  keyfbbeh  String  @id(map: "pkfbbeh") @db.Char(15)
  keycmtyp  String  @db.Char(15)
  caption   String  @unique(map: "akfbbeh") @db.VarChar(30)
  timestamp String  @db.Char(10)
  cmtyp     cmtyp   @relation(fields: [keycmtyp], references: [keycmtyp], onUpdate: NoAction, map: "fkfbbehkeycmtyp ")
  fbbkb     fbbkb[]
  fbreb     fbreb[]

  @@index([keycmtyp], map: "fkfbbehcmtyp")
}

model fbbes {
  keyfbbes   String    @id(map: "pkfbbes") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keyfbbka   String?   @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keyfbbla   String?   @db.Char(15)
  caption    String    @db.VarChar(30)
  nastadat   DateTime? @db.Date
  status     Int       @default(0, map: "DF__fbbes__status__4141DD53") @db.TinyInt
  besdat     DateTime? @db.Date
  genomford  Int       @default(0, map: "DF__fbbes__genomford__4236018C") @db.TinyInt
  godkand    Int       @default(0, map: "DF__fbbes__godkand__432A25C5") @db.TinyInt
  godktomdat DateTime? @db.Date
  ombes      Int       @default(0, map: "DF__fbbes__ombes__441E49FE") @db.TinyInt
  exportxls  Int       @default(0, map: "DF__fbbes__exportxls__45126E37") @db.TinyInt
  beskost    Float?    @db.Money
  anmkost    Float?    @db.Money
  statustech Decimal?  @db.Decimal(3, 2)
  statusclim Decimal?  @db.Decimal(3, 2)
  statusfunc Decimal?  @db.Decimal(3, 2)
  totpint    Decimal?  @db.Decimal(7, 2)
  totpinttw  Decimal?  @db.Decimal(7, 2)
  larmauth   Int       @default(0, map: "DF__fbbes__larmauth__46069270") @db.TinyInt
  larmemco   Int       @default(0, map: "DF__fbbes__larmemco__46FAB6A9") @db.TinyInt
  tenantinfo Int       @default(0, map: "DF__fbbes__tenantinf__47EEDAE2") @db.TinyInt
  evatime    Int       @default(0, map: "DF__fbbes__evatime__48E2FF1B") @db.SmallInt
  evacnt     Int       @default(0, map: "DF__fbbes__evacnt__49D72354") @db.SmallInt
  larmstart  DateTime? @db.Date
  editerbar  Int       @default(0, map: "DF__fbbes__editerbar__4ACB478D") @db.TinyInt
  timestamp  String    @db.Char(10)
  fbanm      fbanm[]
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkfbbeskeycmctc")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkfbbeskeycmobj ")
  fbbka      fbbka?    @relation(fields: [keyfbbka], references: [keyfbbka], onDelete: NoAction, onUpdate: NoAction, map: "fkfbbeskeyfbbka ")
  fbbla      fbbla?    @relation(fields: [keyfbbla], references: [keyfbbla], onDelete: NoAction, onUpdate: NoAction, map: "fkfbbeskeyfbbla")
  scchr      scchr[]
  sccsv      sccsv?

  @@index([keycmctc], map: "fkfbbescmctc")
  @@index([keycmobj], map: "fkfbbescmobj")
  @@index([keyfbbka], map: "fkfbbesfbbka")
  @@index([keyfbbla], map: "fkfbbesfbbla")
  @@index([keysyusr], map: "fkfbbessyusr")
}

model fbbka {
  keyfbbka                     String  @id(map: "pkfbbka") @db.Char(15)
  keyfbbla                     String? @db.Char(15)
  keycmtyp                     String  @db.Char(15)
  keycmuni                     String  @db.Char(15)
  keycmuni2                    String? @db.Char(15)
  code                         String  @db.VarChar(30)
  caption                      String? @db.VarChar(80)
  intervall                    Int     @default(0, map: "DF__fbbka__intervall__4E760F92") @db.TinyInt
  lockdate                     Int     @default(0, map: "DF__fbbka__lockdate__4F6A33CB") @db.TinyInt
  recurr                       Int     @default(1, map: "DF__fbbka__recurr__505E5804") @db.TinyInt
  reinstrge                    Int     @default(0, map: "DF__fbbka__reinstrge__51527C3D") @db.TinyInt
  firedrill                    Int     @default(0, map: "DF__fbbka__firedrill__5246A076") @db.TinyInt
  bkaactive                    Int     @default(1, map: "DF__fbbka__bkaactive__533AC4AF") @db.TinyInt
  timestamp                    String  @db.Char(10)
  fbbes                        fbbes[]
  cmtyp                        cmtyp   @relation(fields: [keycmtyp], references: [keycmtyp], onUpdate: NoAction, map: "fkfbbkakeycmtyp")
  cmuni_fbbka_keycmuniTocmuni  cmuni   @relation("fbbka_keycmuniTocmuni", fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkfbbkakeycmuni ")
  cmuni_fbbka_keycmuni2Tocmuni cmuni?  @relation("fbbka_keycmuni2Tocmuni", fields: [keycmuni2], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkfbbkakeycmuni2 ")
  fbbla                        fbbla?  @relation(fields: [keyfbbla], references: [keyfbbla], onUpdate: NoAction, map: "fkfbbkakeyfbbla")
  fbbkb                        fbbkb[]
  fbbkp                        fbbkp[]
  fbgod                        fbgod[]

  @@index([keycmtyp], map: "fkfbbkacmtyp")
  @@index([keycmuni], map: "fkfbbkacmuni")
  @@index([keycmuni2], map: "fkfbbkacmuni2")
  @@index([keyfbbla], map: "fkfbbkafbbla")
}

model fbbkb {
  keyfbbkb  String @id(map: "pkfbbkb") @db.Char(15)
  keyfbbeh  String @db.Char(15)
  keyfbbka  String @db.Char(15)
  timestamp String @db.Char(10)
  fbbeh     fbbeh  @relation(fields: [keyfbbeh], references: [keyfbbeh], onUpdate: NoAction, map: "fkfbbkbkeyfbbeh")
  fbbka     fbbka  @relation(fields: [keyfbbka], references: [keyfbbka], onDelete: Cascade, onUpdate: NoAction, map: "fkfbbkbkeyfbbka ")

  @@unique([keyfbbka, keyfbbeh], map: "akfbbkb")
  @@index([keyfbbeh], map: "fkfbbkbfbbeh")
}

model fbbkp {
  keyfbbkp  String @id(map: "pkfbbkp") @db.Char(15)
  keyfbbka  String @db.Char(15)
  keybaret  String @db.Char(15)
  timestamp String @db.Char(10)
  baret     baret  @relation(fields: [keybaret], references: [keybaret], onDelete: Cascade, onUpdate: NoAction, map: "fkfbbkpkeybaret")
  fbbka     fbbka  @relation(fields: [keyfbbka], references: [keyfbbka], onDelete: Cascade, onUpdate: NoAction, map: "fkfbbkpkeyfbbka ")

  @@unique([keyfbbka, keybaret], map: "akfbbkp")
}

model fbbla {
  keyfbbla  String   @id(map: "pkfbbla") @db.Char(15)
  keycmtyp  String   @db.Char(15)
  keybsdef  String?  @db.Char(15)
  code      String?  @db.VarChar(30)
  caption   String?  @db.VarChar(60)
  usefv     Int      @default(0, map: "DF__fbbla__usefv__1EBF8F42") @db.TinyInt
  blaused   Int      @default(1, map: "DF__fbbla__blaused__1FB3B37B") @db.TinyInt
  demsceft  Int      @default(0, map: "DF__fbbla__demsceft__20A7D7B4") @db.TinyInt
  maxvalue  Decimal? @db.Decimal(7, 2)
  genxbox   Int      @default(0, map: "DF__fbbla__genxbox__219BFBED") @db.TinyInt
  sysstd    Int      @default(0, map: "DF__fbbla__sysstd__22902026") @db.TinyInt
  timestamp String   @db.Char(10)
  fbanp     fbanp[]
  fbbes     fbbes[]
  fbbka     fbbka[]
  bsdef     bsdef?   @relation(fields: [keybsdef], references: [keybsdef], onUpdate: NoAction, map: "fkfbblakeybsdef")
  cmtyp     cmtyp    @relation(fields: [keycmtyp], references: [keycmtyp], onUpdate: NoAction, map: "fkfbblakeycmtyp ")
  fbbpk     fbbpk[]

  @@index([keybsdef], map: "fkfbblabsdef")
  @@index([keycmtyp], map: "fkfbblacmtyp")
}

model fbbpk {
  keyfbbpk  String @id(map: "pkfbbpk") @db.Char(15)
  keycmctc  String @db.Char(15)
  keyfbbla  String @db.Char(15)
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkfbbpkkeycmctc")
  fbbla     fbbla  @relation(fields: [keyfbbla], references: [keyfbbla], onDelete: Cascade, onUpdate: NoAction, map: "fkfbbpkkeyfbbla")

  @@unique([keycmctc, keyfbbla], map: "akfbbpk1")
  @@index([keyfbbla], map: "fkfbbpkfbbla")
}

model fbbsx {
  keyfbbsx  String    @id(map: "pkfbbsx") @db.Char(15)
  keyfbbes  String    @db.Char(15)
  keyskafa  String?   @db.Char(15)
  keyskafb  String?   @db.Char(15)
  keyskafc  String?   @db.Char(15)
  caption   String    @db.VarChar(60)
  descript  String    @db.VarChar(4000)
  savestat  Int       @default(0, map: "DF__fbbsx__savestat__4A42DB4D") @db.TinyInt
  saveeff   Int       @default(0, map: "DF__fbbsx__saveeff__4B36FF86") @db.TinyInt
  elctesti  Decimal   @default(0, map: "DF__fbbsx__elctesti__4C2B23BF") @db.Decimal(18, 3)
  fjvesti   Decimal   @default(0, map: "DF__fbbsx__fjvesti__4D1F47F8") @db.Decimal(18, 3)
  gasesti   Decimal   @default(0, map: "DF__fbbsx__gasesti__4E136C31") @db.Decimal(18, 3)
  wateresti Decimal   @default(0, map: "DF__fbbsx__wateresti__4F07906A") @db.Decimal(18, 3)
  otheresti Float     @default(0, map: "DF__fbbsx__otheresti__4FFBB4A3") @db.Money
  yearesti  Float     @default(0, map: "DF__fbbsx__yearesti__50EFD8DC") @db.Money
  lccesti   Float     @default(0, map: "DF__fbbsx__lccesti__51E3FD15") @db.Money
  lcceesti  Float     @default(0, map: "DF__fbbsx__lcceesti__52D8214E") @db.Money
  pbackesti Decimal   @default(0, map: "DF__fbbsx__pbackesti__53CC4587") @db.Decimal(10, 2)
  lccval    Decimal   @default(0, map: "DF__fbbsx__lccval__54C069C0") @db.Decimal(18, 3)
  invcost   Float     @default(0, map: "DF__fbbsx__invcost__55B48DF9") @db.Money
  unknownic Int       @default(0, map: "DF__fbbsx__unknownic__56A8B232") @db.TinyInt
  elctadj   Decimal   @default(0, map: "DF__fbbsx__elctadj__579CD66B") @db.Decimal(18, 3)
  fjvadj    Decimal   @default(0, map: "DF__fbbsx__fjvadj__5890FAA4") @db.Decimal(18, 3)
  gasadj    Decimal   @default(0, map: "DF__fbbsx__gasadj__59851EDD") @db.Decimal(18, 3)
  wateradj  Decimal   @default(0, map: "DF__fbbsx__wateradj__5A794316") @db.Decimal(18, 3)
  otheradj  Float     @default(0, map: "DF__fbbsx__otheradj__5B6D674F") @db.Money
  yearadj   Float     @default(0, map: "DF__fbbsx__yearadj__5C618B88") @db.Money
  lccadj    Float     @default(0, map: "DF__fbbsx__lccadj__5D55AFC1") @db.Money
  lcceadj   Float     @default(0, map: "DF__fbbsx__lcceadj__5E49D3FA") @db.Money
  pbackadj  Decimal   @default(0, map: "DF__fbbsx__pbackadj__5F3DF833") @db.Decimal(10, 2)
  invcstadj Float     @default(0, map: "DF__fbbsx__invcstadj__60321C6C") @db.Money
  unknwnadj Int       @default(0, map: "DF__fbbsx__unknwnadj__612640A5") @db.TinyInt
  elctout   Decimal   @default(0, map: "DF__fbbsx__elctout__621A64DE") @db.Decimal(18, 3)
  fjvout    Decimal   @default(0, map: "DF__fbbsx__fjvout__630E8917") @db.Decimal(18, 3)
  gasout    Decimal   @default(0, map: "DF__fbbsx__gasout__6402AD50") @db.Decimal(18, 3)
  waterout  Decimal   @default(0, map: "DF__fbbsx__waterout__64F6D189") @db.Decimal(18, 3)
  otherout  Float     @default(0, map: "DF__fbbsx__otherout__65EAF5C2") @db.Money
  yearout   Float     @default(0, map: "DF__fbbsx__yearout__66DF19FB") @db.Money
  lccout    Float     @default(0, map: "DF__fbbsx__lccout__67D33E34") @db.Money
  lcceout   Float     @default(0, map: "DF__fbbsx__lcceout__68C7626D") @db.Money
  pbackout  Decimal   @default(0, map: "DF__fbbsx__pbackout__69BB86A6") @db.Decimal(10, 2)
  actinvcst Float     @default(0, map: "DF__fbbsx__actinvcst__6AAFAADF") @db.Money
  mesyears  Int       @default(0, map: "DF__fbbsx__mesyears__6BA3CF18")
  mesyradj  Int       @default(0, map: "DF__fbbsx__mesyradj__6C97F351")
  othereff  String    @db.VarChar(4000)
  rejnote   String    @db.VarChar(4000)
  extref    String?   @db.VarChar(30)
  compldate DateTime? @db.DateTime
  effgrade  Int       @default(0, map: "DF__fbbsx__effgrade__6D8C178A") @db.TinyInt
  timestamp String    @db.Char(10)

  @@index([keyfbbes], map: "fkfbbsxfbbes")
  @@index([keyskafa], map: "fkfbbsxskafa")
  @@index([keyskafb], map: "fkfbbsxskafb")
  @@index([keyskafc], map: "fkfbbsxskafc")
}

model fbgod {
  keyfbgod   String    @id(map: "pkfbgod") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keyfbbka   String    @db.Char(15)
  godktomdat DateTime? @db.DateTime
  startdate  DateTime? @db.DateTime
  enddate    DateTime? @db.DateTime
  statustech Decimal?  @db.Decimal(3, 2)
  statusclim Decimal?  @db.Decimal(3, 2)
  statusfunc Decimal?  @db.Decimal(3, 2)
  totpint    Decimal?  @db.Decimal(7, 2)
  totpinttw  Decimal?  @db.Decimal(7, 2)
  timestamp  String    @db.Char(10)
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkfbgodkeycmobj ")
  fbbka      fbbka     @relation(fields: [keyfbbka], references: [keyfbbka], onDelete: Cascade, onUpdate: NoAction, map: "fkfbgodkeyfbbka ")

  @@unique([keycmobj, keyfbbka], map: "akfbgod1")
  @@index([keycmobj], map: "fkfbgodcmobj")
  @@index([keyfbbka], map: "fkfbgodfbbka")
}

model fbreb {
  keyfbreb  String @id(map: "pkfbreb") @db.Char(15)
  keycmctc  String @db.Char(15)
  keycmtyp  String @db.Char(15)
  keyfbbeh  String @db.Char(15)
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkfbrebkeycmctc")
  cmtyp     cmtyp  @relation(fields: [keycmtyp], references: [keycmtyp], onUpdate: NoAction, map: "fkfbrebkeycmtyp ")
  fbbeh     fbbeh  @relation(fields: [keyfbbeh], references: [keyfbbeh], onUpdate: NoAction, map: "fkfbrebkeyfbbeh ")

  @@index([keycmctc], map: "fkfbrebcmctc")
  @@index([keycmtyp], map: "fkfbrebcmtyp")
  @@index([keyfbbeh], map: "fkfbrebfbbeh")
}

model fbres {
  keyfbres  String @id(map: "pkfbres") @db.Char(15)
  keycmctc  String @db.Char(15)
  code      String @unique(map: "akfbres") @db.VarChar(30)
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkfbreskeycmctc")

  @@index([keycmctc], map: "fkfbrescmctc")
}

model femsg {
  keyfemsg  String    @id(map: "pkfemsg") @db.Char(15)
  keycrnot  String?   @db.Char(15)
  keydbtbl  String    @db.Char(15)
  keycode   String    @db.Char(15)
  keysyusr  String?   @db.Char(15)
  text      String    @db.VarChar(Max)
  creadate  DateTime? @db.DateTime
  prjcode   String?   @db.VarChar(250)
  prjcapt   String?   @db.VarChar(250)
  prjmana   String?   @db.VarChar(250)
  prjphase  Int       @default(0, map: "DF__femsg__prjphase__7DC8AFCB") @db.TinyInt
  prjstatus Int       @default(0, map: "DF__femsg__prjstatus__7EBCD404") @db.TinyInt
  startdate DateTime? @db.DateTime
  starttime DateTime? @db.DateTime
  enddate   DateTime? @db.DateTime
  endtime   DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  crnot     crnot?    @relation(fields: [keycrnot], references: [keycrnot], onDelete: Cascade, onUpdate: NoAction, map: "fkfemsgkeycrnot")

  @@index([keycrnot], map: "fkfemsgcrnot")
  @@index([keydbtbl], map: "fkfemsgdbtbl")
  @@index([keysyusr], map: "fkfemsgsyusr")
}

model feocd {
  keyfeocd  String   @id(map: "pkfeocd") @db.Char(15)
  keycmsom  String   @db.Char(15)
  keycmctc  String   @db.Char(15)
  startdate DateTime @db.DateTime
  starttime DateTime @db.DateTime
  enddate   DateTime @db.DateTime
  endtime   DateTime @db.DateTime
  timestamp String   @db.Char(10)
  cmctc     cmctc    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkfeocdkeycmctc")
  cmsom     cmsom    @relation(fields: [keycmsom], references: [keycmsom], onUpdate: NoAction, map: "fkfeocdkeycmsom")

  @@index([keycmctc], map: "fkfeocdcmctc")
  @@index([keycmsom], map: "fkfeocdcmsom")
}

model hffnd {
  keyhffnd  String   @id(map: "pkhffnd") @db.Char(15)
  keyhftyp  String   @db.Char(15)
  keycmobj  String   @db.Char(15)
  keyhyobj  String?  @db.Char(15)
  keykrfkh  String?  @db.Char(15)
  fdate     DateTime @db.DateTime
  incr      Int      @db.TinyInt
  incamount Float?   @db.Money
  redamount Float?   @db.Money
  totamount Float    @db.Money
  note      String?  @db.VarChar(30)
  hycreated Int      @db.TinyInt
  timestamp String   @db.Char(10)
  cmobj     cmobj    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkhffndkeycmobj")
  hftyp     hftyp    @relation(fields: [keyhftyp], references: [keyhftyp], onUpdate: NoAction, map: "fkhffndkeyhftyp ")
  hyobj     hyobj?   @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkhffndkeyhyobj")
  krfkh     krfkh?   @relation(fields: [keykrfkh], references: [keykrfkh], onDelete: NoAction, onUpdate: NoAction, map: "fkhffndkeykrfkh")
  hfunf     hfunf[]

  @@index([keycmobj], map: "fkhffndcmobj")
  @@index([keyhftyp], map: "fkhffndhftyp")
  @@index([keyhyobj], map: "fkhffndhyobj")
  @@index([keykrfkh], map: "fkhffndkrfkh")
}

model hftyp {
  keyhftyp   String  @id(map: "pkhftyp") @db.Char(15)
  caption    String  @db.VarChar(30)
  shareprcnt Decimal @db.Decimal(4, 1)
  owner      Int     @default(0, map: "DF__hftyp__owner__59D2B3A5") @db.TinyInt
  timestamp  String  @db.Char(10)
  hffnd      hffnd[]
}

model hfunf {
  keyhfunf  String  @id(map: "pkhfunf") @db.Char(15)
  keyhffnd  String  @db.Char(15)
  keypuund  String? @db.Char(15)
  incamount Float?  @db.Money
  redamount Float?  @db.Money
  filled    Int     @default(0, map: "DF__hfunf__filled__4BA48FDF") @db.TinyInt
  timestamp String  @db.Char(10)
  hffnd     hffnd   @relation(fields: [keyhffnd], references: [keyhffnd], onUpdate: NoAction, map: "fkhfunfkeyhffnd ")
  puund     puund?  @relation(fields: [keypuund], references: [keypuund], onUpdate: NoAction, map: "fkhfunfkeypuund")

  @@unique([keyhffnd, keypuund], map: "akhfunf1")
  @@index([keyhffnd], map: "fkhfunfhffnd")
  @@index([keypuund], map: "fkhfunfpuund")
}

model hgerb {
  keyhgerb   String    @id(map: "pkhgerb") @db.Char(15)
  keycmobj   String?   @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  fdate      DateTime? @db.Date
  utskrdatum DateTime? @db.Date
  aterdatum  DateTime? @db.Date
  svarinkom  DateTime? @db.Date
  offerdate  DateTime? @db.Date
  erbjudutsk Int?      @db.TinyInt
  hglureject Int       @default(0, map: "DF__hgerb__hglurejec__0278564F") @db.TinyInt
  bekrutskr  Int?      @db.TinyInt
  timestamp  String    @db.Char(10)
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkhgerbkeycmctc")
  cmobj      cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhgerbkeycmobj ")
  hyobj      hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkhgerbkeyhyobj")

  @@index([keycmctc], map: "fkhgerbcmctc")
  @@index([keycmobj], map: "fkhgerbcmobj")
  @@index([keyhyobj], map: "fkhgerbhyobj")
}

model hyaev {
  keyhyaev  String   @id(map: "pkhyaev") @db.Char(15)
  keycmobj  String   @db.Char(15)
  fdate     DateTime @db.Date
  value     Float    @db.Money
  timestamp String   @db.Char(10)
  cmobj     cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyaevkeycmobj")

  @@index([keycmobj], map: "fkhyaevcmobj")
}

model hyakt {
  keyhyakt  String @id(map: "PK__hyakt__48717679") @db.Char(15)
  hyaktben  String @db.Char(30)
  timestamp String @db.Char(10)
}

model hyamo {
  keyhyamo  String  @id(map: "pkhyamo") @db.Char(15)
  hyamokod  String? @db.Char(30)
  hyamoben  String? @db.Char(30)
  kalkranta Float?  @db.Money
  filterqry String? @db.VarChar(Max)
  anvandej  Int     @db.TinyInt
  timestamp String  @db.Char(10)
}

model hyamv {
  keyhyamv  String   @id(map: "pkhyamv") @db.Char(15)
  keycmobj  String   @db.Char(15)
  fdate     DateTime @db.Date
  value     Float    @db.Money
  timestamp String   @db.Char(10)
  cmobj     cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyamvkeycmobj")

  @@index([keycmobj], map: "fkhyamvcmobj")
}

model hyand {
  keyhyand   String    @id(map: "pkhyand") @db.Char(15)
  keycmind   String?   @db.Char(15)
  keycminv   String?   @db.Char(15)
  keysymdl   String    @db.Char(15)
  andtype    Int       @db.TinyInt
  villkor    String?   @db.VarChar(Max)
  caption    String    @db.VarChar(80)
  fdate      DateTime  @db.DateTime
  reglering  String    @db.Char(1)
  retroaktiv Int       @db.TinyInt
  rfdate     DateTime? @db.DateTime
  rtdate     DateTime? @db.DateTime
  rdebfdate  DateTime? @db.DateTime
  rdebtdate  DateTime? @db.DateTime
  atertag    Int       @db.TinyInt
  aterdate   DateTime? @db.DateTime
  atersign   String?   @db.VarChar(80)
  kontrakt   Float     @db.Money
  grund      Float     @db.Money
  atertagbar Int       @db.TinyInt
  keysyusr   String    @db.Char(15)
  signatur   String    @db.VarChar(80)
  logdate    DateTime  @db.DateTime
  fortstamp  String    @db.Char(10)
  timestamp  String    @db.Char(10)

  @@index([keycmind], map: "fkhyandcmind")
  @@index([keycminv], map: "fkhyandcminv")
  @@index([keysymdl], map: "fkhyandsymdl")
  @@index([keysyusr], map: "fkhyandsyusr")
  @@index([andtype, caption, atertag, keysymdl], map: "inhyand_4C60Y0RWM")
}

model hyanr {
  keyhyanr                     String    @id(map: "pkhyanr") @db.Char(15)
  keyhyanr2                    String?   @db.Char(15)
  keyhyand                     String    @db.Char(15)
  keyhyrad                     String    @db.Char(15)
  created                      Int       @db.TinyInt
  fdate                        DateTime? @db.DateTime
  tdate                        DateTime? @db.DateTime
  keycminv                     String?   @db.Char(15)
  keycminv2                    String?   @db.Char(15)
  keycminv3                    String?   @db.Char(15)
  akthyratot                   Float     @db.Money
  timestamp                    String    @db.Char(10)
  cminv_hyanr_keycminvTocminv  cminv?    @relation("hyanr_keycminvTocminv", fields: [keycminv], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyanrkeycminv ")
  cminv_hyanr_keycminv2Tocminv cminv?    @relation("hyanr_keycminv2Tocminv", fields: [keycminv2], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyanrkeycminv2 ")
  cminv_hyanr_keycminv3Tocminv cminv?    @relation("hyanr_keycminv3Tocminv", fields: [keycminv3], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyanrkeycminv3 ")
  hyanr                        hyanr?    @relation("hyanrTohyanr", fields: [keyhyanr2], references: [keyhyanr], onDelete: NoAction, onUpdate: NoAction, map: "fkhyanrkeyhyanr2 ")
  other_hyanr                  hyanr[]   @relation("hyanrTohyanr")

  @@index([keycminv], map: "fkhyanrcminv")
  @@index([keycminv2], map: "fkhyanrcminv2")
  @@index([keycminv3], map: "fkhyanrcminv3")
  @@index([keyhyand], map: "fkhyanrhyand")
  @@index([keyhyanr2], map: "fkhyanrhyanr2")
  @@index([keyhyrad], map: "fkhyanrhyrad")
}

model hyaos {
  keyhyaos  String   @id(map: "pkhyaos") @db.Char(15)
  keyhyobj  String   @db.Char(15)
  keycmart  String?  @db.Char(15)
  keyhytoo  String?  @db.Char(15)
  keysymdl  String   @db.Char(15)
  amount    Float    @db.Money
  fdate     DateTime @db.DateTime
  tdate     DateTime @db.DateTime
  relatedto Int      @db.TinyInt
  timestamp String   @db.Char(10)
  cmart     cmart?   @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkhyaoskeycmart")
  hyobj     hyobj    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkhyaoskeyhyobj")
  hytoo     hytoo?   @relation(fields: [keyhytoo], references: [keyhytoo], onDelete: NoAction, onUpdate: NoAction, map: "fkhyaoskeyhytoo ")

  @@index([keycmart], map: "fkhyaoscmart")
  @@index([keyhyobj], map: "fkhyaoshyobj")
  @@index([keyhytoo], map: "fkhyaoshytoo")
  @@index([keysymdl], map: "fkhyaossymdl")
}

model hyaty {
  keyhyaty  String  @id(map: "pkhyaty") @db.Char(15)
  keyhyhav  String  @db.Char(15)
  delyta1   String? @db.Char(20)
  delyta2   String? @db.Char(20)
  delyta3   String? @db.Char(20)
  keycmuni  String  @db.Char(15)
  timestamp String  @db.Char(10)
  hyhav     hyhav   @relation(fields: [keyhyhav], references: [keyhyhav], onDelete: Cascade, onUpdate: NoAction, map: "fkhyatykeyhyhav ")

  @@index([keycmuni], map: "fkhyatycmuni")
  @@index([keyhyhav], map: "fkhyatyhyhav")
}

model hyavg {
  keyhyavg   String    @id(map: "pkhyavg") @db.Char(15)
  keyhyamo   String?   @db.Char(15)
  keyhyrad   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keyhyobj   String    @db.Char(15)
  godk       Int       @db.TinyInt
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  manuell    Int       @db.TinyInt
  avgunderl  Float?    @db.Money
  kalkranta  Float?    @db.Money
  keyhyink   String?   @db.Char(15)
  upph       Int?      @db.TinyInt
  utskdat    DateTime? @db.DateTime
  senastsvar DateTime? @db.DateTime
  beslutsdat DateTime? @db.DateTime
  pamdat     DateTime? @db.DateTime
  pamsensvar DateTime? @db.DateTime
  pamnr      Int?      @db.TinyInt
  stamdat    DateTime? @db.DateTime
  stamsensva DateTime? @db.DateTime
  legalforce DateTime? @db.DateTime
  eoutcome   Float?    @db.Money
  godkdat    DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  hyrad      hyrad[]

  @@index([keyhyamo], map: "fkhyavghyamo")
  @@index([keyhyink], map: "fkhyavghyink")
  @@index([keyhyobj], map: "fkhyavghyobj")
  @@index([keyhyrad], map: "fkhyavghyrad")
  @@index([keysyusr], map: "fkhyavgsyusr")
}

model hyavi {
  keyhyavi   String   @id(map: "pkhyavi") @db.Char(15)
  keysymdl   String   @db.Char(15)
  keycmcmp   String?  @db.Char(15)
  keysyusr   String?  @db.Char(15)
  keyhyobt   String?  @db.Char(15)
  caption    String?  @db.VarChar(120)
  signatur   String   @db.VarChar(80)
  logdate    DateTime @db.DateTime
  forfddate  DateTime @db.DateTime
  forftdate  DateTime @db.DateTime
  havisering Int      @db.TinyInt
  urval      String   @db.VarChar(Max)
  timestamp  String   @db.Char(10)
  cmcmp      cmcmp?   @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: NoAction, onUpdate: NoAction, map: "fkhyavikeycmcmp")
  hyobt      hyobt?   @relation(fields: [keyhyobt], references: [keyhyobt], onDelete: NoAction, onUpdate: NoAction, map: "fkhyavikeyhyobt")

  @@index([keycmcmp], map: "fkhyavicmcmp")
  @@index([keyhyobt], map: "fkhyavihyobt")
  @@index([keysymdl], map: "fkhyavisymdl")
  @@index([keysyusr], map: "fkhyavisyusr")
}

model hyavk {
  keyhyavk   String    @id(map: "pkhyavk") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keyhyinp   String?   @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keyhyakt   String    @db.Char(15)
  andel      Decimal   @db.Decimal(6, 3)
  ordning    Int?      @db.TinyInt
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  godkdat    DateTime? @db.DateTime
  godksign   String?   @db.VarChar(80)
  notifydate DateTime? @db.DateTime
  enrollment DateTime? @db.DateTime
  terminby   Int?      @db.TinyInt
  agdandelt  Int?      @db.SmallInt
  agdandeln  Int?      @db.SmallInt
  redandelt  Int?      @db.SmallInt
  redandeln  Int?      @db.SmallInt
  signed     DateTime? @db.DateTime
  feeperiod  Int       @default(0, map: "DF__hyavk__feeperiod__65496848") @db.TinyInt
  timestamp  String    @db.Char(10)
  hycmm      hycmm[]
  hyfin      hyfin[]
  hyrad      hyrad[]

  @@index([keycmctc], map: "fkhyavkcmctc")
  @@index([keycmctc2], map: "fkhyavkcmctc2")
  @@index([keyhyakt], map: "fkhyavkhyakt")
  @@index([keyhyinp], map: "fkhyavkhyinp")
  @@index([keyhyobj], map: "fkhyavkhyobj")
  @@index([keyhyobj, keycmctc, keyhyakt, ordning], map: "inhyavk_1QN1DW238")
}

model hyber {
  keyhyber  String    @id(map: "pkhyber") @db.Char(15)
  keycmctc  String    @db.Char(15)
  keyhybev  String    @db.Char(15)
  senddate  DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkhyberkeycmctc")
  hybev     hybev     @relation(fields: [keyhybev], references: [keyhybev], onDelete: Cascade, onUpdate: NoAction, map: "fkhyberkeyhybev ")

  @@index([keycmctc], map: "fkhybercmctc")
  @@index([keyhybev], map: "fkhyberhybev")
}

model hybet {
  keyhybet  String  @id(map: "PK__hybet__703F70B1") @db.Char(15)
  hybetben  String  @db.Char(30)
  repabkod  Int     @db.TinyInt
  timestamp String  @db.Char(10)
  hybev     hybev[]
}

model hybev {
  keyhybev                     String    @id(map: "pkhybev") @db.Char(15)
  keyhyobj                     String    @db.Char(15)
  keyhybet                     String    @db.Char(15)
  keycmuni                     String?   @db.Char(15)
  keycmuni2                    String    @db.Char(15)
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime? @db.DateTime
  intervall                    Int       @db.TinyInt
  notibefore                   Int
  monittext                    String?   @db.VarChar(200)
  timestamp                    String    @db.Char(10)
  hyber                        hyber[]
  cmuni_hybev_keycmuniTocmuni  cmuni?    @relation("hybev_keycmuniTocmuni", fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkhybevkeycmuni ")
  cmuni_hybev_keycmuni2Tocmuni cmuni     @relation("hybev_keycmuni2Tocmuni", fields: [keycmuni2], references: [keycmuni], onUpdate: NoAction, map: "fkhybevkeycmuni2 ")
  hybet                        hybet     @relation(fields: [keyhybet], references: [keyhybet], onUpdate: NoAction, map: "fkhybevkeyhybet ")
  hyobj                        hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhybevkeyhyobj")

  @@index([keycmuni], map: "fkhybevcmuni")
  @@index([keycmuni2], map: "fkhybevcmuni2")
  @@index([keyhybet], map: "fkhybevhybet")
  @@index([keyhyobj], map: "fkhybevhyobj")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hyblaorg {
  keyhybla  String  @db.Char(15)
  keyhyobj  String? @db.Char(15)
  keybsins  String  @db.Char(15)
  bilaga    String? @db.Char(5)
  timestamp String? @db.Char(10)
  keybsins2 String? @db.Char(15)

  @@ignore
}

model hycae {
  keyhycae  String   @id(map: "pkhycae") @db.Char(15)
  keyhycal  String   @db.Char(15)
  evtdate   DateTime @db.Date
  evtkind   Int      @default(0, map: "DF__hycae__evtkind__5548D600") @db.TinyInt
  timestamp String   @db.Char(10)
  hycal     hycal    @relation(fields: [keyhycal], references: [keyhycal], onDelete: Cascade, onUpdate: NoAction, map: "fkhycaekeyhycal ")

  @@index([keyhycal], map: "fkhycaehycal")
}

model hycal {
  keyhycal   String    @id(map: "pkhycal") @db.Char(15)
  keycmuni   String?   @db.Char(15)
  caption    String    @db.VarChar(60)
  startdate  DateTime? @db.Date
  wkdaysmask Int       @default(0, map: "DF__hycal__wkdaysmas__3D865B08")
  mndaysmask Int       @default(0, map: "DF__hycal__mndaysmas__3E7A7F41")
  distmethd  Int       @default(0, map: "DF__hycal__distmethd__3F6EA37A") @db.TinyInt
  interval   Int       @default(1, map: "DF__hycal__interval__4062C7B3") @db.TinyInt
  isactive   Int       @default(1, map: "DF__hycal__isactive__4156EBEC") @db.TinyInt
  timestamp  String    @db.Char(10)
  hycae      hycae[]
  cmuni      cmuni?    @relation(fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkhycalkeycmuni ")
  hyscc      hyscc[]
  hytos      hytos[]

  @@index([keycmuni], map: "fkhycalcmuni")
}

model hycam {
  keyhycam   String    @id(map: "pkhycam") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  campuscode String    @db.VarChar(3)
  created    DateTime  @db.DateTime
  lastrespon DateTime? @db.Date
  reminder   DateTime? @db.Date
  year       Int       @db.SmallInt
  closed     Int       @default(0, map: "DF__hycam__closed__1904A364") @db.TinyInt
  closeddate DateTime? @db.DateTime
  recfetched DateTime? @db.DateTime
  camporder  Int       @db.SmallInt
  timestamp  String    @db.Char(10)
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhycamkeyhyobj")

  @@unique([keyhyobj, year, campuscode], map: "akhycam1")
  @@index([keyhyobj], map: "fkhycamhyobj")
  @@index([keysyusr], map: "fkhycamsyusr")
}

model hyccg {
  keyhyccg  String  @id(map: "pkhyccg") @db.Char(15)
  keyhycct  String  @db.Char(15)
  groupfnc  Int     @default(0, map: "DF__hyccg__groupfnc__6825D4F3")
  caption   String  @db.VarChar(60)
  sortorder Int     @default(0, map: "DF__hyccg__sortorder__6919F92C")
  timestamp String  @db.Char(10)
  hycct     hycct   @relation(fields: [keyhycct], references: [keyhycct], onUpdate: NoAction, map: "fkhyccgkeyhycct")
  hyccr     hyccr[]

  @@index([keyhycct], map: "fkhyccgkeyhycct")
}

model hyccr {
  keyhyccr  String @id(map: "pkhyccr") @db.Char(15)
  keyhyccg  String @db.Char(15)
  rowkind   Int    @default(0, map: "DF__hyccr__rowkind__6CEA8A10")
  sortorder Int    @default(0, map: "DF__hyccr__sortorder__6DDEAE49")
  timestamp String @db.Char(10)
  hyccg     hyccg  @relation(fields: [keyhyccg], references: [keyhyccg], onUpdate: NoAction, map: "fkhyccrkeyhyccg ")
}

model hycct {
  keyhycct  String  @id(map: "pkhycct") @db.Char(15)
  keybsdef  String? @db.Char(15)
  caption   String  @db.VarChar(100)
  templkind Int     @default(0, map: "DF__hycct__templkind__71AF3F2D") @db.TinyInt
  setting1  Int     @default(0, map: "DF__hycct__setting1__72A36366") @db.TinyInt
  setting2  Int     @default(0, map: "DF__hycct__setting2__7397879F") @db.TinyInt
  setting3  Int     @default(0, map: "DF__hycct__setting3__748BABD8") @db.TinyInt
  setting4  Int     @default(0, map: "DF__hycct__setting4__757FD011") @db.TinyInt
  setting5  Int     @default(0, map: "DF__hycct__setting5__7673F44A") @db.TinyInt
  setting6  Int     @default(0, map: "DF__hycct__setting6__77681883") @db.TinyInt
  setting7  Int     @default(0, map: "DF__hycct__setting7__785C3CBC") @db.TinyInt
  setting8  Int     @default(0, map: "DF__hycct__setting8__795060F5") @db.TinyInt
  setting9  Int     @default(0, map: "DF__hycct__setting9__7A44852E") @db.TinyInt
  setting10 Int     @default(0, map: "DF__hycct__setting10__7B38A967") @db.TinyInt
  setting11 Int     @default(0, map: "DF__hycct__setting11__7C2CCDA0") @db.TinyInt
  setting12 Int     @default(0, map: "DF__hycct__setting12__7D20F1D9") @db.TinyInt
  setting13 Int     @default(0, map: "DF__hycct__setting13__7E151612") @db.TinyInt
  setting14 Int     @default(0, map: "DF__hycct__setting14__7F093A4B") @db.TinyInt
  setting15 Int     @default(0, map: "DF__hycct__setting15__7FFD5E84") @db.TinyInt
  setting16 Int     @default(0, map: "DF__hycct__setting16__00F182BD") @db.TinyInt
  setting17 Int     @default(0, map: "DF__hycct__setting17__01E5A6F6") @db.TinyInt
  setting18 Int     @default(0, map: "DF__hycct__setting18__02D9CB2F") @db.TinyInt
  setting19 Int     @default(0, map: "DF__hycct__setting19__03CDEF68") @db.TinyInt
  setting20 Int     @default(0, map: "DF__hycct__setting20__04C213A1") @db.TinyInt
  text1     String? @db.VarChar(100)
  text2     String? @db.VarChar(100)
  text3     String? @db.VarChar(100)
  text4     String? @db.VarChar(100)
  text5     String? @db.VarChar(100)
  timestamp String  @db.Char(10)
  hyccg     hyccg[]
  bsdef     bsdef?  @relation(fields: [keybsdef], references: [keybsdef], onUpdate: NoAction, map: "fkvcctkeybsdef")
  hyobj     hyobj[]

  @@index([keybsdef], map: "fkhycctbsdef")
}

model hycmc {
  keyhycmc  String @id(map: "pkhycmc") @db.Char(15)
  keyhyobj  String @db.Char(15)
  keyhyrmt  String @db.Char(15)
  sortorder Int    @default(0, map: "DF__hycmc__sortorder__028D64E8") @db.TinyInt
  content   String @db.VarChar(Max)
  timestamp String @db.Char(10)
  hyobj     hyobj  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhycmckeyhyobj")
  hyrmt     hyrmt  @relation(fields: [keyhyrmt], references: [keyhyrmt], onDelete: Cascade, onUpdate: NoAction, map: "fkhycmckeyhyrmt")

  @@index([keyhyobj], map: "fkhycmckeyhyobj")
  @@index([keyhyrmt], map: "fkhycmckeyhyrmt")
}

model hycmm {
  keyhycmm  String  @id(map: "pkhycmm") @db.Char(15)
  keyhyavk  String  @db.Char(15)
  caption   String  @db.VarChar(40)
  note      String? @db.VarChar(200)
  timestamp String  @db.Char(10)
  hyavk     hyavk   @relation(fields: [keyhyavk], references: [keyhyavk], onDelete: Cascade, onUpdate: NoAction, map: "fkhycmmkeyhyavk ")

  @@index([keyhyavk], map: "fkhycmmhyavk")
}

model hycmn {
  keyhycmn  String  @id(map: "pkhycmn") @db.Char(15)
  caption   String  @unique(map: "akhycmn1") @db.VarChar(100)
  timestamp String  @db.Char(10)
  hytud     hytud[]
}

model hycmt {
  keyhycmt  String  @id(map: "pkhycmt") @db.Char(15)
  caption   String  @unique(map: "akhycmt1") @db.VarChar(100)
  timestamp String  @db.Char(10)
  hytud     hytud[]
}

model hycnc {
  keyhycnc   String @id(map: "pkhycnc") @db.Char(15)
  keyhyobj   String @db.Char(15)
  keycmuni   String @db.Char(15)
  periodval  Int    @default(0, map: "DF__hycnc__periodval__591966E4") @db.TinyInt
  notifykind Int    @default(0, map: "DF__hycnc__notifykin__5A0D8B1D") @db.TinyInt
  timestamp  String @db.Char(10)
  cmuni      cmuni  @relation(fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkhycnckeycmuni ")
  hyobj      hyobj  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhycnckeyhyobj")

  @@index([keycmuni], map: "fkhycnccmuni")
  @@index([keyhyobj], map: "fkhycnchyobj")
}

model hycnr {
  keyhycnr   String @id(map: "pkhycnr") @db.Char(15)
  keyhyrad   String @db.Char(15)
  keycmuni   String @db.Char(15)
  notifykind Int    @default(0, map: "DF__hycnr__notifykin__206AF96D") @db.TinyInt
  periodval  Int    @default(0, map: "DF__hycnr__periodval__215F1DA6") @db.TinyInt
  timestamp  String @db.Char(10)
  cmuni      cmuni  @relation(fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkhycnrkeycmuni ")
  hyrad      hyrad  @relation(fields: [keyhyrad], references: [keyhyrad], onDelete: Cascade, onUpdate: NoAction, map: "fkhycnrkeyhyrad")
}

model hycpg {
  keyhycpg  String  @id(map: "pkhycpg") @db.Char(15)
  keyhyobj  String  @db.Char(15)
  keyhyrmt  String? @db.Char(15)
  headerln  String  @db.NVarChar(Max)
  mcontent  String  @db.NVarChar(Max)
  sortorder Int     @default(0, map: "DF__hycpg__sortorder__008FDBA9")
  timestamp String  @db.Char(10)
  hyobj     hyobj   @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhycpgkeyhyobj")
  hyrmt     hyrmt?  @relation(fields: [keyhyrmt], references: [keyhyrmt], onUpdate: NoAction, map: "fkhycpgkeyhyrmt ")

  @@index([keyhyobj], map: "fkhycpgkeyhyobj")
  @@index([keyhyrmt], map: "fkhycpgkeyhyrmt")
}

model hycra {
  keyhycra   String    @id(map: "pkhycra") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keyhying   String    @db.Char(15)
  amountkind Int       @default(0, map: "DF__hycra__amountkin__5ED2403A") @db.TinyInt
  fdate      DateTime? @db.Date
  tdate      DateTime? @db.Date
  timestamp  String    @db.Char(10)
  hying      hying     @relation(fields: [keyhying], references: [keyhying], onUpdate: NoAction, map: "fkhycrakeyhying")
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhycrakeyhyobj")

  @@index([keyhying], map: "fkhycrahying")
  @@index([keyhyobj], map: "fkhycrahyobj")
}

model hyded {
  keyhyded   String   @id(map: "pkhyded") @db.Char(15)
  keyhyobj   String   @db.Char(15)
  keyhytoo   String   @db.Char(15)
  keysymdl   String   @db.Char(15)
  keyhytuy   String?  @db.Char(15)
  code       String   @db.VarChar(30)
  fdate      DateTime @db.Date
  tdate      DateTime @db.Date
  deducnote  String?  @db.VarChar(200)
  amcomment  String?  @db.VarChar(200)
  calcval    Float    @default(0, map: "DF__hyded__calcval__08312FA5") @db.Money
  changedval Float    @default(0, map: "DF__hyded__changedva__092553DE") @db.Money
  daystatsum Float    @default(0, map: "DF__hyded__daystatsu__0A197817") @db.Money
  fixedrent  Float    @default(0, map: "DF__hyded__fixedrent__0B0D9C50") @db.Money
  maxrent    Float    @default(0, map: "DF__hyded__maxrent__0C01C089") @db.Money
  minrent    Float    @default(0, map: "DF__hyded__minrent__0CF5E4C2") @db.Money
  origrent   Float    @default(0, map: "DF__hyded__origrent__0DEA08FB") @db.Money
  turnrent   Float    @default(0, map: "DF__hyded__turnrent__0EDE2D34") @db.Money
  dedbasis   Float    @default(0, map: "DF__hyded__dedbasis__0FD2516D") @db.Money
  dedstatus  Int      @default(0, map: "DF__hyded__dedstatus__10C675A6") @db.TinyInt
  invready   Int      @default(0, map: "DF__hyded__invready__11BA99DF") @db.TinyInt
  notconfirm Int      @default(0, map: "DF__hyded__notconfir__12AEBE18") @db.TinyInt
  tempdeduc  Int      @default(0, map: "DF__hyded__tempdeduc__13A2E251") @db.TinyInt
  inprogress Int      @default(0, map: "DF__hyded__inprogres__1497068A") @db.TinyInt
  chargedrnt Int      @default(0, map: "DF__hyded__chargedrn__158B2AC3") @db.TinyInt
  timestamp  String   @db.Char(10)
  hyobj      hyobj    @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, map: "fkhydedkeyhyobj")
  hytoo      hytoo    @relation(fields: [keyhytoo], references: [keyhytoo], onUpdate: NoAction, map: "fkhydedkeyhytoo ")
  hytuy      hytuy?   @relation(fields: [keyhytuy], references: [keyhytuy], onDelete: NoAction, onUpdate: NoAction, map: "fkhydedkeyhytuy ")

  @@index([keyhyobj], map: "fkhydedhyobj")
  @@index([keyhytoo], map: "fkhydedhytoo")
  @@index([keyhytuy], map: "fkhydedhytuy")
  @@index([keysymdl], map: "fkhydedsymdl")
}

model hydin {
  keyhydin   String  @id(map: "pkhydin") @db.Char(15)
  keyhyobj   String  @db.Char(15)
  textline   String  @db.VarChar(200)
  name2      String? @db.VarChar(200)
  number     String? @db.VarChar(200)
  dinorder   Int     @db.SmallInt
  typeofline Int     @default(0, map: "DF__hydin__typeoflin__299C035F") @db.TinyInt
  timestamp  String  @db.Char(10)

  @@index([keyhyobj], map: "fkhydinhyobj")
}

model hydio {
  keyhydio  String    @id(map: "pkhydio") @db.Char(15)
  keycmobj  String    @db.Char(15)
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhydiokeycmobj")

  @@index([keycmobj], map: "fkhydiocmobj")
}

model hydis {
  keyhydis   String    @id(map: "pkhydis") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keycmrpt   String    @db.Char(15)
  keydorev   String    @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keybsdef   String?   @db.Char(15)
  created    DateTime  @db.DateTime
  dstype     Int       @default(1, map: "DF__hydis__dstype__1B440419") @db.TinyInt
  dsguid     String?   @db.UniqueIdentifier
  signtype   Int       @default(1, map: "DF__hydis__signtype__1C382852") @db.TinyInt
  signed     DateTime? @db.DateTime
  senddate   DateTime? @db.DateTime
  validto    DateTime? @db.DateTime
  canceldate DateTime? @db.DateTime
  extdocid   String?   @db.VarChar(100)
  toaddress  String?   @db.VarChar(80)
  authtype   String?   @db.VarChar(30)
  timestamp  String    @db.Char(10)
  bsdef      bsdef?    @relation(fields: [keybsdef], references: [keybsdef], onDelete: NoAction, onUpdate: NoAction, map: "fkhydiskeybsdef")
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkhydiskeycmctc")
  cmrpt      cmrpt     @relation(fields: [keycmrpt], references: [keycmrpt], onUpdate: NoAction, map: "fkhydiskeycmrpt")
  dorev      dorev     @relation(fields: [keydorev], references: [keydorev], onUpdate: NoAction, map: "fkhydiskeydorev ")
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhydiskeyhyobj")

  @@unique([keyhyobj, keydorev], map: "akhydis1")
  @@index([keybsdef], map: "fkhydisbsdef")
  @@index([keycmctc], map: "fkhydiscmctc")
  @@index([keycmrpt], map: "fkhydiscmrpt")
  @@index([keydorev], map: "fkhydisdorev")
  @@index([keyhyobj], map: "fkhydishyobj")
  @@index([extdocid], map: "hydisextdocid")
}

model hydnr {
  keyhydnr   String @id(map: "pkhydnr") @db.Char(15)
  keybalgt   String @db.Char(15)
  calcmethod Int    @db.TinyInt
  calcvalue  Int    @db.TinyInt
  timestamp  String @db.Char(10)
  balgt      balgt  @relation(fields: [keybalgt], references: [keybalgt], onDelete: Cascade, onUpdate: NoAction, map: "fkhydnrkeybalgt")

  @@index([keybalgt], map: "fkhydnrbalgt")
}

model hydsp {
  keyhydsp  String    @id(map: "pkhydsp") @db.Char(15)
  keyhyuto  String    @db.Char(15)
  disptime  DateTime? @db.DateTime
  dispby    Int       @default(0, map: "DF__hydsp__dispby__451C8FD8") @db.TinyInt
  name      String?   @db.VarChar(100)
  phone     String?   @db.VarChar(30)
  mobile    String?   @db.VarChar(30)
  email     String?   @db.VarChar(80)
  title     String?   @db.VarChar(30)
  address   String?   @db.VarChar(200)
  timestamp String    @db.Char(10)
  bkerb     bkerb[]
  hyuto     hyuto     @relation(fields: [keyhyuto], references: [keyhyuto], onDelete: Cascade, onUpdate: NoAction, map: "fkhydspkeyhyuto ")

  @@index([keyhyuto], map: "fkhydsphyuto")
}

model hyegk {
  keyhyegk  String @id(map: "PK__hyegk__5CA28C58") @db.Char(15)
  keyhyegn  String @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  value     Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keycode], map: "fkhyegkcode")
  @@index([keydbtbl], map: "fkhyegkdbtbl")
  @@index([keyhyegn], map: "fkhyegkhyegn")
}

model hyegn {
  keyhyegn  String  @id(map: "PK__hyegn__5E8AD4CA") @db.Char(15)
  keycmobt  String? @db.Char(15)
  keysymdl  String  @db.Char(15)
  caption   String  @db.Char(50)
  egntype   Int     @db.TinyInt
  publish   Int     @default(1, map: "DF__hyegn__publish__5F7EF903") @db.TinyInt
  timestamp String  @db.Char(10)

  @@unique([keysymdl, keycmobt, egntype, caption], map: "akhyegn1")
  @@index([keycmobt], map: "fkhyegncmobt")
  @@index([keysymdl], map: "fkhyegnsymdl")
}

model hyein {
  keyhyein  String    @id(map: "PK__hyein__05E4990D") @db.Char(15)
  keycmcmp  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmctc2 String?   @db.Char(15)
  keyhyobj  String    @db.Char(15)
  invdate   DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keycmcmp], map: "fkhyeincmcmp")
  @@index([keycmctc], map: "fkhyeincmctc")
  @@index([keycmctc2], map: "fkhyeincmctc2")
  @@index([keyhyobj], map: "fkhyeinhyobj")
}

model hyete {
  keyhyete   String    @id(map: "pkhyete") @db.Char(15)
  finished   DateTime  @db.DateTime
  targetdate DateTime? @db.Date
  timestamp  String    @db.Char(10)
}

model hyevt {
  keyhyevt   String  @id(map: "PK__hyevt__40C567B9") @db.Char(15)
  keysymdl   String  @db.Char(15)
  keycmqry   String? @db.Char(15)
  keydbtbl   String? @db.Char(15)
  keycode    String? @db.Char(15)
  action     Int     @db.SmallInt
  actiontrig Int     @db.SmallInt
  timestamp  String  @db.Char(10)
  bktrd      bktrd[]

  @@index([keycmqry], map: "fkhyevtcmqry")
  @@index([keycode], map: "fkhyevtcode")
  @@index([keydbtbl], map: "fkhyevtdbtbl")
  @@index([keysymdl], map: "fkhyevtsymdl")
}

model hyexp {
  keyhyexp  String @id(map: "pkhyexp") @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  type      Int    @db.SmallInt
  expstamp  String @db.Char(10)
  timestamp String @db.Char(10)

  @@index([keycode], map: "fkhyexpcode")
  @@index([keydbtbl], map: "fkhyexpdbtbl")
}

model hyfak {
  keyhyfak   String  @id(map: "pkhyfak") @db.Char(15)
  keyhyrep   String  @db.Char(15)
  keycmctc   String  @db.Char(15)
  keycmctc2  String? @db.Char(15)
  keycmctc3  String? @db.Char(15)
  keycmctc4  String? @db.Char(15)
  keyhysor   String? @db.Char(15)
  shareprcnt Decimal @default(0, map: "DF__hyfak__shareprcn__4F3009F7") @db.Decimal(5, 2)
  amount     Float   @default(0, map: "DF__hyfak__amount__50242E30") @db.Money
  invprint   Int     @default(1, map: "DF__hyfak__invprint__51185269") @db.TinyInt
  salarydedu Int     @default(0, map: "DF__hyfak__salaryded__520C76A2") @db.TinyInt
  timestamp  String  @db.Char(10)

  @@index([keycmctc], map: "fkhyfakcmctc")
  @@index([keycmctc2], map: "fkhyfakcmctc2")
  @@index([keycmctc3], map: "fkhyfakcmctc3")
  @@index([keycmctc4], map: "fkhyfakcmctc4")
  @@index([keyhyrep], map: "fkhyfakhyrep")
  @@index([keyhysor], map: "fkhyfakhysor")
  @@index([keyhyrep, keycmctc], map: "inhyfak_22D0X41XX")
}

model hyfii {
  keyhyfii  String  @id(map: "pkhyfii") @db.Char(15)
  caption   String  @unique(map: "akhyfii1") @db.VarChar(60)
  timestamp String  @db.Char(10)
  hyfin     hyfin[]
}

model hyfin {
  keyhyfin   String  @id(map: "pkhyfin") @db.Char(15)
  keyhyobj   String  @db.Char(15)
  keyhyavk   String  @db.Char(15)
  keyhyfir   String? @db.Char(15)
  keyhyfii   String? @db.Char(15)
  noadults   Int     @default(1, map: "DF__hyfin__noadults__5DC3401A") @db.TinyInt
  nochildren Int     @default(0, map: "DF__hyfin__nochildre__5EB76453") @db.TinyInt
  income     Float   @default(0, map: "DF__hyfin__income__5FAB888C") @db.Money
  timestamp  String  @db.Char(10)
  hyavk      hyavk   @relation(fields: [keyhyavk], references: [keyhyavk], onDelete: Cascade, onUpdate: NoAction, map: "fkhyfinkeyhyavk")
  hyfii      hyfii?  @relation(fields: [keyhyfii], references: [keyhyfii], onDelete: NoAction, onUpdate: NoAction, map: "fkhyfinkeyhyfii ")
  hyfir      hyfir?  @relation(fields: [keyhyfir], references: [keyhyfir], onDelete: NoAction, onUpdate: NoAction, map: "fkhyfinkeyhyfir ")
  hyobj      hyobj   @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyfinkeyhyobj")

  @@unique([keyhyobj, keyhyavk], map: "akhyfin1")
  @@index([keyhyavk], map: "fkhyfinhyavk")
  @@index([keyhyfii], map: "fkhyfinhyfii")
  @@index([keyhyfir], map: "fkhyfinhyfir")
  @@index([keyhyobj], map: "fkhyfinhyobj")
}

model hyfir {
  keyhyfir  String  @id(map: "pkhyfir") @db.Char(15)
  caption   String  @unique(map: "akhyfir1") @db.VarChar(60)
  timestamp String  @db.Char(10)
  hyfin     hyfin[]
}

model hyfkh {
  keyhyfkh  String  @id(map: "pkhyfkh") @db.Char(15)
  keykrfkh  String  @db.Char(15)
  keyhyobj  String  @db.Char(15)
  keyhyobj2 String? @db.Char(15)
  keyhyinp  String? @db.Char(15)
  keyhyfak  String? @db.Char(15)
  keyhyavi  String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keyhyavi], map: "fkhyfkhhyavi")
  @@index([keyhyfak], map: "fkhyfkhhyfak")
  @@index([keyhyinp], map: "fkhyfkhhyinp")
  @@index([keyhyobj], map: "fkhyfkhhyobj")
  @@index([keyhyobj2], map: "fkhyfkhhyobj2")
  @@index([keykrfkh], map: "fkhyfkhkrfkh")
  @@index([keyhyobj2, keyhyfkh, keykrfkh], map: "inhyfkh_2A00N67U1")
}

model hyfkr {
  keyhyfkr  String  @id(map: "pkhyfkr") @db.Char(15)
  keykrfkr  String  @db.Char(15)
  keyhyfkh  String  @db.Char(15)
  keycmobj  String? @db.Char(15)
  keyhyrad  String? @db.Char(15)
  rounding  Float   @default(0, map: "DF__hyfkr__rounding__0892A485") @db.Money
  timestamp String  @db.Char(10)

  @@index([keycmobj], map: "fkhyfkrcmobj")
  @@index([keyhyfkh], map: "fkhyfkrhyfkh")
  @@index([keyhyrad], map: "fkhyfkrhyrad")
  @@index([keykrfkr], map: "fkhyfkrkrfkr")
}

model hyfok {
  keyhyfok   String    @id(map: "pkhyfok") @db.Char(15)
  keyhyspt   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmobj   String?   @db.Char(15)
  createdate DateTime  @db.DateTime
  batchdate  DateTime? @db.DateTime
  procstatus Int       @default(0, map: "DF__hyfok__procstatu__4803E97B") @db.TinyInt
  timestamp  String    @db.Char(10)
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkhyfokkeycmctc")
  hyspt      hyspt     @relation(fields: [keyhyspt], references: [keyhyspt], onUpdate: NoAction, map: "fkhyfokkeyhyspt")

  @@index([keycmctc], map: "fkhyfokcmctc")
  @@index([keycmobj], map: "fkhyfokhyinf")
  @@index([keyhyspt], map: "fkhyfokhyspt")
}

model hyfor {
  keyhyfor   String  @id(map: "pkhyfor") @db.Char(15)
  keyhyobj   String  @db.Char(15)
  keyhyinp   String? @db.Char(15)
  forfdag    String  @db.Char(4)
  huvforfdat Int     @db.TinyInt
  periodfrom String  @db.Char(4)
  periodtom  String  @db.Char(4)
  startar    String? @db.Char(4)
  intervall  Int?    @db.TinyInt
  andel      Float   @default(0, map: "DF__hyfor__andel__6A9B3A02") @db.Money
  forfaller  String  @db.Char(1)
  timestamp  String  @db.Char(10)

  @@index([keyhyinp], map: "fkhyforhyinp")
  @@index([keyhyobj], map: "fkhyforhyobj")
  @@index([keyhyfor, keyhyobj, forfdag, huvforfdat], map: "inhyfor_37M18VSG0")
  @@index([periodtom, forfdag, periodfrom, forfaller, andel, keyhyobj], map: "inhyfor_37M18VSGU")
}

model hyfra {
  keyhyfra   String  @id(map: "pkhyfra") @db.Char(15)
  keyhyrad   String  @db.Char(15)
  keycmart   String  @db.Char(15)
  keyhyobj   String  @db.Char(15)
  keycmobj   String  @db.Char(15)
  akthyratot Float   @db.Money
  momsproc   Decimal @db.Decimal(7, 2)
  timestamp  String  @db.Char(10)
  cmart      cmart   @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkhyfrakeycmart")
  hyrad      hyrad   @relation(fields: [keyhyrad], references: [keyhyrad], onDelete: Cascade, onUpdate: NoAction, map: "fkhyfrakeyhyrad")

  @@unique([keyhyrad, keycmobj], map: "akhyfra1")
  @@index([keycmart], map: "fkhyfracmart")
  @@index([keycmobj], map: "fkhyfracmobj")
  @@index([keyhyobj], map: "fkhyfrahyobj")
  @@index([keyhyrad], map: "fkhyfrahyrad")
}

model hyhav {
  keyhyhav  String  @id(map: "pkhyhav") @db.Char(15)
  keyhyobt  String  @db.Char(15)
  hyhavben  String  @db.Char(30)
  kontruppg Int     @db.TinyInt
  repabkod  Int     @default(0, map: "DF__hyhav__repabkod__0A0E285F") @db.TinyInt
  timestamp String  @db.Char(10)
  hyaty     hyaty[]
  hyobj     hyobj[]
  stupt     stupt[]

  @@index([keyhyobt], map: "fkhyhavhyobt")
}

model hyims {
  keyhyims  String @id(map: "pkhyims") @db.Char(15)
  keybkpuo  String @db.Char(15)
  keyhyobj  String @db.Char(15)
  timestamp String @db.Char(10)
  bkpuo     bkpuo  @relation(fields: [keybkpuo], references: [keybkpuo], onDelete: Cascade, onUpdate: NoAction, map: "fkhyimskeybkpuo")
  hyobj     hyobj  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyimskeyhyobj")

  @@index([keybkpuo], map: "fkhyimsbkpuo")
  @@index([keyhyobj], map: "fkhyimshyobj")
}

model hyinc {
  keyhyinc  String   @id(map: "pkhyinc") @db.Char(15)
  familysit Int      @db.TinyInt
  fdate     DateTime @db.DateTime
  tdate     DateTime @db.DateTime
  rentmin   Float?   @db.Money
  rentmax   Float?   @db.Money
  incomemin Float?   @db.Money
  incomemax Float?   @db.Money
  timestamp String   @db.Char(10)
}

model hyinf {
  keyhyinf                     String    @id(map: "pkhyinf") @db.Char(15)
  keycmobj                     String    @unique(map: "akhyinf1") @db.Char(15)
  keyhyint                     String    @db.Char(15)
  keybkvis                     String?   @db.Char(15)
  keycmind                     String?   @db.Char(15)
  keycminv                     String?   @db.Char(15)
  keycmvat                     String?   @db.Char(15)
  keycmvat2                    String?   @db.Char(15)
  keycmvat3                    String?   @db.Char(15)
  keycmvat4                    String?   @db.Char(15)
  keyhyvaa                     String?   @db.Char(15)
  keybahea                     String?   @db.Char(15)
  keybarex                     String?   @db.Char(15)
  keycmcte                     String?   @db.Char(15)
  hyresid                      String?   @db.VarChar(30)
  generation                   Int?      @db.SmallInt
  startgen                     Int?      @db.TinyInt
  lmnr                         String?   @db.Char(5)
  prynumber                    String?   @db.VarChar(30)
  shareno                      String?   @db.VarChar(60)
  upplform                     Int?      @db.TinyInt
  upplformnu                   Int?      @db.TinyInt
  shortstay                    Int       @db.TinyInt
  andelstal                    Decimal?  @db.Decimal(22, 7)
  aixrent                      Decimal?  @db.Decimal(8, 7)
  sharevalue                   Float?    @db.Money
  votecount                    Int?      @db.TinyInt
  insatspre                    Float?    @db.Money
  insatsfors                   Float?    @db.Money
  insats                       Float?    @db.Money
  inputdate                    DateTime? @db.DateTime
  upplavg                      Float?    @db.Money
  letfeedate                   DateTime? @db.DateTime
  oaterkap                     Float?    @db.Money
  planarsavg                   Float?    @db.Money
  inflyttdat                   DateTime? @db.DateTime
  direktuth                    Int?      @db.TinyInt
  akthyratot                   Float?    @db.Money
  konthyra                     Float?    @db.Money
  draft                        Int       @default(0, map: "DF__hyinf__draft__535320DE") @db.TinyInt
  ejbrinsats                   Int       @db.TinyInt
  ejbrfnd                      Int       @db.TinyInt
  statfrom                     DateTime  @db.DateTime
  stattom                      DateTime  @db.DateTime
  lossfrom                     DateTime? @db.DateTime
  lossto                       DateTime? @db.DateTime
  saljstopp                    Int       @db.TinyInt
  pointtype                    Int       @default(0, map: "DF__hyinf__pointtype__54474517") @db.TinyInt
  allowance                    Int       @default(0, map: "DF__hyinf__allowance__553B6950") @db.TinyInt
  fohenergyc                   Int       @default(0, map: "DF__hyinf__fohenergy__562F8D89") @db.TinyInt
  targetperc                   Decimal?  @db.Decimal(4, 1)
  targetrent                   Float?    @db.Money
  points                       Int?      @db.SmallInt
  persmin                      Int?      @db.TinyInt
  persmax                      Int?      @db.TinyInt
  persagemin                   Int?      @db.TinyInt
  persagemax                   Int?      @db.TinyInt
  tentimemin                   Int?      @db.TinyInt
  increntmin                   Decimal?  @db.Decimal(4, 2)
  otherinfo                    String?   @db.VarChar(200)
  rexcomment                   String?   @db.VarChar(200)
  fcobject                     Int       @default(0, map: "DF__hyinf__fcobject__5723B1C2") @db.TinyInt
  fcstatus                     Int       @default(0, map: "DF__hyinf__fcstatus__5817D5FB") @db.TinyInt
  fcupgneed                    Int       @default(0, map: "DF__hyinf__fcupgneed__590BFA34") @db.TinyInt
  fcdate                       DateTime? @db.DateTime
  fccomment                    String?   @db.VarChar(250)
  bguused                      Int       @default(0, map: "DF__hyinf__bguused__5A001E6D") @db.TinyInt
  lakeview                     Int       @default(0, map: "DF__hyinf__lakeview__5AF442A6") @db.TinyInt
  vatstat                      Decimal   @default(0, map: "DF__hyinf__vatstat__5BE866DF") @db.Decimal(4, 2)
  label                        Int       @default(1, map: "DF__hyinf__label__5CDC8B18") @db.TinyInt
  renovation                   Int       @default(0, map: "DF__hyinf__renovatio__5DD0AF51") @db.TinyInt
  daeb                         Int       @default(1, map: "DF__hyinf__daeb__5EC4D38A") @db.TinyInt
  stdyrrent                    Float?    @db.Money
  discfee                      Float     @default(0, map: "DF__hyinf__discfee__5FB8F7C3") @db.Money
  rentcalcm                    Int       @default(0, map: "DF__hyinf__rentcalcm__60AD1BFC") @db.TinyInt
  deletemark                   Int       @default(0, map: "DF__hyinf__deletemar__61A14035") @db.TinyInt
  timestamp                    String    @db.Char(10)
  bahea                        bahea?    @relation(fields: [keybahea], references: [keybahea], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfbahea ")
  barex                        barex?    @relation(fields: [keybarex], references: [keybarex], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfbarex ")
  cmcte                        cmcte?    @relation(fields: [keycmcte], references: [keycmcte], onUpdate: NoAction, map: "fkhyinfcmcte ")
  hyvaa                        hyvaa?    @relation(fields: [keyhyvaa], references: [keyhyvaa], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfhyvaa ")
  cmind                        cmind?    @relation(fields: [keycmind], references: [keycmind], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmind ")
  cminv                        cminv?    @relation(fields: [keycminv], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycminv ")
  cmobj                        cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyinfkeycmobj ")
  cmvat_hyinf_keycmvatTocmvat  cmvat?    @relation("hyinf_keycmvatTocmvat", fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmvat ")
  cmvat_hyinf_keycmvat2Tocmvat cmvat?    @relation("hyinf_keycmvat2Tocmvat", fields: [keycmvat2], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmvat2 ")
  cmvat_hyinf_keycmvat3Tocmvat cmvat?    @relation("hyinf_keycmvat3Tocmvat", fields: [keycmvat3], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmvat3 ")
  cmvat_hyinf_keycmvat4Tocmvat cmvat?    @relation("hyinf_keycmvat4Tocmvat", fields: [keycmvat4], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmvat4 ")
  hyint                        hyint     @relation(fields: [keyhyint], references: [keyhyint], onUpdate: NoAction, map: "fkhyinfkeyhyint")

  @@index([keybahea], map: "fkhyinfbahea")
  @@index([keybarex], map: "fkhyinfbarex")
  @@index([keybkvis], map: "fkhyinfbkvis")
  @@index([keycmcte], map: "fkhyinfcmcte")
  @@index([keycmind], map: "fkhyinfcmind")
  @@index([keycminv], map: "fkhyinfcminv")
  @@index([keycmvat], map: "fkhyinfcmvat")
  @@index([keycmvat2], map: "fkhyinfcmvat2")
  @@index([keycmvat3], map: "fkhyinfcmvat3")
  @@index([keycmvat4], map: "fkhyinfcmvat4")
  @@index([keyhyint], map: "fkhyinfhyint")
  @@index([keyhyvaa], map: "fkhyinfhyvaa")
  @@index([hyresid], map: "inhyinf_2J70GWSR9")
}

model hying {
  keyhying                     String   @id(map: "pkhying") @db.Char(15)
  keyhyink                     String?  @db.Char(15)
  keycmind                     String?  @db.Char(15)
  keycminv                     String?  @db.Char(15)
  keycminv2                    String?  @db.Char(15)
  keycminv3                    String?  @db.Char(15)
  baseamount                   Decimal  @default(0, map: "DF__hying__baseamoun__6FEF5F8C") @db.Decimal(15, 2)
  actamount                    Decimal? @db.Decimal(15, 2)
  regtype                      Int      @default(0, map: "DF__hying__regtype__70E383C5") @db.TinyInt
  indexshare                   Decimal  @default(0, map: "DF__hying__indexshar__71D7A7FE") @db.Decimal(7, 4)
  interval                     Int      @default(1, map: "DF__hying__interval__72CBCC37") @db.SmallInt
  sendnotice                   Int      @default(0, map: "DF__hying__sendnotic__73BFF070") @db.TinyInt
  noticedays                   Int      @default(0, map: "DF__hying__noticeday__74B414A9") @db.SmallInt
  chngmnths                    Int      @default(1, map: "DF__hying__chngmnths__75A838E2") @db.SmallInt
  chngdimnth                   Int      @default(1, map: "DF__hying__chngdimnt__769C5D1B") @db.TinyInt
  timestamp                    String   @db.Char(10)
  hycra                        hycra[]
  cmind                        cmind?   @relation(fields: [keycmind], references: [keycmind], onDelete: NoAction, onUpdate: NoAction, map: "fkhyingkeycmind ")
  cminv_hying_keycminvTocminv  cminv?   @relation("hying_keycminvTocminv", fields: [keycminv], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyingkeycminv ")
  cminv_hying_keycminv2Tocminv cminv?   @relation("hying_keycminv2Tocminv", fields: [keycminv2], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyingkeycminv2 ")
  cminv_hying_keycminv3Tocminv cminv?   @relation("hying_keycminv3Tocminv", fields: [keycminv3], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyingkeycminv3 ")
  hyink                        hyink?   @relation(fields: [keyhyink], references: [keyhyink], onDelete: NoAction, onUpdate: NoAction, map: "fkhyingkeyhyink ")
  hyinr                        hyinr[]
  hysec                        hysec[]
  hytoo                        hytoo[]
  hytus_hytus_keyhyingTohying  hytus[]  @relation("hytus_keyhyingTohying")
  hytus_hytus_keyhying2Tohying hytus[]  @relation("hytus_keyhying2Tohying")
  pdair_pdair_keyhyingTohying  pdair[]  @relation("pdair_keyhyingTohying")
  pdair_pdair_keyhying2Tohying pdair[]  @relation("pdair_keyhying2Tohying")

  @@index([keycmind], map: "fkhyingcmind")
  @@index([keycminv], map: "fkhyingcminv")
  @@index([keycminv2], map: "fkhyingcminv2")
  @@index([keycminv3], map: "fkhyingcminv3")
  @@index([keyhyink], map: "fkhyinghyink")
}

model hyini {
  keyhyini  String  @id(map: "pkhyini") @db.Char(15)
  keyhyinl  String  @db.Char(15)
  caption   String  @db.VarChar(30)
  comment   String? @db.VarChar(1000)
  itemcount Int
  timestamp String  @db.Char(10)
  hyinl     hyinl   @relation(fields: [keyhyinl], references: [keyhyinl], onDelete: Cascade, map: "fkhyinikeyhyinl ")

  @@index([keyhyinl], map: "fkhyinihyinl")
}

model hyink {
  keyhyink   String   @id(map: "pkhyink") @db.Char(15)
  hyinkben   String?  @db.Char(30)
  minstfor   Decimal  @db.Decimal(6, 2)
  minstforba Decimal? @db.Decimal(6, 2)
  kalkavr    Int?     @db.TinyInt
  procentavr Int      @db.TinyInt
  hyraavr    Int      @db.SmallInt
  bashyra    Int      @db.SmallInt
  alwayscalc Int      @default(0, map: "DF__hyink__alwayscal__055490C6") @db.TinyInt
  alwaysainc Float?   @db.Money
  maxperchan Float?   @db.Money
  repabkod   Int      @db.TinyInt
  endasthoj  Int      @db.TinyInt
  calcfrbase Int      @default(1, map: "DF__hyink__calcfrbas__0648B4FF") @db.TinyInt
  usepreyear Int      @default(0, map: "DF__hyink__usepreyea__073CD938") @db.TinyInt
  barenifdec Int      @default(0, map: "DF__hyink__barenifde__0830FD71") @db.TinyInt
  enuminterv Int      @default(12, map: "DF__hyink__enuminter__092521AA") @db.TinyInt
  sortorder  Int?     @db.SmallInt
  isinuse    Int      @default(1, map: "DF__hyink__isinuse__0A1945E3") @db.TinyInt
  timestamp  String   @db.Char(10)
  burad      burad[]
  hying      hying[]
  hyisr      hyisr[]
  hyrad      hyrad[]
}

model hyinl {
  keyhyinl  String  @id(map: "pkhyinl") @db.Char(15)
  keyhyobj  String? @db.Char(15)
  caption   String  @db.VarChar(30)
  timestamp String  @db.Char(10)
  hyini     hyini[]
}

model hyinp {
  keyhyinp   String    @id(map: "PK__hyinp__0EAEE938") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  inskrdat   DateTime? @db.DateTime
  friforf    Int       @db.TinyInt
  fakturaper Int?      @db.TinyInt
  forfaller  String?   @db.Char(1)
  timestamp  String    @db.Char(10)

  @@index([keyhyobj], map: "fkhyinphyobj")
}

model hyinr {
  keyhyinr                     String    @id(map: "pkhyinr") @db.Char(15)
  keyhying                     String    @db.Char(15)
  keycminv                     String    @db.Char(15)
  keycminv2                    String    @db.Char(15)
  amount                       Decimal   @default(0, map: "DF__hyinr__amount__2754D543") @db.Decimal(15, 2)
  regdate                      DateTime  @db.Date
  regfrom                      DateTime  @db.Date
  noticedate                   DateTime? @db.Date
  timestamp                    String    @db.Char(10)
  cminv_hyinr_keycminvTocminv  cminv     @relation("hyinr_keycminvTocminv", fields: [keycminv], references: [keycminv], onUpdate: NoAction, map: "fkhyinrkeycminv ")
  cminv_hyinr_keycminv2Tocminv cminv     @relation("hyinr_keycminv2Tocminv", fields: [keycminv2], references: [keycminv], onUpdate: NoAction, map: "fkhyinrkeycminv2 ")
  hying                        hying     @relation(fields: [keyhying], references: [keyhying], onDelete: Cascade, onUpdate: NoAction, map: "fkhyinrkeyhying")

  @@index([keycminv], map: "fkhyinrcminv")
  @@index([keycminv2], map: "fkhyinrcminv2")
  @@index([keyhying], map: "fkhyinrhying")
}

model hyint {
  keyhyint   String  @id(map: "pkhyint") @db.Char(15)
  keybkkty   String? @db.Char(15)
  code       String  @db.Char(10)
  caption    String? @db.Char(30)
  minage     Int?    @db.TinyInt
  maxage     Int?    @db.TinyInt
  lmcat      Int     @default(0, map: "DF__hyint__lmcat__1F8C8CD8") @db.TinyInt
  publiceras Int     @default(0, map: "DF__hyint__publicera__2080B111") @db.TinyInt
  lbcreate   Int     @default(1, map: "DF__hyint__lbcreate__2174D54A") @db.TinyInt
  tuovisible Int     @default(0, map: "DF__hyint__tuovisibl__2268F983") @db.TinyInt
  familysit  Int     @default(0, map: "DF__hyint__familysit__235D1DBC") @db.TinyInt
  timestamp  String  @db.Char(10)
  hyinf      hyinf[]
  bkkty      bkkty?  @relation(fields: [keybkkty], references: [keybkkty], onDelete: NoAction, onUpdate: NoAction, map: "fkhyintkeybkkty")

  @@index([keybkkty], map: "fkhyintbkkty")
}

model hyinv {
  keyhyinv  String    @id(map: "pkhyinv") @db.Char(15)
  keycmobj  String    @db.Char(15)
  fdate     DateTime? @db.Date
  tdate     DateTime? @db.Date
  vat       Int       @default(0, map: "DF__hyinv__vat__37D7A353") @db.TinyInt
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyinvkeycmobj")

  @@index([keycmobj], map: "fkhyinvkeycmobj")
}

model hyisr {
  keyhyisr   String @id(map: "pkhyisr") @db.Char(15)
  keyhyink   String @db.Char(15)
  startvalue Float  @db.Money
  stopvalue  Float? @db.Money
  percentage Float  @db.Money
  timestamp  String @db.Char(10)
  hyink      hyink  @relation(fields: [keyhyink], references: [keyhyink], onDelete: Cascade, onUpdate: NoAction, map: "fkhyisrkeyhyink")

  @@unique([keyhyink, startvalue, stopvalue], map: "akhyisr1")
  @@index([keyhyink], map: "fkhyisrhyink")
}

model hykop {
  keyhykop   String   @id(map: "pkhykop") @db.Char(15)
  keycmobj   String   @db.Char(15)
  keyhyobj   String   @db.Char(15)
  avtalsarea Decimal? @db.Decimal(14, 2)
  varmearea  Decimal? @db.Decimal(14, 2)
  gemarea    Decimal? @db.Decimal(14, 2)
  rentarea   Decimal? @db.Decimal(14, 2)
  ordning    Int      @db.SmallInt
  timestamp  String   @db.Char(10)
  hyobj      hyobj    @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhykopkeyhyobj")
  hyrol      hyrol[]

  @@unique([keycmobj, keyhyobj], map: "akhykop1")
  @@index([keycmobj], map: "fkhykopcmobj")
  @@index([keyhyobj], map: "fkhykophyobj")
}

model hykrl {
  keyhykrl   String    @id(map: "pkhykrl") @db.Char(15)
  keycmctc   String    @db.Char(15)
  invokedate DateTime  @db.DateTime
  searchdate DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkhykrlkeycmctc")

  @@index([keycmctc], map: "hykrlkeycmctc")
}

model hylan {
  keyhylan  String  @id(map: "pkhylan") @db.Char(15)
  keycmobj  String  @db.Char(15)
  keylnobj  String  @db.Char(15)
  loanshare Decimal @db.Decimal(10, 7)
  timestamp String  @db.Char(10)

  @@unique([keycmobj, keylnobj], map: "akhylan1")
  @@index([keycmobj], map: "fkhylancmobj")
  @@index([keylnobj], map: "fkhylanlnobj")
}

model hyled {
  keyhyled  String    @id(map: "PK__hyled__66CB1510") @db.Char(15)
  keyhyinf  String    @db.Char(15)
  keyhyobj  String?   @db.Char(15)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keyhyinf], map: "fkhyledhyinf")
  @@index([keyhyobj], map: "fkhyledhyobj")
  @@index([tdate, keyhyled, keyhyobj, keyhyinf], map: "inhyled_3RC0TA9VG")
  @@index([tdate, keyhyled], map: "inhyled_3RC0TA9XC")
  @@index([tdate, keyhyled, keyhyobj, keyhyinf], map: "inhyled_ledigaobj")
  @@index([tdate, keyhyled], map: "inhyled_ledigaobj2")
}

model hymrp {
  keyhymrp  String    @id(map: "pkhymrp") @db.Char(15)
  keycmobj  String    @db.Char(15)
  keyprtyp  String    @db.Char(15)
  keyprcat  String    @db.Char(15)
  stdrent   Float     @default(0, map: "DF__hymrp__stdrent__03174299") @db.Money
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhymrpkeycmobj ")
  prcat     prcat     @relation(fields: [keyprcat], references: [keyprcat], onUpdate: NoAction, map: "fkhymrpkeyprcat ")
  prtyp     prtyp     @relation(fields: [keyprtyp], references: [keyprtyp], onUpdate: NoAction, map: "fkhymrpkeyprtyp ")

  @@index([keycmobj], map: "fkhymrpkeycmobj")
  @@index([keyprcat], map: "fkhymrpkeyprcat")
  @@index([keyprtyp], map: "fkhymrpkeyprtyp")
}

model hyobj {
  keyhyobj                     String    @id(map: "pkhyobj") @db.Char(15)
  keysymdl                     String    @db.Char(15)
  keyhyobt                     String    @db.Char(15)
  keyhyobt2                    String?   @db.Char(15)
  keycmcmp                     String?   @db.Char(15)
  keycmcmp2                    String?   @db.Char(15)
  keyhyobj2                    String?   @db.Char(15)
  keyhyhav                     String    @db.Char(15)
  keycmuni                     String    @db.Char(15)
  keycmuni2                    String    @db.Char(15)
  keycmuni3                    String    @db.Char(15)
  keyhysor                     String?   @db.Char(15)
  keysyusr                     String?   @db.Char(15)
  keysyusr2                    String?   @db.Char(15)
  keyiksbg                     String?   @db.Char(15)
  keyikslr                     String?   @db.Char(15)
  keyprdct                     String?   @db.Char(15)
  keycmart                     String?   @db.Char(15)
  keycmart2                    String?   @db.Char(15)
  keytrars                     String?   @db.Char(15)
  keytrare                     String?   @db.Char(15)
  keycmcpt                     String?   @db.Char(15)
  keycmtrd                     String?   @db.Char(15)
  keyhycct                     String?   @db.Char(15)
  keyhyuto                     String?   @db.Char(15)
  hyobjben                     String    @unique(map: "akhyobj1") @db.VarChar(35)
  avtalsort                    String?   @db.VarChar(30)
  avtalsdat                    DateTime? @db.DateTime
  fdate                        DateTime? @db.DateTime
  overlatdat                   DateTime? @db.DateTime
  tdate                        DateTime? @db.DateTime
  sistadeb                     DateTime? @db.DateTime
  conperfrom                   DateTime? @db.Date
  conperto                     DateTime? @db.Date
  fakturaper                   Int       @db.TinyInt
  forfaller                    String?   @db.Char(1)
  friforf                      Int       @default(0, map: "DF__hyobj__friforf__6E6A3290") @db.TinyInt
  daysexpire                   Int?      @db.SmallInt
  yearexpdat                   String?   @db.Char(4)
  invstop                      Int       @default(0, map: "DF__hyobj__invstop__6F5E56C9") @db.TinyInt
  draft                        Int       @default(0, map: "DF__hyobj__draft__70527B02") @db.TinyInt
  noclaim                      Int       @default(0, map: "DF__hyobj__noclaim__71469F3B") @db.TinyInt
  utskriven                    DateTime? @db.DateTime
  waitsign                     Int       @default(0, map: "DF__hyobj__waitsign__723AC374") @db.TinyInt
  godkdatum                    DateTime? @db.DateTime
  godksign                     String?   @db.VarChar(80)
  ejbesittn                    Int       @default(0, map: "DF__hyobj__ejbesittn__732EE7AD") @db.TinyInt
  uppsdatum                    DateTime? @db.DateTime
  uppssign                     String?   @db.VarChar(80)
  uppsomfdat                   DateTime? @db.DateTime
  makuldatum                   DateTime? @db.DateTime
  makulsign                    String?   @db.VarChar(4)
  konthyra                     Float?    @db.Money
  markning                     String?   @db.VarChar(50)
  uppstidg                     Int?      @db.TinyInt
  uppstidv                     Int?      @db.TinyInt
  termatend                    Int       @default(0, map: "DF__hyobj__termatend__74230BE6") @db.TinyInt
  forlangtid                   Int?      @db.TinyInt
  redovislok                   Int       @db.TinyInt
  onskflytt                    DateTime? @db.DateTime
  avtalssign                   String?   @db.VarChar(80)
  anvsatt                      String?   @db.VarChar(200)
  uppsagtav                    String?   @db.Char(1)
  termreason                   String?   @db.VarChar(200)
  borgenkrav                   Int?      @db.TinyInt
  tilltrade                    DateTime? @db.DateTime
  avgperiod                    Int?      @db.TinyInt
  va                           Int?      @db.TinyInt
  tentribun                    Int       @default(0, map: "DF__hyobj__tentribun__7517301F") @db.TinyInt
  noticedate                   DateTime? @db.DateTime
  legyear                      Int?      @db.SmallInt
  manualcalc                   Int       @default(0, map: "DF__hyobj__manualcal__760B5458") @db.TinyInt
  pendreview                   Int       @default(0, map: "DF__hyobj__pendrevie__76FF7891") @db.TinyInt
  conpen                       Float?    @db.Money
  conpenong                    Float?    @db.Money
  conpenregd                   DateTime? @db.DateTime
  sharefacil                   Float?    @db.Money
  lataddagre                   DateTime? @db.DateTime
  referens                     String?   @db.VarChar(50)
  editeras                     Int?      @db.TinyInt
  preuppdat                    DateTime? @db.DateTime
  preuppsign                   String?   @db.VarChar(80)
  prelastdeb                   DateTime? @db.Date
  prereqmove                   DateTime? @db.Date
  avflgodk                     Int?      @db.TinyInt
  avgodkdat                    DateTime? @db.DateTime
  movedin                      Int?      @db.TinyInt
  movedout                     Int?      @db.TinyInt
  arrival                      DateTime? @db.DateTime
  departure                    DateTime? @db.DateTime
  bailiff                      DateTime? @db.DateTime
  typ                          String?   @db.VarChar(50)
  vehicleno                    String?   @db.VarChar(30)
  storename                    String?   @db.VarChar(100)
  stlistname                   String?   @db.VarChar(100)
  miniinfo                     Int       @db.TinyInt
  generateik                   Int?      @db.TinyInt
  ejhffnd                      Int       @default(0, map: "DF__hyobj__ejhffnd__77F39CCA") @db.TinyInt
  ejhglu                       Int       @default(0, map: "DF__hyobj__ejhglu__78E7C103") @db.TinyInt
  hyprtcount                   Int?      @db.TinyInt
  taxpercent                   Decimal?  @db.Decimal(7, 4)
  shareareap                   Decimal?  @db.Decimal(7, 4)
  prtaxmodel                   Int       @default(1, map: "DF__hyobj__prtaxmode__79DBE53C") @db.TinyInt
  iindicator                   String?   @db.Char(1)
  inumberof                    Int?      @db.SmallInt
  campcheck                    Int       @default(0, map: "DF__hyobj__campcheck__7AD00975") @db.TinyInt
  contracvat                   Int       @default(0, map: "DF__hyobj__contracva__7BC42DAE") @db.TinyInt
  onlytrreg                    Int       @default(0, map: "DF__hyobj__onlytrreg__7CB851E7") @db.TinyInt
  twoinspect                   Int       @default(0, map: "DF__hyobj__twoinspec__7DAC7620") @db.TinyInt
  paidatonce                   Int       @default(0, map: "DF__hyobj__paidatonc__7EA09A59") @db.TinyInt
  extkind                      Int       @default(0, map: "DF__hyobj__extkind__7F94BE92") @db.TinyInt
  turnoverem                   Int       @default(0, map: "DF__hyobj__turnovere__0088E2CB") @db.TinyInt
  finaccmnth                   Int       @default(0, map: "DF__hyobj__finaccmnt__017D0704") @db.TinyInt
  sharedacc                    Int       @default(0, map: "DF__hyobj__sharedacc__02712B3D") @db.TinyInt
  vatdecl                      Int       @default(0, map: "DF__hyobj__vatdecl__03654F76") @db.TinyInt
  deletemark                   Int       @default(0, map: "DF__hyobj__deletemar__045973AF") @db.TinyInt
  ocr                          String?   @db.VarChar(25)
  distrcd                      Int       @default(0, map: "DF__hyobj__distrcd__054D97E8") @db.TinyInt
  inspinfo                     String?   @db.VarChar(100)
  timestamp                    String    @db.Char(10)
  aoupp                        aoupp[]
  avark                        avark[]
  avfkh                        avfkh[]
  bazav                        bazav[]
  bkans                        bkans[]
  bkero                        bkero[]
  bktrd                        bktrd[]
  hffnd                        hffnd[]
  hgerb                        hgerb[]
  hyaos                        hyaos[]
  hybev                        hybev[]
  hycam                        hycam[]
  hycmc                        hycmc[]
  hycnc                        hycnc[]
  hycpg                        hycpg[]
  hycra                        hycra[]
  hyded                        hyded[]
  hydis                        hydis[]
  hyfin                        hyfin[]
  hyims                        hyims[]
  hykop                        hykop[]
  cmart_hyobj_keycmartTocmart  cmart?    @relation("hyobj_keycmartTocmart", fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeycmart")
  cmart_hyobj_keycmart2Tocmart cmart?    @relation("hyobj_keycmart2Tocmart", fields: [keycmart2], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeycmart2")
  cmcmp_hyobj_keycmcmpTocmcmp  cmcmp?    @relation("hyobj_keycmcmpTocmcmp", fields: [keycmcmp], references: [keycmcmp], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeycmcmp")
  cmcmp_hyobj_keycmcmp2Tocmcmp cmcmp?    @relation("hyobj_keycmcmp2Tocmcmp", fields: [keycmcmp2], references: [keycmcmp], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeycmcmp2")
  cmcpt                        cmcpt?    @relation(fields: [keycmcpt], references: [keycmcpt], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeycmcpt")
  cmtrd                        cmtrd?    @relation(fields: [keycmtrd], references: [keycmtrd], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeycmtrd")
  cmuni_hyobj_keycmuniTocmuni  cmuni     @relation("hyobj_keycmuniTocmuni", fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkhyobjkeycmuni")
  cmuni_hyobj_keycmuni2Tocmuni cmuni     @relation("hyobj_keycmuni2Tocmuni", fields: [keycmuni2], references: [keycmuni], onUpdate: NoAction, map: "fkhyobjkeycmuni2")
  cmuni_hyobj_keycmuni3Tocmuni cmuni     @relation("hyobj_keycmuni3Tocmuni", fields: [keycmuni3], references: [keycmuni], onUpdate: NoAction, map: "fkhyobjkeycmuni3")
  hycct                        hycct?    @relation(fields: [keyhycct], references: [keyhycct], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeyhycct")
  hyhav                        hyhav     @relation(fields: [keyhyhav], references: [keyhyhav], onUpdate: NoAction, map: "fkhyobjkeyhyhav")
  hyobt_hyobj_keyhyobtTohyobt  hyobt     @relation("hyobj_keyhyobtTohyobt", fields: [keyhyobt], references: [keyhyobt], onUpdate: NoAction, map: "fkhyobjkeyhyobt")
  hyobt_hyobj_keyhyobt2Tohyobt hyobt?    @relation("hyobj_keyhyobt2Tohyobt", fields: [keyhyobt2], references: [keyhyobt], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeyhyobt2")
  hysor                        hysor?    @relation(fields: [keyhysor], references: [keyhysor], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeyhysor")
  hyuto                        hyuto?    @relation(fields: [keyhyuto], references: [keyhyuto], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeyhyuto")
  iksbg                        iksbg?    @relation(fields: [keyiksbg], references: [keyiksbg], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeyiksbg")
  ikslr                        ikslr?    @relation(fields: [keyikslr], references: [keyikslr], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeyikslr")
  trare                        trare?    @relation(fields: [keytrare], references: [keytrare], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeytrare")
  trars                        trars?    @relation(fields: [keytrars], references: [keytrars], onDelete: NoAction, onUpdate: NoAction, map: "fkhyobjkeytrars")
  hyprc                        hyprc[]
  hyprl                        hyprl[]
  hyprt                        hyprt[]
  hyrad                        hyrad[]
  hyscc                        hyscc[]
  hysec                        hysec[]
  hystd                        hystd[]
  hystg                        hystg[]
  hystl                        hystl[]
  hytdr                        hytdr[]
  hytfa                        hytfa[]
  hytgr                        hytgr[]
  hytoo                        hytoo[]
  hytud                        hytud[]
  hytup                        hytup[]
  hytuy                        hytuy[]
  hywre                        hywre[]
  ikbeh                        ikbeh[]
  ikmac                        ikmac[]
  iksbh                        iksbh[]
  kragk                        kragk[]
  kragl                        kragl[]
  krdcc                        krdcc[]
  lbbes                        lbbes[]
  lnept                        lnept[]
  pdaci                        pdaci[]
  pdadv                        pdadv[]
  pdtdn                        pdtdn[]
  puund                        puund[]
  skatc                        skatc[]
  skund                        skund[]
  stupd                        stupd[]
  vcreg                        vcreg[]
  vlutf                        vlutf[]

  @@index([keycmart], map: "fkhyobjcmart")
  @@index([keycmart2], map: "fkhyobjcmart2")
  @@index([keycmcmp], map: "fkhyobjcmcmp")
  @@index([keycmcmp2], map: "fkhyobjcmcmp2")
  @@index([keycmcpt], map: "fkhyobjcmcpt")
  @@index([keycmtrd], map: "fkhyobjcmtrd")
  @@index([keycmuni], map: "fkhyobjcmuni")
  @@index([keycmuni2], map: "fkhyobjcmuni2")
  @@index([keycmuni3], map: "fkhyobjcmuni3")
  @@index([keyhycct], map: "fkhyobjhycct")
  @@index([keyhyhav], map: "fkhyobjhyhav")
  @@index([keyhyobj2], map: "fkhyobjhyobj2")
  @@index([keyhyobt], map: "fkhyobjhyobt")
  @@index([keyhyobt2], map: "fkhyobjhyobt2")
  @@index([keyhysor], map: "fkhyobjhysor")
  @@index([keyhyuto], map: "fkhyobjhyuto")
  @@index([keyiksbg], map: "fkhyobjiksbg")
  @@index([keyikslr], map: "fkhyobjikslr")
  @@index([keysymdl], map: "fkhyobjsymdl")
  @@index([keysyusr], map: "fkhyobjsyusr")
  @@index([keysyusr2], map: "fkhyobjsyusr2")
  @@index([keytrare], map: "fkhyobjtrare")
  @@index([keytrars], map: "fkhyobjtrars")
  @@index([keycmcmp, keyhyobj, keyhyobt, makuldatum, sistadeb, keyhyobj2, fdate, godkdatum], map: "inhyobj_24O0HXPKZ")
  @@index([keycmcmp, sistadeb, keyhyobt, makuldatum, keyhyobj, keyhyobj2, keyhyhav, fdate], map: "inhyobj_24O0HXPVT")
  @@index([keyhyobt, keyhyobj, keyhyobt2, deletemark], map: "inhyobj_ledigaobj")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hyobj_PA210622 {
  keyhyobj   String    @db.Char(15)
  keysymdl   String    @db.Char(15)
  keyhyobt   String    @db.Char(15)
  keyhyobt2  String?   @db.Char(15)
  keycmcmp   String?   @db.Char(15)
  keycmcmp2  String?   @db.Char(15)
  keyhyobj2  String?   @db.Char(15)
  keyhyhav   String    @db.Char(15)
  keycmuni   String    @db.Char(15)
  keycmuni2  String    @db.Char(15)
  keycmuni3  String    @db.Char(15)
  keyhysor   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keysyusr2  String?   @db.Char(15)
  keyiksbg   String?   @db.Char(15)
  keyikslr   String?   @db.Char(15)
  keyprdct   String?   @db.Char(15)
  keycmart   String?   @db.Char(15)
  keycmart2  String?   @db.Char(15)
  keytrars   String?   @db.Char(15)
  keytrare   String?   @db.Char(15)
  keycmcpt   String?   @db.Char(15)
  keycmtrd   String?   @db.Char(15)
  keyhycct   String?   @db.Char(15)
  keyhyuto   String?   @db.Char(15)
  hyobjben   String    @db.VarChar(35)
  avtalsort  String?   @db.VarChar(30)
  avtalsdat  DateTime? @db.DateTime
  fdate      DateTime? @db.DateTime
  overlatdat DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  sistadeb   DateTime? @db.DateTime
  conperfrom DateTime? @db.Date
  conperto   DateTime? @db.Date
  fakturaper Int       @db.TinyInt
  forfaller  String?   @db.Char(1)
  friforf    Int       @db.TinyInt
  daysexpire Int?      @db.SmallInt
  yearexpdat String?   @db.Char(4)
  invstop    Int       @db.TinyInt
  draft      Int       @db.TinyInt
  noclaim    Int       @db.TinyInt
  utskriven  DateTime? @db.DateTime
  waitsign   Int       @db.TinyInt
  godkdatum  DateTime? @db.DateTime
  godksign   String?   @db.VarChar(80)
  ejbesittn  Int       @db.TinyInt
  uppsdatum  DateTime? @db.DateTime
  uppssign   String?   @db.VarChar(80)
  uppsomfdat DateTime? @db.DateTime
  makuldatum DateTime? @db.DateTime
  makulsign  String?   @db.VarChar(4)
  konthyra   Float?    @db.Money
  markning   String?   @db.VarChar(50)
  uppstidg   Int?      @db.TinyInt
  uppstidv   Int?      @db.TinyInt
  termatend  Int       @db.TinyInt
  forlangtid Int?      @db.TinyInt
  redovislok Int       @db.TinyInt
  onskflytt  DateTime? @db.DateTime
  avtalssign String?   @db.VarChar(80)
  anvsatt    String?   @db.VarChar(200)
  uppsagtav  String?   @db.Char(1)
  termreason String?   @db.VarChar(200)
  borgenkrav Int?      @db.TinyInt
  tilltrade  DateTime? @db.DateTime
  avgperiod  Int?      @db.TinyInt
  va         Int?      @db.TinyInt
  tentribun  Int       @db.TinyInt
  noticedate DateTime? @db.DateTime
  legyear    Int?      @db.SmallInt
  manualcalc Int       @db.TinyInt
  pendreview Int       @db.TinyInt
  conpen     Float?    @db.Money
  conpenong  Float?    @db.Money
  conpenregd DateTime? @db.DateTime
  sharefacil Float?    @db.Money
  lataddagre DateTime? @db.DateTime
  referens   String?   @db.VarChar(50)
  editeras   Int?      @db.TinyInt
  preuppdat  DateTime? @db.DateTime
  preuppsign String?   @db.VarChar(80)
  prelastdeb DateTime? @db.Date
  prereqmove DateTime? @db.Date
  avflgodk   Int?      @db.TinyInt
  avgodkdat  DateTime? @db.DateTime
  movedin    Int?      @db.TinyInt
  movedout   Int?      @db.TinyInt
  arrival    DateTime? @db.DateTime
  departure  DateTime? @db.DateTime
  bailiff    DateTime? @db.DateTime
  typ        String?   @db.VarChar(50)
  vehicleno  String?   @db.VarChar(30)
  storename  String?   @db.VarChar(100)
  stlistname String?   @db.VarChar(100)
  miniinfo   Int       @db.TinyInt
  generateik Int?      @db.TinyInt
  ejhffnd    Int       @db.TinyInt
  ejhglu     Int       @db.TinyInt
  hyprtcount Int?      @db.TinyInt
  taxpercent Decimal?  @db.Decimal(7, 4)
  shareareap Decimal?  @db.Decimal(7, 4)
  prtaxmodel Int       @db.TinyInt
  iindicator String?   @db.Char(1)
  inumberof  Int?      @db.SmallInt
  campcheck  Int       @db.TinyInt
  contracvat Int       @db.TinyInt
  onlytrreg  Int       @db.TinyInt
  twoinspect Int       @db.TinyInt
  paidatonce Int       @db.TinyInt
  extkind    Int       @db.TinyInt
  turnoverem Int       @db.TinyInt
  finaccmnth Int       @db.TinyInt
  sharedacc  Int       @db.TinyInt
  vatdecl    Int       @db.TinyInt
  deletemark Int       @db.TinyInt
  ocr        String?   @db.VarChar(25)
  distrcd    Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

model hyobt {
  keyhyobt                     String  @id(map: "PK__hyobt__5D6C935F") @db.Char(15)
  keysymdl                     String? @db.Char(15)
  keyfadbt                     String? @db.Char(15)
  hyobtben                     String  @db.Char(30)
  internal                     Int?    @db.TinyInt
  timestamp                    String  @db.Char(10)
  hyavi                        hyavi[]
  hyobj_hyobj_keyhyobtTohyobt  hyobj[] @relation("hyobj_keyhyobtTohyobt")
  hyobj_hyobj_keyhyobt2Tohyobt hyobj[] @relation("hyobj_keyhyobt2Tohyobt")
  stupt                        stupt[]

  @@index([keyfadbt], map: "fkhyobtfadbt")
  @@index([keysymdl], map: "fkhyobtsymdl")
}

model hyops {
  keyhyops   String  @id(map: "pkhyops") @db.Char(15)
  caption    String  @db.VarChar(30)
  isactive   Int     @default(1, map: "DF__hyops__isactive__69429431") @db.TinyInt
  statactive Int     @default(0, map: "DF__hyops__statactiv__6A36B86A") @db.TinyInt
  timestamp  String  @db.Char(10)
  hyper      hyper[]
}

model hyopt {
  keyhyopt  String  @id(map: "pkhyopt") @db.Char(15)
  caption   String  @db.VarChar(30)
  isactive  Int     @default(1, map: "DF__hyopt__isactive__78521B1B") @db.TinyInt
  timestamp String  @db.Char(10)
  hyper     hyper[]
}

model hyper {
  keyhyper   String    @id(map: "pkhyper") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keycmuni   String    @db.Char(15)
  keycmuni2  String    @db.Char(15)
  keycmuni3  String    @db.Char(15)
  keyhyops   String?   @db.Char(15)
  keyhyopt   String?   @db.Char(15)
  fromdate   DateTime? @db.DateTime
  todate     DateTime? @db.DateTime
  noticet    Int       @default(0, map: "DF__hyper__noticet__23917EDB") @db.TinyInt
  noticel    Int       @default(0, map: "DF__hyper__noticel__2485A314") @db.TinyInt
  extension  Int       @default(0, map: "DF__hyper__extension__2579C74D") @db.TinyInt
  periodkind Int       @default(1, map: "DF__hyper__periodkin__266DEB86") @db.TinyInt
  caption    String?   @db.VarChar(100)
  comment    String?   @db.VarChar(200)
  lastreplyt DateTime? @db.Date
  lastreplyl DateTime? @db.Date
  timestamp  String    @db.Char(10)
  hyops      hyops?    @relation(fields: [keyhyops], references: [keyhyops], onDelete: NoAction, onUpdate: NoAction, map: "fkhyperkeyhyops")
  hyopt      hyopt?    @relation(fields: [keyhyopt], references: [keyhyopt], onDelete: NoAction, onUpdate: NoAction, map: "fkhyperkeyhyopt ")

  @@index([keycmuni], map: "fkhypercmuni")
  @@index([keycmuni2], map: "fkhypercmuni2")
  @@index([keycmuni3], map: "fkhypercmuni3")
  @@index([keyhyobj], map: "fkhyperhyobj")
  @@index([keyhyops], map: "fkhyperhyops")
  @@index([keyhyopt], map: "fkhyperhyopt")
}

model hypgr {
  keyhypgr   String    @id(map: "pkhypgr") @db.Char(15)
  type       Int       @db.TinyInt
  caption    String    @db.VarChar(70)
  fromdate   DateTime? @db.Date
  todate     DateTime? @db.Date
  minimumwoz Float?    @db.Money
  timestamp  String    @db.Char(10)
  hyptg      hyptg[]
}

model hypgt {
  keyhypgt  String  @id(map: "pkhypgt") @db.Char(15)
  caption   String  @db.Char(100)
  timestamp String  @db.Char(10)
  hyrmt     hyrmt[]
}

model hypnh {
  keyhypnh  String   @id(map: "PK__hypnh__711E8651") @db.Char(15)
  type      Int      @db.TinyInt
  fdate     DateTime @db.DateTime
  tdate     DateTime @db.DateTime
  points    Int      @db.SmallInt
  maxrent   Float    @db.Money
  timestamp String   @db.Char(10)

  @@unique([type, fdate, points], map: "akhypnh1")
}

model hypnr {
  keyhypnr  String  @id(map: "PK__hypnr__29CCF3C8") @db.Char(15)
  keycmobj  String  @db.Char(15)
  keyhypnt  String  @db.Char(15)
  caption   String? @db.Char(30)
  value     Decimal @db.Decimal(10, 2)
  points    Int?    @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycmobj], map: "fkhypnrcmobj")
  @@index([keyhypnt], map: "fkhypnrhypnt")
}

model hypnt {
  keyhypnt   String   @id(map: "pkhypnt") @db.Char(15)
  keyhypnt2  String?  @db.Char(15)
  keyhyptg   String   @db.Char(15)
  caption    String   @db.Char(70)
  sortorder  Int      @db.TinyInt
  mandatory  Int      @db.TinyInt
  source     Int      @db.TinyInt
  points     Int      @db.TinyInt
  pointlimit Int?     @db.TinyInt
  roundoff   Int      @db.TinyInt
  inputmask  String?  @db.Char(15)
  reduction  Int      @db.TinyInt
  edittype   Int      @db.TinyInt
  defaultval Decimal? @db.Decimal(12, 2)
  uniqueshow Int      @default(1, map: "DF__hypnt__uniquesho__0D676644") @db.TinyInt
  pointbase  Int      @default(0, map: "DF__hypnt__pointbase__0E5B8A7D") @db.TinyInt
  inclcalc   Int      @default(0, map: "DF__hypnt__inclcalc__0F4FAEB6") @db.TinyInt
  calcvalue  Decimal  @default(0, map: "DF__hypnt__calcvalue__1043D2EF") @db.Decimal(10, 2)
  timestamp  String   @db.Char(10)

  @@index([keyhypnt2], map: "fkhypnthypnt2")
  @@index([keyhyptg], map: "fkhypnthyptg")
}

model hypod {
  keyhypod   String    @id(map: "pkhypod") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  fromdate   DateTime? @db.DateTime
  todate     DateTime? @db.DateTime
  periodopen Int       @default(1, map: "DF__hypod__periodope__444FF99B") @db.TinyInt
  timestamp  String    @db.Char(10)

  @@index([keycmobj], map: "fkhypodcmobj")
  @@index([keycmtgr], map: "fkhypodcmtgr")
}

model hyprc {
  keyhyprc  String @id(map: "pkhyprc") @db.Char(15)
  keyhyobj  String @db.Char(15)
  keybkpuo  String @db.Char(15)
  timestamp String @db.Char(10)
  bkpuo     bkpuo  @relation(fields: [keybkpuo], references: [keybkpuo], onDelete: Cascade, onUpdate: NoAction, map: "fkhyprckeybkpuo")
  hyobj     hyobj  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyprckeyhyobj")

  @@index([keybkpuo], map: "fkhyprcbkpuo")
  @@index([keyhyobj], map: "fkhyprchyobj")
}

model hyprl {
  keyhyprl  String @id(map: "pkhyprl") @db.Char(15)
  keyhypro  String @db.Char(15)
  keyhyobj  String @db.Char(15)
  value     String @db.VarChar(200)
  timestamp String @db.Char(10)
  hyobj     hyobj  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkcmprlkeyhyobj")
  hypro     hypro  @relation(fields: [keyhypro], references: [keyhypro], onUpdate: NoAction, map: "fkhyprlkeyhypro ")

  @@index([keyhyobj], map: "fkhyprlhyobj")
  @@index([keyhypro], map: "fkhyprlhypro")
}

model hypro {
  keyhypro  String  @id(map: "pkhypro") @db.Char(15)
  keycmpro  String? @db.Char(15)
  caption   String  @db.VarChar(100)
  protype   Int     @db.TinyInt
  timestamp String  @db.Char(10)
  hyprl     hyprl[]
  cmpro     cmpro?  @relation(fields: [keycmpro], references: [keycmpro], onUpdate: NoAction, map: "fkhyprokeycmpro")

  @@index([keycmpro], map: "fkhyprocmpro")
}

model hyprt {
  keyhyprt                     String    @id(map: "pkhyprt") @db.Char(15)
  keycmobj                     String    @unique(map: "akhyprt1") @db.Char(15)
  keycmobj2                    String    @db.Char(15)
  keyhyobj                     String?   @db.Char(15)
  code                         String?   @db.VarChar(30)
  caption                      String?   @db.VarChar(30)
  deletemark                   Int       @default(0, map: "DF__hyprt__deletemar__6267F9A6") @db.TinyInt
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime? @db.DateTime
  timestamp                    String    @db.Char(10)
  cmobj_hyprt_keycmobjTocmobj  cmobj     @relation("hyprt_keycmobjTocmobj", fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkhyprtkeycmobj")
  cmobj_hyprt_keycmobj2Tocmobj cmobj     @relation("hyprt_keycmobj2Tocmobj", fields: [keycmobj2], references: [keycmobj], onUpdate: NoAction, map: "fkhyprtkeycmobj2")
  hyobj                        hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: NoAction, onUpdate: NoAction, map: "fkhyprtkeyhyobj")

  @@index([keycmobj], map: "fkhyprtcmobj")
  @@index([keycmobj2], map: "fkhyprtcmobj2")
  @@index([keyhyobj], map: "fkhyprthyobj")
}

model hyptg {
  keyhyptg   String @id(map: "pkhyptg") @db.Char(15)
  keyhypgr   String @db.Char(15)
  caption    String @db.Char(70)
  sortorder  Int    @db.TinyInt
  type       Int    @db.TinyInt
  pointlimit Int?   @db.SmallInt
  pointlimlo Int?   @db.SmallInt
  pointrule  Int    @default(0, map: "DF__hyptg__pointrule__4AFA8469") @db.TinyInt
  roundoff   Int    @db.TinyInt
  timestamp  String @db.Char(10)
  hypgr      hypgr  @relation(fields: [keyhypgr], references: [keyhypgr], onUpdate: NoAction, map: "fkhyptgkeyhypgr")

  @@index([keyhypgr], map: "fkhyptghypgr")
}

model hypts {
  keyhypts  String   @id(map: "pkhypts") @db.Char(15)
  keyhypnt  String   @db.Char(15)
  caption   String?  @db.Char(70)
  sortorder Int      @default(0, map: "DF__hypts__sortorder__5683B86F") @db.TinyInt
  minvalue  Decimal? @db.Decimal(10, 2)
  maxvalue  Decimal? @db.Decimal(10, 2)
  calctype  Int      @db.TinyInt
  factor    Decimal  @db.Decimal(11, 5)
  preround  Int      @default(0, map: "DF__hypts__preround__5777DCA8") @db.TinyInt
  minpoints Int?     @db.TinyInt
  maxpoints Int?     @db.TinyInt
  timestamp String   @db.Char(10)

  @@index([keyhypnt], map: "fkhyptshypnt")
}

model hyrad {
  keyhyrad                     String    @id(map: "pkhyrad") @db.Char(15)
  keyhyobj                     String    @db.Char(15)
  keycmart                     String    @db.Char(15)
  keycmobj                     String?   @db.Char(15)
  keycmobj2                    String?   @db.Char(15)
  keyhyavg                     String?   @db.Char(15)
  keyhyink                     String?   @db.Char(15)
  keycmuni                     String    @db.Char(15)
  keyhysum                     String?   @db.Char(15)
  keycmind                     String?   @db.Char(15)
  keycminv                     String?   @db.Char(15)
  keycminv2                    String?   @db.Char(15)
  keycminv3                    String?   @db.Char(15)
  keydrval                     String?   @db.Char(15)
  keydrval2                    String?   @db.Char(15)
  keyhyavk                     String?   @db.Char(15)
  keyhytoo                     String?   @db.Char(15)
  keycmcmp                     String?   @db.Char(15)
  keylnprd                     String?   @db.Char(15)
  keylnemf                     String?   @db.Char(15)
  antal                        Float?
  sortering                    Int?      @db.SmallInt
  fdate                        DateTime? @db.DateTime
  tdate                        DateTime? @db.DateTime
  fromper                      String?   @db.Char(4)
  tomper                       String?   @db.Char(4)
  relatefrom                   DateTime? @db.DateTime
  relateto                     DateTime? @db.DateTime
  avitext                      String?   @db.Char(80)
  fordelning                   String?   @db.Char(1)
  bashyratot                   Float?    @db.Money
  indexandel                   Float?    @db.Real
  chngmnths                    Int       @default(3, map: "DF__hyrad__chngmnths__603121D2") @db.SmallInt
  chngdimnth                   Int       @default(1, map: "DF__hyrad__chngdimnt__6125460B") @db.TinyInt
  akthyratot                   Float?    @db.Money
  forfromar                    Int?      @db.SmallInt
  forintar                     Int?      @db.TinyInt
  rowtype                      Int       @db.TinyInt
  indexper                     String?   @db.Char(4)
  indexperar                   Int?      @db.TinyInt
  newindexm                    Int?      @db.TinyInt
  excepyear                    Int?      @db.SmallInt
  excepmonth                   Int?      @db.TinyInt
  minrent                      Int       @default(0, map: "DF__hyrad__minrent__62196A44") @db.TinyInt
  noticedate                   DateTime? @db.DateTime
  timestamp                    String    @db.Char(10)
  burad                        burad[]
  hycnr                        hycnr[]
  hyfra                        hyfra[]
  cmart                        cmart     @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkhyradkeycmart")
  cmcmp                        cmcmp?    @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycmcmp")
  cmind                        cmind?    @relation(fields: [keycmind], references: [keycmind], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycmind")
  cminv_hyrad_keycminvTocminv  cminv?    @relation("hyrad_keycminvTocminv", fields: [keycminv], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycminv")
  cminv_hyrad_keycminv2Tocminv cminv?    @relation("hyrad_keycminv2Tocminv", fields: [keycminv2], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycminv2")
  cminv_hyrad_keycminv3Tocminv cminv?    @relation("hyrad_keycminv3Tocminv", fields: [keycminv3], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycminv3")
  cmobj_hyrad_keycmobjTocmobj  cmobj?    @relation("hyrad_keycmobjTocmobj", fields: [keycmobj], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycmobj")
  cmobj_hyrad_keycmobj2Tocmobj cmobj?    @relation("hyrad_keycmobj2Tocmobj", fields: [keycmobj2], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeycmobj2")
  cmuni                        cmuni     @relation(fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkhyradkeycmuni")
  drval_hyrad_keydrvalTodrval  drval?    @relation("hyrad_keydrvalTodrval", fields: [keydrval], references: [keydrval], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeydrval")
  drval_hyrad_keydrval2Todrval drval?    @relation("hyrad_keydrval2Todrval", fields: [keydrval2], references: [keydrval], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeydrval2")
  hyavg                        hyavg?    @relation(fields: [keyhyavg], references: [keyhyavg], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeyhyavg")
  hyavk                        hyavk?    @relation(fields: [keyhyavk], references: [keyhyavk], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeyhyavk")
  hyink                        hyink?    @relation(fields: [keyhyink], references: [keyhyink], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeyhyink")
  hyobj                        hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyradkeyhyobj")
  hysum                        hysum?    @relation(fields: [keyhysum], references: [keyhysum], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeyhysum")
  lnemf                        lnemf?    @relation(fields: [keylnemf], references: [keylnemf], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeylnemf")
  lnprd                        lnprd?    @relation(fields: [keylnprd], references: [keylnprd], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeylnprd")
  hytoo                        hytoo?    @relation(fields: [keyhytoo], references: [keyhytoo], onDelete: NoAction, onUpdate: NoAction, map: "fkhyradkeytoo")
  hyrol                        hyrol[]
  vlutf                        vlutf[]

  @@index([keycmart], map: "fkhyradcmart")
  @@index([keycmind], map: "fkhyradcmind")
  @@index([keycminv], map: "fkhyradcminv")
  @@index([keycminv2], map: "fkhyradcminv2")
  @@index([keycminv3], map: "fkhyradcminv3")
  @@index([keycmobj], map: "fkhyradcmobj")
  @@index([keycmobj2], map: "fkhyradcmobj2")
  @@index([keycmuni], map: "fkhyradcmuni")
  @@index([keydrval], map: "fkhyraddrval1")
  @@index([keydrval2], map: "fkhyraddrval2")
  @@index([keyhyavg], map: "fkhyradhyavg")
  @@index([keyhyavk], map: "fkhyradhyavk")
  @@index([keyhyink], map: "fkhyradhyink")
  @@index([keyhyobj], map: "fkhyradhyobj")
  @@index([keyhysum], map: "fkhyradhysum")
  @@index([keyhytoo], map: "fkhyradhytoo")
  @@index([keylnemf], map: "fkhyradlnemf")
  @@index([keylnprd], map: "fkhyradlnprd")
  @@index([keyhyobj, keycmart, fdate, tdate], map: "inhyrad_1PV0O2PPC")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hyrad_bu {
  keyhyrad   String    @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keycmart   String    @db.Char(15)
  keycmobj   String?   @db.Char(15)
  keyhyavg   String?   @db.Char(15)
  keyhyink   String?   @db.Char(15)
  keycmuni   String    @db.Char(15)
  keyhysum   String?   @db.Char(15)
  keycmind   String?   @db.Char(15)
  keycminv   String?   @db.Char(15)
  keycminv2  String?   @db.Char(15)
  antal      Float?
  sortering  Int?      @db.SmallInt
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  fromper    String?   @db.Char(4)
  tomper     String?   @db.Char(4)
  avitext    String?   @db.Char(80)
  fordelning String?   @db.Char(1)
  bashyratot Float?    @db.Money
  indexandel Float?    @db.Real
  akthyratot Float?    @db.Money
  forfromar  Int?      @db.SmallInt
  forintar   Int?      @db.TinyInt
  retroaktiv Int       @db.TinyInt
  indexper   String?   @db.Char(4)
  indexperar Int?      @db.TinyInt
  timestamp  String?   @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hyrad_bujt {
  keyhyrad   String    @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keycmart   String    @db.Char(15)
  keycmobj   String?   @db.Char(15)
  keyhyavg   String?   @db.Char(15)
  keyhyink   String?   @db.Char(15)
  keycmuni   String    @db.Char(15)
  keyhysum   String?   @db.Char(15)
  keycmind   String?   @db.Char(15)
  keycminv   String?   @db.Char(15)
  keycminv2  String?   @db.Char(15)
  antal      Float?
  sortering  Int?      @db.SmallInt
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  fromper    String?   @db.Char(4)
  tomper     String?   @db.Char(4)
  avitext    String?   @db.Char(80)
  fordelning String?   @db.Char(1)
  bashyratot Float?    @db.Money
  indexandel Float?    @db.Real
  akthyratot Float?    @db.Money
  forfromar  Int?      @db.SmallInt
  forintar   Int?      @db.TinyInt
  retroaktiv Int       @db.TinyInt
  indexper   String?   @db.Char(4)
  indexperar Int?      @db.TinyInt
  timestamp  String?   @db.Char(10)

  @@ignore
}

model hyrep {
  keyhyrep  String    @id(map: "PK__hyrep__6CF8EFB2") @db.Char(15)
  keyhyobj  String    @db.Char(15)
  keyhyinp  String?   @db.Char(15)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keyhyinp], map: "fkhyrephyinp")
  @@index([keyhyobj], map: "fkhyrephyobj")
  @@index([keyhyobj, fdate, tdate], map: "inhyrep_1PI0T471U")
}

model hyrmt {
  keyhyrmt   String  @id(map: "pkhyrmt") @db.Char(15)
  keyhypgt   String  @db.Char(15)
  keybsdef   String? @db.Char(15)
  headerln   String  @db.VarChar(Max)
  selectable Int     @default(1, map: "DF__hyrmt__selectabl__28B30DD0") @db.TinyInt
  timestamp  String  @db.Char(10)
  hycmc      hycmc[]
  hycpg      hycpg[]
  hypgt      hypgt   @relation(fields: [keyhypgt], references: [keyhypgt], onUpdate: NoAction, map: "fkhyrmtkeyhypgt ")

  @@index([keyhypgt], map: "fkhyrmtkeyhypgt")
}

model hyroc {
  keyhyroc  String    @id(map: "pkhyroc") @db.Char(15)
  keycmobj  String    @db.Char(15)
  chstatus  Int       @default(0, map: "DF__hyroc__chstatus__2B32A0A3") @db.TinyInt
  chdate    DateTime? @db.Date
  perfdate  DateTime  @db.Date
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyrockeycmobj ")

  @@index([keycmobj], map: "fkhyroccmobj")
}

model hyrol {
  keyhyrol  String @id(map: "pkhyrol") @db.Char(15)
  keyhyrad  String @db.Char(15)
  keyhykop  String @db.Char(15)
  timestamp String @db.Char(10)
  hykop     hykop  @relation(fields: [keyhykop], references: [keyhykop], onUpdate: NoAction, map: "fkhyrolkeyhykop ")
  hyrad     hyrad  @relation(fields: [keyhyrad], references: [keyhyrad], onDelete: Cascade, onUpdate: NoAction, map: "fkhyrolkeyhyrad")

  @@index([keyhykop], map: "fkhyrolhykop")
  @@index([keyhyrad], map: "fkhyrolhyrad")
}

model hyscc {
  keyhyscc  String    @id(map: "pkhyscc") @db.Char(15)
  keyhyobj  String    @db.Char(15)
  keyhytut  String    @db.Char(15)
  keyhycal  String?   @db.Char(15)
  fromdate  DateTime  @db.Date
  todate    DateTime? @db.Date
  timestamp String    @db.Char(10)
  hycal     hycal?    @relation(fields: [keyhycal], references: [keyhycal], onUpdate: NoAction, map: "fkhyscckeyhycal ")
  hyobj     hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyscckeyhyobj")
  hytut     hytut     @relation(fields: [keyhytut], references: [keyhytut], onUpdate: NoAction, map: "fkhyscckeyhytut ")

  @@index([keyhycal], map: "fkhycaehycal")
  @@index([keyhyobj], map: "fkhycaehyobj")
  @@index([keyhytut], map: "fkhycaehytut")
}

model hyscy {
  keyhyscy  String  @id(map: "pkhyscy") @db.Char(15)
  caption   String  @db.Char(100)
  timestamp String  @db.Char(10)
  hysec     hysec[]
}

model hysdr {
  keyhysdr  String @id(map: "pkhysdr") @db.Char(15)
  keycmart  String @db.Char(15)
  stdrent   Int    @default(0, map: "DF__hysdr__stdrent__33C7E6A4")
  caption   String @db.VarChar(60)
  timestamp String @db.Char(10)
  cmart     cmart  @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkhysdrkeycmart")

  @@index([keycmart], map: "fkhysdrcmart")
}

model hysec {
  keyhysec                     String    @id(map: "pkhysec") @db.Char(15)
  keyhyobj                     String    @db.Char(15)
  keyhyset                     String    @db.Char(15)
  keyhyscy                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keyhying                     String    @db.Char(15)
  keyhysma                     String?   @db.Char(15)
  keycmuni                     String?   @db.Char(15)
  keycmuni2                    String?   @db.Char(15)
  keycmuni3                    String?   @db.Char(15)
  amount                       Float?    @db.Money
  actamount                    Float?    @db.Money
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime? @db.DateTime
  noticemon                    Int?      @db.TinyInt
  noticedate                   DateTime? @db.DateTime
  account                      String?   @db.Char(20)
  comment                      String?   @db.VarChar(500)
  terms                        String?   @db.VarChar(200)
  createdate                   DateTime? @db.Date
  duedate                      DateTime? @db.Date
  recvddate                    DateTime? @db.Date
  returndate                   DateTime? @db.Date
  nvalidper                    Int?      @db.SmallInt
  nexpper                      Int?      @db.SmallInt
  nceasedper                   Int?      @db.SmallInt
  warnclaim                    DateTime? @db.Date
  claimsign                    String?   @db.VarChar(80)
  claimcmmnt                   String?   @db.VarChar(500)
  timestamp                    String    @db.Char(10)
  cmctc                        cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeycmctc")
  cmuni_hysec_keycmuniTocmuni  cmuni?    @relation("hysec_keycmuniTocmuni", fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeycmuni ")
  cmuni_hysec_keycmuni2Tocmuni cmuni?    @relation("hysec_keycmuni2Tocmuni", fields: [keycmuni2], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeycmuni2 ")
  cmuni_hysec_keycmuni3Tocmuni cmuni?    @relation("hysec_keycmuni3Tocmuni", fields: [keycmuni3], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeycmuni3 ")
  hying                        hying     @relation(fields: [keyhying], references: [keyhying], onUpdate: NoAction, map: "fkhyseckeyhying ")
  hyobj                        hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyseckeyhyobj")
  hyscy                        hyscy?    @relation(fields: [keyhyscy], references: [keyhyscy], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeyhyscy ")
  hyset                        hyset     @relation(fields: [keyhyset], references: [keyhyset], onUpdate: NoAction, map: "fkhyseckeyhyset ")
  hysma                        hysma?    @relation(fields: [keyhysma], references: [keyhysma], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeyhysma ")
  hysem                        hysem[]

  @@index([keycmctc], map: "fkhyseccmctc")
  @@index([keycmuni], map: "fkhyseccmuni")
  @@index([keycmuni2], map: "fkhyseccmuni2")
  @@index([keycmuni3], map: "fkhyseccmuni3")
  @@index([keyhying], map: "fkhysechying")
  @@index([keyhyobj], map: "fkhysechyobj")
  @@index([keyhyscy], map: "fkhysechyscy")
  @@index([keyhyset], map: "fkhysechyset")
  @@index([keyhysma], map: "fkhysechysma")
}

model hysem {
  keyhysem  String @id(map: "pkhysem") @db.Char(15)
  keyhysec  String @db.Char(15)
  keycmuni  String @db.Char(15)
  monvalue  Int
  montype   Int    @db.TinyInt
  timestamp String @db.Char(10)
  cmuni     cmuni  @relation(fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkhysemkeycmuni ")
  hysec     hysec  @relation(fields: [keyhysec], references: [keyhysec], onDelete: Cascade, onUpdate: NoAction, map: "fkhysemkeyhysec")

  @@index([keycmuni], map: "fkhysemcmuni")
  @@index([keyhysec], map: "fkhysemhysec")
}

model hyset {
  keyhyset  String  @id(map: "PK__hyset__76AC771E") @db.Char(15)
  caption   String  @db.Char(30)
  repabkod  Int     @default(0, map: "DF__hyset__repabkod__77A09B57") @db.TinyInt
  timestamp String  @db.Char(10)
  hysec     hysec[]
}

model hysgp {
  keyhysgp  String  @id(map: "pkhysgp") @db.Char(15)
  caption   String  @db.Char(50)
  sgprule   Int     @db.TinyInt
  repabkod  Int     @default(0, map: "DF__hysgp__repabkod__2190AC35") @db.TinyInt
  timestamp String  @db.Char(10)
  cmart     cmart[]
}

model hysgr {
  keyhysgr  String    @id(map: "PK__hysgr__5FBEF025") @db.Char(15)
  keyhysgp  String    @db.Char(15)
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  amount    Float     @db.Money
  timestamp String    @db.Char(10)

  @@index([keyhysgp], map: "fkhysgrhysgp")
}

model hysgu {
  keyhysgu  String  @id(map: "pkhysgu") @db.Char(15)
  caption   String  @unique(map: "akhysgu") @db.VarChar(80)
  timestamp String  @db.Char(10)
  hystc     hystc[]
  hytoo     hytoo[]
}

model hysma {
  keyhysma  String  @id(map: "pkhysma") @db.Char(15)
  caption   String  @db.VarChar(80)
  timestamp String  @db.Char(10)
  hysec     hysec[]
}

model hysor {
  keyhysor  String  @id(map: "PK__hysor__4BCC3ABA") @db.Char(15)
  hysorkod  String  @unique(map: "akhysor1") @db.Char(10)
  hysorben  String? @db.Char(30)
  timestamp String  @db.Char(10)
  hyobj     hyobj[]
}

model hyspa {
  keyhyspa  String  @id(map: "pkhyspa") @db.Char(15)
  caption   String  @db.VarChar(50)
  timestamp String  @db.Char(10)
  hyspt     hyspt[]
  prtyp     prtyp[]
}

model hyspt {
  keyhyspt  String    @id(map: "pkhyspt") @db.Char(15)
  keycmobj  String    @db.Char(15)
  keyhyspa  String?   @db.Char(15)
  keyprprj  String?   @db.Char(15)
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  amount    Float?    @db.Money
  timestamp String    @db.Char(10)
  hyfok     hyfok[]
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhysptkeycmobj ")
  hyspa     hyspa?    @relation(fields: [keyhyspa], references: [keyhyspa], onDelete: NoAction, onUpdate: NoAction, map: "fkhysptkeyhyspa ")
  prprj     prprj?    @relation(fields: [keyprprj], references: [keyprprj], onDelete: NoAction, onUpdate: NoAction, map: "fkhysptkeyprprj ")

  @@index([keycmobj], map: "fkhysptcmobj")
  @@index([keyhyspa], map: "fkhyspthyspa")
  @@index([keyprprj], map: "fkhysptprprj")
}

model hysta {
  keyhysta  String  @id(map: "PK__hysta__70C98096") @db.Char(15)
  keyhyobj  String? @db.Char(15)
  keyhyobj2 String? @db.Char(15)
  keycmtyp  String? @db.Char(15)
  keycmtyp2 String? @db.Char(15)
  keycmtyp3 String? @db.Char(15)
  stattype  Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycmtyp], map: "fkhystacmtyp")
  @@index([keycmtyp2], map: "fkhystacmtyp2")
  @@index([keycmtyp3], map: "fkhystacmtyp3")
  @@index([keyhyobj], map: "fkhystahyobj")
  @@index([keyhyobj2], map: "fkhystahyobj2")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hystatmp {
  keyhysta  String  @db.Char(15)
  keyhyobj  String  @db.Char(15)
  keyhyobj2 String? @db.Char(15)
  keycmtyp  String? @db.Char(15)
  keycmtyp2 String? @db.Char(15)
  keycmtyp3 String? @db.Char(15)
  byte      Int?    @db.TinyInt
  botidtot  Int?    @db.TinyInt
  botidsen  Int?    @db.TinyInt
  avflytt   Int     @db.TinyInt
  timestamp String? @db.Char(10)

  @@ignore
}

model hystc {
  keyhystc  String @id(map: "pkhystc") @db.Char(15)
  keyhysgu  String @db.Char(15)
  keyhytut  String @db.Char(15)
  timestamp String @db.Char(10)
  hysgu     hysgu  @relation(fields: [keyhysgu], references: [keyhysgu], onDelete: Cascade, onUpdate: NoAction, map: "fkhystckeyhysgu ")
  hytut     hytut  @relation(fields: [keyhytut], references: [keyhytut], onDelete: Cascade, onUpdate: NoAction, map: "fkhystckeyhytut ")

  @@index([keyhysgu], map: "fkhystchysgu")
  @@index([keyhytut], map: "fkhystchytut")
}

model hystd {
  keyhystd  String    @id(map: "pkhystd") @db.Char(15)
  keyhyobj  String    @db.Char(15)
  statdate  DateTime  @db.Date
  apprvdate DateTime? @db.Date
  comment   String?   @db.VarChar(200)
  timestamp String    @db.Char(10)
  hyobj     hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhystdkeyhyobj")

  @@index([keyhyobj], map: "fkhystdhyobj")
}

model hystg {
  keyhystg   String    @id(map: "pkhystg") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  createdate DateTime  @db.DateTime
  applydate  DateTime? @db.DateTime
  setting    String    @db.VarChar(2500)
  type       Int       @db.TinyInt
  timestamp  String    @db.Char(10)
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhystgkeyhyobj")

  @@index([keyhyobj], map: "fkhystghyobj")
}

model hystl {
  keyhystl  String    @id(map: "pkhystl") @db.Char(15)
  keyhyobj  String    @db.Char(15)
  keycmtrd  String?   @db.Char(15)
  keycmcpt  String?   @db.Char(15)
  storename String?   @db.VarChar(60)
  fdate     DateTime? @db.Date
  tdate     DateTime? @db.Date
  timestamp String    @db.Char(10)
  cmcpt     cmcpt?    @relation(fields: [keycmcpt], references: [keycmcpt], onUpdate: NoAction, map: "fkhystlkeycmcpt ")
  cmtrd     cmtrd?    @relation(fields: [keycmtrd], references: [keycmtrd], onUpdate: NoAction, map: "fkhystlkeycmtrd ")
  hyobj     hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhystlkeyhyobj")

  @@index([keycmcpt], map: "fkhystlcmcpt")
  @@index([keycmtrd], map: "fkhystlcmtrd")
  @@index([keyhyobj], map: "fkhystlhyobj")
}

model hystr {
  keyhystr  String    @id(map: "pkhystr") @db.Char(15)
  keycmobj  String    @db.Char(15)
  fromdate  DateTime? @db.Date
  todate    DateTime? @db.Date
  comment   String?   @db.VarChar(200)
  timestamp String    @db.Char(10)

  @@index([keycmobj], map: "fkhystrcmobj")
}

model hysul {
  keyhysul  String    @id(map: "pkhysul") @db.Char(15)
  keybalbf  String?   @db.Char(15)
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  minamount Float     @db.Money
  maxamount Float     @db.Money
  timestamp String    @db.Char(10)

  @@index([keybalbf], map: "fkhysulbalbf")
}

model hysum {
  keyhysum  String  @id(map: "PK__hysum__4EA8A765") @db.Char(15)
  keysymdl  String? @db.Char(15)
  hysumben  String? @db.Char(80)
  timestamp String  @db.Char(10)
  cmart     cmart[]
  hyrad     hyrad[]

  @@index([keysymdl], map: "fkhysumsymdl")
}

model hytar {
  keyhytar   String    @id(map: "pkhytar") @db.Char(15)
  keyhytuy   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  intent     Int       @db.TinyInt
  sendkind   Int       @db.TinyInt
  remindno   Int       @default(1, map: "DF__hytar__remindno__04F7E922") @db.TinyInt
  senddate   DateTime? @db.DateTime
  lastrepdat DateTime? @db.DateTime
  sentto     String?   @db.VarChar(200)
  timestamp  String    @db.Char(10)
  hytuy      hytuy     @relation(fields: [keyhytuy], references: [keyhytuy], onDelete: Cascade, onUpdate: NoAction, map: "fkhytarkeyhytuy ")

  @@index([keyhytuy], map: "fkhytarhytuy")
  @@index([keysyusr], map: "fkhytarsyusr")
}

model hytdr {
  keyhytdr  String    @id(map: "pkhytdr") @db.Char(15)
  keyhyobj  String    @db.Char(15)
  keyhytut  String    @db.Char(15)
  statdate  DateTime  @db.Date
  senddate  DateTime? @db.Date
  regdate   DateTime? @db.Date
  textvalue String?   @db.VarChar(200)
  numvalue  Decimal?  @db.Decimal(18, 0)
  estimate  Int       @default(0, map: "DF__hytdr__estimate__48C3038A") @db.TinyInt
  timestamp String    @db.Char(10)
  hyobj     hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhytdrkeyhyobj")
  hytut     hytut     @relation(fields: [keyhytut], references: [keyhytut], onUpdate: NoAction, map: "fkhytdrkeyhytut ")

  @@index([keyhyobj], map: "fkhytdrhyobj")
  @@index([keyhytut], map: "fkhytdrhytut")
}

model hytds {
  keyhytds  String    @id(map: "pkhytds") @db.Char(15)
  keybascr  String    @db.Char(15)
  keyhytut  String    @db.Char(15)
  statdate  DateTime  @db.Date
  regdate   DateTime? @db.Date
  textvalue String?   @db.VarChar(200)
  numvalue  Decimal?  @db.Decimal(18, 0)
  timestamp String    @db.Char(10)
  bascr     bascr     @relation(fields: [keybascr], references: [keybascr], onDelete: Cascade, onUpdate: NoAction, map: "fkhytdskeybascr ")
  hytut     hytut     @relation(fields: [keyhytut], references: [keyhytut], onUpdate: NoAction, map: "fkhytdskeyhytut ")

  @@index([keybascr], map: "fkhytdsbascr")
  @@index([keyhytut], map: "fkhytdshytut")
}

model hytdt {
  keyhytdt  String  @id(map: "pkhytdt") @db.Char(15)
  keysymdl  String  @db.Char(15)
  caption   String  @db.VarChar(60)
  marketing Int     @default(0, map: "DF__hytdt__marketing__37012D27") @db.TinyInt
  timestamp String  @db.Char(10)
  hytoo     hytoo[]
  hytua     hytua[]

  @@index([keysymdl], map: "fkhytdtsymdl")
}

model hytfa {
  keyhytfa   String    @id(map: "pkhytfa") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  hytudstart DateTime? @db.Date
  hytudstop  DateTime? @db.Date
  usehytud   Int       @default(0, map: "DF__hytfa__usehytud__1508880C") @db.TinyInt
  usehycmn   Int       @default(1, map: "DF__hytfa__usehycmn__15FCAC45") @db.TinyInt
  usehycmt   Int       @default(1, map: "DF__hytfa__usehycmt__16F0D07E") @db.TinyInt
  usehyvss   Int       @default(1, map: "DF__hytfa__usehyvss__17E4F4B7") @db.TinyInt
  creditcard Int       @default(1, map: "DF__hytfa__creditcar__18D918F0") @db.TinyInt
  creditcarv Int       @default(1, map: "DF__hytfa__creditcar__19CD3D29") @db.TinyInt
  betamount  Int       @default(0, map: "DF__hytfa__betamount__1AC16162") @db.TinyInt
  betamountv Int       @default(0, map: "DF__hytfa__betamount__1BB5859B") @db.TinyInt
  paycust    Int       @default(1, map: "DF__hytfa__paycust__1CA9A9D4") @db.TinyInt
  visitcust  Int       @default(1, map: "DF__hytfa__visitcust__1D9DCE0D") @db.TinyInt
  tuoinfo    Int       @default(1, map: "DF__hytfa__tuoinfo__1E91F246") @db.TinyInt
  grossamoun Int       @default(0, map: "DF__hytfa__grossamou__1F86167F") @db.TinyInt
  netamount  Int       @default(0, map: "DF__hytfa__netamount__207A3AB8") @db.TinyInt
  estimated  Int       @default(1, map: "DF__hytfa__estimated__216E5EF1") @db.TinyInt
  calcvat    Int       @default(1, map: "DF__hytfa__calcvat__2262832A") @db.TinyInt
  vatpercent Decimal   @default(0, map: "DF__hytfa__vatpercen__2356A763") @db.Decimal(5, 2)
  timestamp  String    @db.Char(10)
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhytfakeyhyobj")

  @@index([keyhyobj], map: "fkhytfahyobj")
}

model hytga {
  keyhytga  String    @id(map: "pkhytga") @db.Char(15)
  keycmtgr  String    @db.Char(15)
  keycmart  String    @db.Char(15)
  amount    Float     @db.Money
  fdate     DateTime? @db.Date
  tdate     DateTime? @db.Date
  timestamp String    @db.Char(10)
  cmart     cmart     @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkhytgakeycmart")
  cmtgr     cmtgr     @relation(fields: [keycmtgr], references: [keycmtgr], onDelete: Cascade, onUpdate: NoAction, map: "fkhytgakeycmtgr")

  @@unique([keycmtgr, keycmart, fdate, tdate], map: "akhytga1")
  @@index([keycmart], map: "fkhytgacmart")
  @@index([keycmtgr], map: "fkhytgacmtgr")
}

model hytgr {
  keyhytgr  String @id(map: "pkhytgr") @db.Char(15)
  keyhyobj  String @db.Char(15)
  keycmtgr  String @db.Char(15)
  timestamp String @db.Char(10)
  cmtgr     cmtgr  @relation(fields: [keycmtgr], references: [keycmtgr], onUpdate: NoAction, map: "fkhytgrkeycmtgr ")
  hyobj     hyobj  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhytgrkeyhyobj")

  @@index([keycmtgr], map: "fkhytgrcmtgr")
  @@index([keyhyobj], map: "fkhytgrhyobj")
}

model hytoo {
  keyhytoo   String    @id(map: "pkhytoo") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keyhying   String?   @db.Char(15)
  keyhysgu   String?   @db.Char(15)
  keyhytut   String    @db.Char(15)
  keyhytdt   String?   @db.Char(15)
  keycmngr   String?   @db.Char(15)
  caption    String    @db.VarChar(100)
  toocount   Int       @db.SmallInt
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  subcat     Int       @default(0, map: "DF__hytoo__subcat__5BC89D82") @db.TinyInt
  calctuo    Float     @db.Money
  prcntrent  Decimal   @default(0, map: "DF__hytoo__prcntrent__5CBCC1BB") @db.Decimal(7, 2)
  minrent    Float?    @db.Money
  indminrent Int       @default(0, map: "DF__hytoo__indminren__5DB0E5F4") @db.TinyInt
  maxrent    Float     @db.Money
  indmaxrent Int       @default(0, map: "DF__hytoo__indmaxren__5EA50A2D") @db.TinyInt
  useprcnt   Int       @default(1, map: "DF__hytoo__useprcnt__5F992E66") @db.TinyInt
  indrange   Int       @default(0, map: "DF__hytoo__indrange__608D529F") @db.TinyInt
  accsteps   Int       @default(0, map: "DF__hytoo__accsteps__618176D8") @db.TinyInt
  fixedamoun Float?    @db.Money
  indfixedam Int       @default(0, map: "DF__hytoo__indfixeda__62759B11") @db.TinyInt
  advamount  Float?    @db.Money
  deductmes  String?   @db.VarChar(200)
  adjpercent Float?    @db.Money
  reportmont Int       @default(1, map: "DF__hytoo__reportmon__6369BF4A") @db.TinyInt
  reportday  Int       @default(31, map: "DF__hytoo__reportday__645DE383") @db.TinyInt
  referfmont Int       @default(1, map: "DF__hytoo__referfmon__655207BC") @db.TinyInt
  referfday  Int       @default(1, map: "DF__hytoo__referfday__66462BF5") @db.TinyInt
  refertmont Int       @default(12, map: "DF__hytoo__refertmon__673A502E") @db.TinyInt
  refertday  Int       @default(31, map: "DF__hytoo__refertday__682E7467") @db.TinyInt
  usehytud   Int       @default(1, map: "DF__hytoo__usehytud__692298A0") @db.TinyInt
  timestamp  String    @db.Char(10)
  hyaos      hyaos[]
  hyded      hyded[]
  hyrad      hyrad[]
  cmngr      cmngr?    @relation(fields: [keycmngr], references: [keycmngr], onUpdate: NoAction, map: "fkhytookeycmngr ")
  hying      hying?    @relation(fields: [keyhying], references: [keyhying], onDelete: NoAction, onUpdate: NoAction, map: "fkhytookeyhying")
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhytookeyhyobj")
  hysgu      hysgu?    @relation(fields: [keyhysgu], references: [keyhysgu], onDelete: NoAction, onUpdate: NoAction, map: "fkhytookeyhysgu ")
  hytdt      hytdt?    @relation(fields: [keyhytdt], references: [keyhytdt], onDelete: NoAction, onUpdate: NoAction, map: "fkhytookeyhytdt ")
  hytut      hytut     @relation(fields: [keyhytut], references: [keyhytut], onUpdate: NoAction, map: "fkhytookeyhytut ")
  hytud      hytud[]
  hytus      hytus[]

  @@index([keycmngr], map: "fkhytoocmngr")
  @@index([keyhying], map: "fkhytoohying")
  @@index([keyhyobj], map: "fkhytoohyobj")
  @@index([keyhysgu], map: "fkhytoohysgu")
  @@index([keyhytdt], map: "fkhytoohytdt")
  @@index([keyhytut], map: "fkhytoohytut")
}

model hytos {
  keyhytos  String    @id(map: "pkhytos") @db.Char(15)
  keybascr  String    @db.Char(15)
  keyhytut  String    @db.Char(15)
  keyhycal  String?   @db.Char(15)
  fromdate  DateTime  @db.Date
  todate    DateTime? @db.Date
  timestamp String    @db.Char(10)
  bascr     bascr     @relation(fields: [keybascr], references: [keybascr], onDelete: Cascade, onUpdate: NoAction, map: "fkhytoskeybascr ")
  hycal     hycal?    @relation(fields: [keyhycal], references: [keyhycal], onUpdate: NoAction, map: "fkhytoskeyhycal ")
  hytut     hytut     @relation(fields: [keyhytut], references: [keyhytut], onUpdate: NoAction, map: "fkhytoskeyhytut ")

  @@index([keybascr], map: "fkhytosbascr")
  @@index([keyhycal], map: "fkhytoshycal")
  @@index([keyhytut], map: "fkhytoshytut")
}

model hytro {
  keyhytro  String @id(map: "pkhytro") @db.Char(15)
  intent    Int    @db.TinyInt
  sortorder Int    @db.TinyInt
  sendkind  Int    @db.TinyInt
  timestamp String @db.Char(10)
}

model hytua {
  keyhytua  String  @id(map: "pkhytua") @db.Char(15)
  keycmart  String  @db.Char(15)
  keyhytdt  String? @db.Char(15)
  tuotype   Int     @db.TinyInt
  meaning   Int     @db.TinyInt
  tuoorder  Int     @db.SmallInt
  usehytud  Int     @default(1, map: "DF__hytua__usehytud__6A23F755") @db.TinyInt
  timestamp String  @db.Char(10)
  cmart     cmart   @relation(fields: [keycmart], references: [keycmart], onDelete: Cascade, onUpdate: NoAction, map: "fkhytuakeycmart")
  hytdt     hytdt?  @relation(fields: [keyhytdt], references: [keyhytdt], onDelete: NoAction, onUpdate: NoAction, map: "fkhytuakeyhytdt")

  @@index([keycmart], map: "fkhytuacmart")
  @@index([keyhytdt], map: "fkhytuahytdt")
}

model hytud {
  keyhytud   String    @id(map: "pkhytud") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keyhycmn   String?   @db.Char(15)
  keyhycmt   String?   @db.Char(15)
  keyhyvss   String?   @db.Char(15)
  keyhytoo   String?   @db.Char(15)
  tuoday     DateTime  @db.Date
  tuoamount  Float     @default(0, map: "DF__hytud__tuoamount__3EFEC1D8") @db.Money
  tuoamountv Float     @default(0, map: "DF__hytud__tuoamount__3FF2E611") @db.Money
  creditcard Float     @default(0, map: "DF__hytud__creditcar__40E70A4A") @db.Money
  creditcarv Float     @default(0, map: "DF__hytud__creditcar__41DB2E83") @db.Money
  betamount  Float     @default(0, map: "DF__hytud__betamount__42CF52BC") @db.Money
  betamountv Float     @default(0, map: "DF__hytud__betamount__43C376F5") @db.Money
  paycust    Float     @default(0, map: "DF__hytud__paycust__44B79B2E") @db.Money
  visitcust  Float     @default(0, map: "DF__hytud__visitcust__45ABBF67") @db.Money
  tuoinfo    String?   @db.VarChar(200)
  tuostatus  Int       @default(0, map: "DF__hytud__tuostatus__469FE3A0") @db.TinyInt
  grossamoun Float     @default(0, map: "DF__hytud__grossamou__479407D9") @db.Money
  netamount  Float     @default(0, map: "DF__hytud__netamount__48882C12") @db.Money
  estimated  Int       @default(0, map: "DF__hytud__estimated__497C504B") @db.TinyInt
  registdate DateTime  @db.DateTime
  sendindate DateTime? @db.DateTime
  approvedat DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  hycmn      hycmn?    @relation(fields: [keyhycmn], references: [keyhycmn], onUpdate: NoAction, map: "fkhytudkeyhycmn ")
  hycmt      hycmt?    @relation(fields: [keyhycmt], references: [keyhycmt], onUpdate: NoAction, map: "fkhytudkeyhycmt ")
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhytudkeyhyobj")
  hytoo      hytoo?    @relation(fields: [keyhytoo], references: [keyhytoo], onDelete: NoAction, onUpdate: NoAction, map: "fkhytudkeyhytoo")
  hyvss      hyvss?    @relation(fields: [keyhyvss], references: [keyhyvss], onUpdate: NoAction, map: "fkhytudkeyhyvss ")

  @@index([keyhycmn], map: "fkhytudhycmn")
  @@index([keyhycmt], map: "fkhytudhycmt")
  @@index([keyhyobj], map: "fkhytudhyobj")
  @@index([keyhytoo], map: "fkhytudhytoo")
  @@index([keyhyvss], map: "fkhytudhyvss")
}

model hytuo {
  keyhytuo   String   @id(map: "pkhytuo") @db.Char(15)
  keyhyobj   String   @db.Char(15)
  keycmctc   String?  @db.Char(15)
  keysyusr   String?  @db.Char(15)
  regdate    DateTime @db.DateTime
  year       Int      @db.SmallInt
  month      Int      @db.TinyInt
  preltuo    Float    @db.Money
  preltuovat Float    @db.Money
  preltrans  Int
  timestamp  String   @db.Char(10)

  @@unique([keyhyobj, year, month], map: "akhytuo1")
  @@index([keycmctc], map: "fkhytuocmctc")
  @@index([keyhyobj], map: "fkhytuohyobj")
  @@index([keysyusr], map: "fkhytuosyusr")
}

model hytup {
  keyhytup   String @id(map: "pkhytup") @db.Char(15)
  keyhyobj   String @db.Char(15)
  pubtuoamou Int    @default(1, map: "DF__hytup__pubtuoamo__1202A01A") @db.TinyInt
  pubcreditc Int    @default(1, map: "DF__hytup__pubcredit__12F6C453") @db.TinyInt
  pubbetamou Int    @default(1, map: "DF__hytup__pubbetamo__13EAE88C") @db.TinyInt
  pubpaycust Int    @default(1, map: "DF__hytup__pubpaycus__14DF0CC5") @db.TinyInt
  pubvisitcu Int    @default(1, map: "DF__hytup__pubvisitc__15D330FE") @db.TinyInt
  pubtuoinfo Int    @default(1, map: "DF__hytup__pubtuoinf__16C75537") @db.TinyInt
  timestamp  String @db.Char(10)
  hyobj      hyobj  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhytupkeyhyobj")

  @@index([keyhyobj], map: "fkhytuphyobj")
}

model hytur {
  keyhytur   String   @id(map: "pkhytur") @db.Char(15)
  keyhytuy   String   @db.Char(15)
  senddate   DateTime @db.DateTime
  lastrespon DateTime @db.DateTime
  remindtype Int      @db.TinyInt
  timestamp  String   @db.Char(10)
  hytuy      hytuy    @relation(fields: [keyhytuy], references: [keyhytuy], onDelete: Cascade, onUpdate: NoAction, map: "fkhyturkeyhytuy")

  @@index([keyhytuy], map: "fkhyturhytuy")
}

model hytus {
  keyhytus                     String  @id(map: "pkhytus") @db.Char(15)
  keyhytoo                     String  @db.Char(15)
  keyhying                     String? @db.Char(15)
  keyhying2                    String? @db.Char(15)
  startvalue                   Float?  @db.Money
  stopvalue                    Float?  @db.Money
  percentage                   Float?  @db.Money
  amount                       Float?  @db.Money
  timestamp                    String  @db.Char(10)
  hying_hytus_keyhyingTohying  hying?  @relation("hytus_keyhyingTohying", fields: [keyhying], references: [keyhying], onDelete: NoAction, onUpdate: NoAction, map: "fkhytuskeyhying")
  hying_hytus_keyhying2Tohying hying?  @relation("hytus_keyhying2Tohying", fields: [keyhying2], references: [keyhying], onDelete: NoAction, onUpdate: NoAction, map: "fkhytuskeyhying2")
  hytoo                        hytoo   @relation(fields: [keyhytoo], references: [keyhytoo], onDelete: Cascade, map: "fkhytuskeyhytoo")

  @@index([keyhying], map: "fkhytushying")
  @@index([keyhying2], map: "fkhytushying2")
  @@index([keyhytoo], map: "fkhytushytoo")
}

model hytut {
  keyhytut   String   @id(map: "pkhytut") @db.Char(15)
  keysymdl   String   @db.Char(15)
  caption    String   @unique(map: "akhytut") @db.VarChar(200)
  isstandard Int      @db.TinyInt
  issystem   Int      @default(0, map: "DF__hytut__issystem__07945EAB") @db.TinyInt
  connectto  Int      @default(0, map: "DF__hytut__connectto__088882E4")
  sortorder  Int      @default(0, map: "DF__hytut__sortorder__097CA71D")
  decpos     Int      @default(0, map: "DF__hytut__decpos__0A70CB56") @db.TinyInt
  descr      String?  @db.VarChar(512)
  regunit    String?  @db.VarChar(30)
  multisel   Boolean? @default(false, map: "DF__hytut__multisel__0B64EF8F")
  mandatory  Boolean? @default(true, map: "DF__hytut__mandatory__0C5913C8")
  inputtype  Int      @default(0, map: "DF__hytut__inputtype__0D4D3801") @db.TinyInt
  vatperc    Decimal? @db.Decimal(6, 3)
  timestamp  String   @db.Char(10)
  hyscc      hyscc[]
  hystc      hystc[]
  hytdr      hytdr[]
  hytds      hytds[]
  hytoo      hytoo[]
  hytos      hytos[]
  hytuv      hytuv[]
  hytuy      hytuy[]
}

model hytuv {
  keyhytuv  String   @id(map: "pkhytuv") @db.Char(15)
  keyhytut  String   @db.Char(15)
  caption   String   @db.VarChar(60)
  textvalue String?  @db.VarChar(200)
  numvalue  Decimal? @db.Decimal(18, 3)
  sortorder Int      @default(0, map: "DF__hytuv__sortorder__73AD618F")
  timestamp String   @db.Char(10)
  hytut     hytut    @relation(fields: [keyhytut], references: [keyhytut], onUpdate: NoAction, map: "fkhytuvkeyhytut ")

  @@index([keyhytut], map: "fkhytuvhytut")
}

model hytuy {
  keyhytuy   String    @id(map: "pkhytuy") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keyhytut   String?   @db.Char(15)
  keysyusr   String    @db.Char(15)
  keysyusr2  String?   @db.Char(15)
  year       Int       @db.SmallInt
  fromdate   DateTime? @db.Date
  todate     DateTime? @db.Date
  tuoamount  Float?    @db.Money
  tuoregdate DateTime? @db.DateTime
  senddate   DateTime? @db.DateTime
  lastrespon DateTime? @db.Date
  confirmed  DateTime? @db.Date
  dedready   DateTime? @db.Date
  conamount  Float?    @db.Money
  canceldate DateTime? @db.Date
  timestamp  String    @db.Char(10)
  hyded      hyded[]
  hytar      hytar[]
  hytur      hytur[]
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhytuykeyhyobj")
  hytut      hytut?    @relation(fields: [keyhytut], references: [keyhytut], onDelete: NoAction, onUpdate: NoAction, map: "fkhytuykeyhytut ")

  @@index([keyhyobj], map: "fkhytuyhyobj")
  @@index([keyhytut], map: "fkhytuyhytut")
  @@index([keysyusr], map: "fkhytuysyusr")
  @@index([keysyusr2], map: "fkhytuysyusr2")
}

model hyuni {
  keyhyuni   String    @id(map: "pkhyuni") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  fromdate   DateTime? @db.DateTime
  todate     DateTime? @db.DateTime
  covpercent Decimal?  @db.Decimal(7, 2)
  subamount  Float?    @db.Money
  timestamp  String    @db.Char(10)

  @@index([keycmctc], map: "fkhyunicmctc")
  @@index([keycmobj], map: "fkhyunicmobj")
}

model hyurv {
  keyhyurv  String  @id(map: "pkhyurv") @db.Char(15)
  villkor   String? @db.VarChar(Max)
  timestamp String  @db.Char(10)
}

model hyuto {
  keyhyuto  String    @id(map: "pkhyuto") @db.Char(15)
  keycmobj  String    @db.Char(15)
  keyhyobj  String?   @db.Char(15)
  keyhyobj2 String?   @db.Char(15)
  keycmctc  String?   @db.Char(15)
  keysyusr  String?   @db.Char(15)
  avslutad  Int       @default(0, map: "DF__hyuto__avslutad__1AB154C0") @db.TinyInt
  visatyp   Int       @default(1, map: "DF__hyuto__visatyp__1BA578F9") @db.TinyInt
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  namn      String?   @db.VarChar(30)
  telefon   String?   @db.VarChar(30)
  mobiltel  String?   @db.VarChar(30)
  epost     String?   @db.VarChar(50)
  titel     String?   @db.VarChar(30)
  adress    String?   @db.VarChar(200)
  onlyint   Int       @default(0, map: "DF__hyuto__onlyint__1C999D32") @db.TinyInt
  hireready Int       @default(1, map: "DF__hyuto__hireready__1D8DC16B") @db.TinyInt
  disptime  DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  hydsp     hydsp[]
  hyobj     hyobj[]

  @@index([keycmctc], map: "fkhyutocmctc")
  @@index([keycmobj], map: "fkhyutocmobj")
  @@index([keyhyobj], map: "fkhyutohyobj")
  @@index([keyhyobj2], map: "fkhyutohyobj2")
  @@index([keysyusr], map: "fkhyutosyusr")
}

model hyvaa {
  keyhyvaa  String  @id(map: "pkhyvaa") @db.Char(15)
  caption   String  @unique(map: "akhyvaa1") @db.VarChar(100)
  timestamp String  @db.Char(10)
  hyinf     hyinf[]
}

model hyvae {
  keyhyvae                     String  @id(map: "pkhyvae") @db.Char(15)
  keycmart                     String  @db.Char(15)
  keycmart2                    String  @db.Char(15)
  keycmart3                    String? @db.Char(15)
  keycmart4                    String? @db.Char(15)
  keycmart5                    String? @db.Char(15)
  keycmart6                    String? @db.Char(15)
  keycmart7                    String? @db.Char(15)
  timestamp                    String  @db.Char(10)
  cmart_hyvae_keycmartTocmart  cmart   @relation("hyvae_keycmartTocmart", fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkhyvaekeycmart")
  cmart_hyvae_keycmart2Tocmart cmart   @relation("hyvae_keycmart2Tocmart", fields: [keycmart2], references: [keycmart], onUpdate: NoAction, map: "fkhyvaekeycmart2")
  cmart_hyvae_keycmart3Tocmart cmart?  @relation("hyvae_keycmart3Tocmart", fields: [keycmart3], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkhyvaekeycmart3")
  cmart_hyvae_keycmart4Tocmart cmart?  @relation("hyvae_keycmart4Tocmart", fields: [keycmart4], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkhyvaekeycmart4")
  cmart_hyvae_keycmart5Tocmart cmart?  @relation("hyvae_keycmart5Tocmart", fields: [keycmart5], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkhyvaekeycmart5")
  cmart_hyvae_keycmart6Tocmart cmart?  @relation("hyvae_keycmart6Tocmart", fields: [keycmart6], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkhyvaekeycmart6")
  cmart_hyvae_keycmart7Tocmart cmart?  @relation("hyvae_keycmart7Tocmart", fields: [keycmart7], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkhyvaekeycmart7")

  @@unique([keycmart, keycmart2, keycmart3], map: "akhyvae1")
  @@index([keycmart], map: "fkhyvaecmart")
  @@index([keycmart2], map: "fkhyvaecmart2")
  @@index([keycmart3], map: "fkhyvaecmart3")
  @@index([keycmart4], map: "fkhyvaecmart4")
  @@index([keycmart5], map: "fkhyvaecmart5")
  @@index([keycmart6], map: "fkhyvaecmart6")
  @@index([keycmart7], map: "fkhyvaecmart7")
}

model hyvcc {
  keyhyvcc  String @id(map: "pkhyvcc") @db.Char(15)
  keycmobj  String @db.Char(15)
  keyhyvct  String @db.Char(15)
  timestamp String @db.Char(10)
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyvcckeycmobj ")
  hyvct     hyvct  @relation(fields: [keyhyvct], references: [keyhyvct], onDelete: Cascade, onUpdate: NoAction, map: "fkhyvcckeyhyvct ")

  @@index([keycmobj], map: "fkhyvcccmobj")
  @@index([keyhyvct], map: "fkhyvcchyvct")
}

model hyvct {
  keyhyvct  String  @id(map: "pkhyvct") @db.Char(15)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  bkpuo     bkpuo[]
  hyvcc     hyvcc[]
}

model hyvss {
  keyhyvss  String  @id(map: "pkhyvss") @db.Char(15)
  caption   String  @unique(map: "akhyvss1") @db.VarChar(100)
  timestamp String  @db.Char(10)
  hytud     hytud[]
}

model hywre {
  keyhywre  String    @id(map: "pkhywre") @db.Char(15)
  keyhyobj  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmwro  String    @db.Char(15)
  fromdate  DateTime? @db.Date
  todate    DateTime? @db.Date
  salesresp Int       @default(0, map: "DF__hywre__salesresp__0D7FC273") @db.TinyInt
  timestamp String    @db.Char(10)
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkhywrekeycmctc")
  cmwro     cmwro     @relation(fields: [keycmwro], references: [keycmwro], onUpdate: NoAction, map: "fkhywrekeycmwro ")
  hyobj     hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhywrekeyhyobj")

  @@index([keycmctc], map: "fkhywrecmctc")
  @@index([keycmwro], map: "fkhywrecmwro")
  @@index([keyhyobj], map: "fkhywrehyobj")
}

model ikbeh {
  keyikbeh                     String    @id(map: "pkikbeh") @db.Char(15)
  keyrevrt                     String?   @db.Char(15)
  keycmctc                     String    @db.Char(15)
  keycmctc2                    String    @db.Char(15)
  keysyusr                     String    @db.Char(15)
  keysyusr2                    String?   @db.Char(15)
  keycmobj                     String    @db.Char(15)
  keyhyobj                     String?   @db.Char(15)
  keyprprj                     String?   @db.Char(15)
  keyprppr                     String?   @db.Char(15)
  keycmtyp                     String?   @db.Char(15)
  keyiksbg                     String?   @db.Char(15)
  keyikslr                     String?   @db.Char(15)
  code                         String    @db.VarChar(30)
  caption                      String?   @db.VarChar(60)
  regdate                      DateTime  @db.DateTime
  signatur                     String    @db.VarChar(80)
  orderdate                    DateTime? @db.DateTime
  signatur2                    String?   @db.VarChar(80)
  estlevdate                   DateTime? @db.DateTime
  totprice                     Float?    @db.Money
  degree                       Int       @default(0, map: "DF__ikbeh__degree__5ABD5828") @db.TinyInt
  degreenote                   String?   @db.VarChar(60)
  avilev                       String?   @db.VarChar(60)
  plexpdate                    DateTime? @db.DateTime
  status                       Int       @default(0, map: "DF__ikbeh__status__5BB17C61") @db.TinyInt
  invcompl                     Int       @default(0, map: "DF__ikbeh__invcompl__5CA5A09A") @db.TinyInt
  distrmodel                   Int       @default(0, map: "DF__ikbeh__distrmode__5D99C4D3") @db.TinyInt
  timestamp                    String    @db.Char(10)
  cmctc_ikbeh_keycmctcTocmctc  cmctc     @relation("ikbeh_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkikbehkeycmctc")
  cmctc_ikbeh_keycmctc2Tocmctc cmctc     @relation("ikbeh_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onUpdate: NoAction, map: "fkikbehkeycmctc2")
  hyobj                        hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkikbehkeyhyobj")
  iksbg                        iksbg?    @relation(fields: [keyiksbg], references: [keyiksbg], onDelete: NoAction, onUpdate: NoAction, map: "fkikbehkeyiksbg")
  ikslr                        ikslr?    @relation(fields: [keyikslr], references: [keyikslr], onDelete: NoAction, onUpdate: NoAction, map: "fkikbehkeyikslr ")
  prppr                        prppr?    @relation(fields: [keyprppr], references: [keyprppr], onUpdate: NoAction, map: "fkikbehkeyprppr")
  prprj                        prprj?    @relation(fields: [keyprprj], references: [keyprprj], onUpdate: NoAction, map: "fkikbehkeyprprj")
  ikbep                        ikbep[]
  ikber                        ikber[]
  ikbok                        ikbok[]
  ikppr                        ikppr[]
  iksbh                        iksbh[]

  @@index([keycmctc], map: "fkikbehcmctc")
  @@index([keycmctc2], map: "fkikbehcmctc2")
  @@index([keycmobj], map: "fkikbehcmobj")
  @@index([keycmtyp], map: "fkikbehcmtyp")
  @@index([keyhyobj], map: "fkikbehhyobj")
  @@index([keyiksbg], map: "fkikbehiksbg")
  @@index([keyikslr], map: "fkikbehikslr")
  @@index([keyprppr], map: "fkikbehprppr")
  @@index([keyprprj], map: "fkikbehprprj")
  @@index([keyrevrt], map: "fkikbehrevrt")
  @@index([keysyusr], map: "fkikbehsyusr")
  @@index([keysyusr2], map: "fkikbehsyusr2")
}

model ikbek {
  keyikbek  String @id(map: "pkikbek") @db.Char(15)
  keylrfkh  String @db.Char(15)
  keyikber  String @db.Char(15)
  amount    Float  @default(0, map: "DF__ikbek__amount__4BF11B63") @db.Money
  timestamp String @db.Char(10)

  @@index([keyikber], map: "fkikbekikber")
  @@index([keylrfkh], map: "fkikbeklrfkh")
}

model ikbep {
  keyikbep  String   @id(map: "pkikbep") @db.Char(15)
  keyikbeh  String   @db.Char(15)
  paydate   DateTime @db.Date
  amount    Float    @default(0, map: "DF__ikbep__amount__11F71137") @db.Money
  timestamp String   @db.Char(10)
  ikbeh     ikbeh    @relation(fields: [keyikbeh], references: [keyikbeh], onDelete: Cascade, onUpdate: NoAction, map: "fkikbepkeyikbeh ")

  @@index([keyikbeh], map: "fkikbepikbeh")
}

model ikber {
  keyikber    String    @id(map: "pkikber") @db.Char(15)
  keyikbeh    String    @db.Char(15)
  keycmart    String    @db.Char(15)
  keycmobj    String?   @db.Char(15)
  keyikber2   String?   @db.Char(15)
  keyimial    String?   @db.Char(15)
  caption     String    @db.VarChar(500)
  suppartno   String?   @db.VarChar(30)
  amount      Decimal?  @db.Decimal(9, 2)
  price       Float?    @db.Money
  vat         Float?    @db.Money
  vatnotded   Float?    @db.Money
  split       Int       @default(0, map: "DF__ikber__split__08D01BEF") @db.TinyInt
  delivered   Int       @default(0, map: "DF__ikber__delivered__09C44028") @db.TinyInt
  pldeldate   DateTime? @db.Date
  deldate     DateTime? @db.Date
  cancelled   Int       @default(0, map: "DF__ikber__cancelled__0AB86461") @db.TinyInt
  booked      Int       @default(0, map: "DF__ikber__booked__0BAC889A") @db.TinyInt
  aprstatus   Int       @default(0, map: "DF__ikber__aprstatus__0CA0ACD3") @db.TinyInt
  distrmodel  Int       @default(0, map: "DF__ikber__distrmode__0D94D10C") @db.TinyInt
  timestamp   String    @db.Char(10)
  cmart       cmart     @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkikberkeycmart")
  cmobj       cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkikberkeycmobj ")
  ikbeh       ikbeh     @relation(fields: [keyikbeh], references: [keyikbeh], onDelete: Cascade, onUpdate: NoAction, map: "fkikberkeyikbeh ")
  ikber       ikber?    @relation("ikberToikber", fields: [keyikber2], references: [keyikber], onDelete: NoAction, onUpdate: NoAction, map: "fkikberkeyikber2 ")
  other_ikber ikber[]   @relation("ikberToikber")
  imial       imial?    @relation(fields: [keyimial], references: [keyimial], onUpdate: NoAction, map: "fkikberkeyimial ")
  ikbok       ikbok[]

  @@index([keycmart], map: "fkikbercmart")
  @@index([keycmobj], map: "fkikbercmobj")
  @@index([keyikbeh], map: "fkikberikbeh")
  @@index([keyikber2], map: "fkikberikber2")
  @@index([keyimial], map: "fkikberimial")
}

model ikbok {
  keyikbok   String  @id(map: "pkikbok") @db.Char(15)
  keyikbeh   String  @db.Char(15)
  keyikber   String? @db.Char(15)
  keycmobj   String  @db.Char(15)
  distrvalue Decimal @default(0, map: "DF__ikbok__distrvalu__395C645D") @db.Decimal(4, 1)
  timestamp  String  @db.Char(10)
  cmobj      cmobj   @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkikbokkeycmobj")
  ikbeh      ikbeh   @relation(fields: [keyikbeh], references: [keyikbeh], onDelete: Cascade, onUpdate: NoAction, map: "fkikbokkeyikbeh")
  ikber      ikber?  @relation(fields: [keyikber], references: [keyikber], onDelete: NoAction, onUpdate: NoAction, map: "fkikbokkeyikber")

  @@unique([keyikbeh, keyikber, keycmobj], map: "akikbok1")
  @@index([keycmobj], map: "fkikbokcmobj")
  @@index([keyikbeh], map: "fkikbokikbeh")
  @@index([keyikber], map: "fkikbokikber")
}

model ikbrk {
  keyikbrk  String   @id(map: "pkikbrk") @db.Char(15)
  keyikkak  String?  @db.Char(15)
  keycmart  String   @db.Char(15)
  keycmvat  String?  @db.Char(15)
  keyimial  String?  @db.Char(15)
  caption   String   @db.VarChar(500)
  suppartno String?  @db.VarChar(30)
  amount    Decimal  @default(0, map: "DF__ikbrk__amount__39DD99D2") @db.Decimal(9, 2)
  price     Float    @default(0, map: "DF__ikbrk__price__3AD1BE0B") @db.Money
  vat       Float?   @db.Money
  vatnotded Float?   @db.Money
  factor    Decimal? @db.Decimal(5, 1)
  timestamp String   @db.Char(10)
  cmart     cmart    @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkikbrkkeycmart")
  cmvat     cmvat?   @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkikbrkkeycmvat ")
  ikkak     ikkak?   @relation(fields: [keyikkak], references: [keyikkak], onUpdate: NoAction, map: "fkikbrkkeyikkak")
  imial     imial?   @relation(fields: [keyimial], references: [keyimial], onUpdate: NoAction, map: "fkikbrkkeyimial ")

  @@index([keycmart], map: "fkikbrkcmart")
  @@index([keycmvat], map: "fkikbrkcmvat")
  @@index([keyikkak], map: "fkikbrkikkak")
  @@index([keyimial], map: "fkikbrkimial")
}

model ikdnt {
  keyikdnt  String  @id(map: "pkikdnt") @db.Char(15)
  code      String  @unique(map: "akikdnt") @db.VarChar(15)
  caption   String? @db.VarChar(60)
  timestamp String  @db.Char(10)
}

model ikkak {
  keyikkak  String  @id(map: "pkikkak") @db.Char(15)
  keyikmac  String  @db.Char(15)
  keyikkat  String  @db.Char(15)
  keyprrol  String? @db.Char(15)
  timestamp String  @db.Char(10)
  ikbrk     ikbrk[]
  ikkat     ikkat   @relation(fields: [keyikkat], references: [keyikkat], onDelete: Cascade, onUpdate: NoAction, map: "fkikkakkeyikkat ")
  ikmac     ikmac   @relation(fields: [keyikmac], references: [keyikmac], onDelete: Cascade, onUpdate: NoAction, map: "fkikkakkeyikmac ")
  prrol     prrol?  @relation(fields: [keyprrol], references: [keyprrol], onDelete: Cascade, onUpdate: NoAction, map: "fkikkakkeyprrol ")

  @@unique([keyikmac, keyikkat, keyprrol], map: "akikkak")
}

model ikkat {
  keyikkat  String  @id(map: "pkikkat") @db.Char(15)
  code      String  @unique(map: "akikkat") @db.VarChar(15)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  ikkak     ikkak[]
  prder     prder[]
}

model ikkmp {
  keyikkmp  String @id(map: "pkikkmp") @db.Char(15)
  keyikmal  String @db.Char(15)
  keybakmt  String @db.Char(15)
  timestamp String @db.Char(10)
  bakmt     bakmt  @relation(fields: [keybakmt], references: [keybakmt], onDelete: Cascade, onUpdate: NoAction, map: "fkikkmpkeybakmt ")
  ikmal     ikmal  @relation(fields: [keyikmal], references: [keyikmal], onDelete: Cascade, onUpdate: NoAction, map: "fkikkmpkeyikmal ")

  @@unique([keyikmal, keybakmt], map: "akikkmp")
}

model ikktp {
  keyikktp                     String  @id(map: "pkikktp") @db.Char(15)
  keyikmal                     String? @db.Char(15)
  keybakmt                     String? @db.Char(15)
  keybakmc                     String? @db.Char(15)
  keycmctc                     String? @db.Char(15)
  keycmctc2                    String? @db.Char(15)
  keyaobdl                     String? @db.Char(15)
  code                         String  @db.VarChar(30)
  caption                      String? @db.VarChar(30)
  fabrikat                     String? @db.VarChar(30)
  typbeteckn                   String? @db.VarChar(30)
  betjanar                     String? @db.VarChar(30)
  timestamp                    String  @db.Char(10)
  aobdl                        aobdl?  @relation(fields: [keyaobdl], references: [keyaobdl], onUpdate: NoAction, map: "fkikktpkeyaobdl ")
  bakmc                        bakmc?  @relation(fields: [keybakmc], references: [keybakmc], onUpdate: NoAction, map: "fkikktpkeybakmc ")
  bakmt                        bakmt?  @relation(fields: [keybakmt], references: [keybakmt], onUpdate: NoAction, map: "fkikktpkeybakmt ")
  cmctc_ikktp_keycmctcTocmctc  cmctc?  @relation("ikktp_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkikktpkeycmctc")
  cmctc_ikktp_keycmctc2Tocmctc cmctc?  @relation("ikktp_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkikktpkeycmctc2")
  ikmal                        ikmal?  @relation(fields: [keyikmal], references: [keyikmal], onUpdate: NoAction, map: "fkikktpkeyikmal ")
  ikund                        ikund[]

  @@index([keyaobdl], map: "fkikktpaobdl")
  @@index([keybakmc], map: "fkikktpbakmc")
  @@index([keybakmt], map: "fkikktpbakmt")
  @@index([keycmctc], map: "fkikktpcmctc")
  @@index([keycmctc2], map: "fkikktpcmctc2")
  @@index([keyikmal], map: "fkikktpikmal")
}

model ikmac {
  keyikmac  String  @id(map: "pkikmac") @db.Char(15)
  keyikmal  String  @db.Char(15)
  keycmctc  String  @db.Char(15)
  keyhyobj  String? @db.Char(15)
  timestamp String  @db.Char(10)
  ikkak     ikkak[]
  cmctc     cmctc   @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkikmackeycmctc")
  hyobj     hyobj?  @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkikmackeyhyobj")
  ikmal     ikmal   @relation(fields: [keyikmal], references: [keyikmal], onDelete: Cascade, onUpdate: NoAction, map: "fkikmackeyikmal ")

  @@unique([keyikmal, keycmctc, keyhyobj], map: "akikmac")
  @@index([keyhyobj], map: "fkikmachyobj")
}

model ikmal {
  keyikmal  String  @id(map: "pkikmal") @db.Char(15)
  code      String  @unique(map: "akikmal") @db.VarChar(15)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  barum     barum[]
  ikkmp     ikkmp[]
  ikktp     ikktp[]
  ikmac     ikmac[]
  ikmao     ikmao[]
  ikrum     ikrum[]
  ikund     ikund[]
}

model ikmao {
  keyikmao  String @id(map: "pkikmao") @db.Char(15)
  keyikmal  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkikmaokeycmobj ")
  ikmal     ikmal  @relation(fields: [keyikmal], references: [keyikmal], onDelete: Cascade, onUpdate: NoAction, map: "fkikmaokeyikmal ")

  @@unique([keyikmal, keycmobj], map: "akikmao")
}

model ikppr {
  keyikppr  String  @id(map: "pkikppr") @db.Char(15)
  keyikbeh  String  @db.Char(15)
  keyprppr  String  @db.Char(15)
  amount    Decimal @default(0, map: "DF__ikppr__amount__6F47D3CE") @db.Decimal(11, 2)
  timestamp String  @db.Char(10)
  ikbeh     ikbeh   @relation(fields: [keyikbeh], references: [keyikbeh], onDelete: Cascade, onUpdate: NoAction, map: "fkikpprkeyikbeh ")
  prppr     prppr   @relation(fields: [keyprppr], references: [keyprppr], onDelete: Cascade, onUpdate: NoAction, map: "fkikpprkeyprppr")

  @@unique([keyikbeh, keyprppr], map: "akikppr")
  @@index([keyprppr], map: "fkikpprprppr")
}

model ikrum {
  keyikrum  String @id(map: "pkikrum") @db.Char(15)
  keyikmal  String @db.Char(15)
  keybarut  String @db.Char(15)
  timestamp String @db.Char(10)
  barut     barut  @relation(fields: [keybarut], references: [keybarut], onDelete: Cascade, onUpdate: NoAction, map: "fkikrumkeybarut ")
  ikmal     ikmal  @relation(fields: [keyikmal], references: [keyikmal], onDelete: Cascade, onUpdate: NoAction, map: "fkikrumkeyikmal ")

  @@unique([keyikmal, keybarut], map: "akikrum")
}

model iksbg {
  keyiksbg  String  @id(map: "pkiksbg") @db.Char(15)
  caption   String  @unique(map: "akiksbg1") @db.VarChar(30)
  email     Int     @default(0, map: "DF__iksbg__email__1535F2D4") @db.TinyInt
  printer   Int     @default(0, map: "DF__iksbg__printer__162A170D") @db.TinyInt
  timestamp String  @db.Char(10)
  hyobj     hyobj[]
  ikbeh     ikbeh[]
}

model iksbh {
  keyiksbh  String   @id(map: "pkiksbh") @db.Char(15)
  keyiksbl  String   @db.Char(15)
  keyikbeh  String   @db.Char(15)
  keyhyobj  String   @db.Char(15)
  expdate   DateTime @db.DateTime
  timestamp String   @db.Char(10)
  hyobj     hyobj    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkiksbhkeyhyobj")
  ikbeh     ikbeh    @relation(fields: [keyikbeh], references: [keyikbeh], onDelete: Cascade, onUpdate: NoAction, map: "fkiksbhkeyikbeh ")
  iksbl     iksbl    @relation(fields: [keyiksbl], references: [keyiksbl], onDelete: Cascade, onUpdate: NoAction, map: "fkiksbhkeyiksbl ")

  @@index([keyhyobj], map: "fkiksbhhyobj")
  @@index([keyikbeh], map: "fkiksbhikbeh")
  @@index([keyiksbl], map: "fkiksbhiksbl")
}

model iksbl {
  keyiksbl  String   @id(map: "pkiksbl") @db.Char(15)
  keysyusr  String?  @db.Char(15)
  signatur  String   @db.VarChar(80)
  starttime DateTime @db.DateTime
  endtime   DateTime @db.DateTime
  tdateforf DateTime @db.DateTime
  timestamp String   @db.Char(10)
  iksbh     iksbh[]

  @@index([keysyusr], map: "fkiksblsyusr")
}

model ikslr {
  keyikslr  String  @id(map: "PK__ikslr__546180BB") @db.Char(15)
  caption   String  @unique(map: "akikslr1") @db.Char(30)
  timestamp String  @db.Char(10)
  hyobj     hyobj[]
  ikbeh     ikbeh[]
  imial     imial[]
}

model ikund {
  keyikund  String   @id(map: "pkikund") @db.Char(15)
  keyikmal  String?  @db.Char(15)
  keyikktp  String?  @db.Char(15)
  keypuatg  String   @db.Char(15)
  keypuagr  String?  @db.Char(15)
  keycmvat  String?  @db.Char(15)
  amount    Decimal? @db.Decimal(9, 2)
  invest    Int      @default(0, map: "DF__ikund__invest__0C990AEA") @db.TinyInt
  timestamp String   @db.Char(10)
  cmvat     cmvat?   @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkikundkeycmvat ")
  ikktp     ikktp?   @relation(fields: [keyikktp], references: [keyikktp], onUpdate: NoAction, map: "fkikundkeyikktp ")
  ikmal     ikmal?   @relation(fields: [keyikmal], references: [keyikmal], onUpdate: NoAction, map: "fkikundkeyikmal ")
  puagr     puagr?   @relation(fields: [keypuagr], references: [keypuagr], onUpdate: NoAction, map: "fkikundkeypuagr")
  puatg     puatg    @relation(fields: [keypuatg], references: [keypuatg], onDelete: Cascade, onUpdate: NoAction, map: "fkikundkeypuatg ")

  @@index([keycmvat], map: "fkikundcmvat")
  @@index([keyikktp], map: "fkikundikktp")
  @@index([keyikmal], map: "fkikundikmal")
  @@index([keypuagr], map: "fkikundpuagr")
  @@index([keypuatg], map: "fkikundpuatg")
}

model ikvat {
  keyikvat  String  @id(map: "pkikvat") @db.Char(15)
  caption   String  @unique(map: "akikvat") @db.VarChar(80)
  fixedperc Int     @default(1, map: "DF__ikvat__fixedperc__190683B8") @db.TinyInt
  isdefault Int     @default(0, map: "DF__ikvat__isdefault__19FAA7F1") @db.TinyInt
  prctage   Decimal @default(0, map: "DF__ikvat__prctage__1AEECC2A") @db.Decimal(7, 4)
  timestamp String  @db.Char(10)
}

model imalo {
  keyimalo   String   @id(map: "pkimalo") @db.Char(15)
  keyimial   String   @db.Char(15)
  keycode    String?  @db.Char(15)
  changetype Int      @default(0, map: "DF__imalo__changetyp__1C9EBCDC") @db.TinyInt
  changedate DateTime @db.Date
  changetime DateTime @db.Time
  newqty     Int      @default(0, map: "DF__imalo__newqty__1D92E115")
  changeqty  Int      @default(0, map: "DF__imalo__changeqty__1E87054E")
  changetext String?  @db.VarChar(120)
  timestamp  String   @db.Char(10)
  imial      imial    @relation(fields: [keyimial], references: [keyimial], onDelete: Cascade, onUpdate: NoAction, map: "fkimalokeyimial")

  @@index([keyimial], map: "fkimaloimial")
}

model imial {
  keyimial  String  @id(map: "pkimial") @db.Char(15)
  keyiminv  String  @db.Char(15)
  keycmart  String  @db.Char(15)
  keyikslr  String? @db.Char(15)
  storeloc  String? @db.VarChar(60)
  quantity  Int     @default(0, map: "DF__imial__quantity__16027993")
  minqty    Int     @default(0, map: "DF__imial__minqty__16F69DCC")
  maxqty    Int     @default(0, map: "DF__imial__maxqty__17EAC205")
  orderqty  Int     @default(0, map: "DF__imial__orderqty__18DEE63E")
  timestamp String  @db.Char(10)
  ikber     ikber[]
  ikbrk     ikbrk[]
  imalo     imalo[]
  cmart     cmart   @relation(fields: [keycmart], references: [keycmart], onDelete: Cascade, onUpdate: NoAction, map: "fkimialkeycmart")
  ikslr     ikslr?  @relation(fields: [keyikslr], references: [keyikslr], onUpdate: NoAction, map: "fkimialkeyikslr ")
  iminv     iminv   @relation(fields: [keyiminv], references: [keyiminv], onDelete: Cascade, onUpdate: NoAction, map: "fkimialkeyiminv ")
  prmtr     prmtr[]

  @@unique([keyiminv, keycmart], map: "akimial")
  @@index([keycmart], map: "fkimialcmart")
  @@index([keyikslr], map: "fkimialikslr")
  @@index([keyiminv], map: "fkimialiminv")
}

model iminv {
  keyiminv  String  @id(map: "pkiminv") @db.Char(15)
  keycmobj  String? @db.Char(15)
  code      String  @unique(map: "akiminv1") @db.VarChar(20)
  caption   String  @db.VarChar(60)
  descr     String? @db.VarChar(500)
  timestamp String  @db.Char(10)
  imial     imial[]
  cmobj     cmobj?  @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkiminvkeycmobj")

  @@index([keycmobj], map: "fkiminvcmobj")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_abc {
  code     String   @db.Char(30)
  valdate  DateTime @db.DateTime
  Verk1    Float    @db.Money
  Verk2    Float?   @db.Money
  keydrmpt String   @db.Char(15)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_allamedsok_sept {
  persorgnr String?  @db.VarChar(15)
  quetime   DateTime @db.DateTime
  keycmctc  String   @db.Char(15)
  cmctckod  String   @db.VarChar(30)
  cmctcben  String   @db.VarChar(100)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_augusti_medsok_kotid {
  nykey      String    @db.Char(15)
  nykod      String    @db.VarChar(30)
  quetime    DateTime  @db.DateTime
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  dgophone   Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  digitalcom Int       @db.TinyInt
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_augusti_medsokande_justera {
  cmctckod          String    @db.VarChar(30)
  cmctcben          String    @db.VarChar(100)
  persorgnr         String?   @db.VarChar(15)
  kotid             DateTime  @db.DateTime
  dublettKontakt    String    @db.VarChar(30)
  KontraktAvtalsdat DateTime? @db.DateTime
  KontraktFrom      DateTime? @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_augusti_medsokande_justera_report {
  cmctckod                     String    @db.VarChar(30)
  cmctcben                     String    @db.VarChar(100)
  persorgnr                    String?   @db.VarChar(15)
  kotid                        DateTime  @db.DateTime
  dublettKontakt               String    @db.VarChar(30)
  KontraktAvtalsdat            DateTime? @db.DateTime
  KontraktFrom                 DateTime? @db.DateTime
  DiffdagarKotidKontrakt       Int?
  Diff5xMonth_KontraktTo210115 Int?
  DiffDiff                     Int?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_augusti_medsokbas {
  quetime    DateTime  @db.DateTime
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  dgophone   Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  digitalcom Int       @db.TinyInt
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_augusti_medsokny {
  nykey      String    @db.Char(15)
  nykod      String    @db.VarChar(30)
  quetime    DateTime  @db.DateTime
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  dgophone   Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  digitalcom Int       @db.TinyInt
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_bkctc {
  keybkctc   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmtyp   String?   @db.Char(15)
  keycmtyp2  String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmqry   String?   @db.Char(15)
  keybkpri   String?   @db.Char(15)
  keybklst   String?   @db.Char(15)
  keybklsr   String?   @db.Char(15)
  arbetsgiv  String?   @db.VarChar(30)
  anstdatum  DateTime? @db.DateTime
  arsinkomst Float?    @db.Money
  arsinkar   Int?      @db.SmallInt
  incomemon  Float?    @db.Money
  assets     Float?    @db.Money
  debt       Float?    @db.Money
  adress1    String?   @db.VarChar(30)
  adress2    String?   @db.VarChar(30)
  telefon    String?   @db.VarChar(30)
  hyresvard  String?   @db.VarChar(30)
  inflyttad  Int?      @db.SmallInt
  inflyttnuv Int?      @db.SmallInt
  boadress1  String?   @db.VarChar(30)
  boadress2  String?   @db.VarChar(30)
  botelefon  String?   @db.VarChar(30)
  antalvuxna Int       @db.TinyInt
  antalbarn  Int       @db.TinyInt
  sparrtom   DateTime? @db.DateTime
  created    DateTime  @db.DateTime
  lastconfir DateTime? @db.DateTime
  regnumber  String?   @db.VarChar(30)
  approval   Int       @db.TinyInt
  chargefrom DateTime? @db.DateTime
  chargeto   DateTime? @db.DateTime
  soccon     Int       @db.TinyInt
  socconfrom DateTime? @db.DateTime
  socconto   DateTime? @db.DateTime
  socconapp  Int       @db.TinyInt
  expbaby    Int?      @db.TinyInt
  expbabydat DateTime? @db.DateTime
  exptwin    Int?      @db.TinyInt
  soccontext String?   @db.VarChar(100)
  birthplace String?   @db.VarChar(30)
  coapplicnt Int       @db.TinyInt
  homecare   String?   @db.VarChar(30)
  webaccess  Int       @db.TinyInt
  member     Int       @db.TinyInt
  ressaver   Int       @db.TinyInt
  isinternal Int       @db.TinyInt
  extnumber  String?   @db.VarChar(30)
  eduinstitu String?   @db.VarChar(60)
  homeless   DateTime? @db.Date
  rentnow    Float?    @db.Money
  norooms    Int?      @db.SmallInt
  cursurface Decimal?  @db.Decimal(14, 2)
  noliving   Int?      @db.SmallInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_bkctc_2 {
  keybkctc   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmtyp   String?   @db.Char(15)
  keycmtyp2  String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmqry   String?   @db.Char(15)
  keybkpri   String?   @db.Char(15)
  keybklst   String?   @db.Char(15)
  keybklsr   String?   @db.Char(15)
  arbetsgiv  String?   @db.VarChar(30)
  anstdatum  DateTime? @db.DateTime
  arsinkomst Float?    @db.Money
  arsinkar   Int?      @db.SmallInt
  incomemon  Float?    @db.Money
  assets     Float?    @db.Money
  debt       Float?    @db.Money
  adress1    String?   @db.VarChar(30)
  adress2    String?   @db.VarChar(30)
  telefon    String?   @db.VarChar(30)
  hyresvard  String?   @db.VarChar(30)
  inflyttad  Int?      @db.SmallInt
  inflyttnuv Int?      @db.SmallInt
  boadress1  String?   @db.VarChar(30)
  boadress2  String?   @db.VarChar(30)
  botelefon  String?   @db.VarChar(30)
  antalvuxna Int       @db.TinyInt
  antalbarn  Int       @db.TinyInt
  sparrtom   DateTime? @db.DateTime
  created    DateTime  @db.DateTime
  lastconfir DateTime? @db.DateTime
  regnumber  String?   @db.VarChar(30)
  approval   Int       @db.TinyInt
  chargefrom DateTime? @db.DateTime
  chargeto   DateTime? @db.DateTime
  soccon     Int       @db.TinyInt
  socconfrom DateTime? @db.DateTime
  socconto   DateTime? @db.DateTime
  socconapp  Int       @db.TinyInt
  expbaby    Int?      @db.TinyInt
  expbabydat DateTime? @db.DateTime
  exptwin    Int?      @db.TinyInt
  soccontext String?   @db.VarChar(100)
  birthplace String?   @db.VarChar(30)
  coapplicnt Int       @db.TinyInt
  homecare   String?   @db.VarChar(30)
  webaccess  Int       @db.TinyInt
  member     Int       @db.TinyInt
  ressaver   Int       @db.TinyInt
  isinternal Int       @db.TinyInt
  extnumber  String?   @db.VarChar(30)
  eduinstitu String?   @db.VarChar(60)
  homeless   DateTime? @db.Date
  rentnow    Float?    @db.Money
  norooms    Int?      @db.SmallInt
  cursurface Decimal?  @db.Decimal(14, 2)
  noliving   Int?      @db.SmallInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_bkqte {
  keybkqte   String    @db.Char(15)
  keybkkty   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_bkqte_2 {
  keybkqte   String    @db.Char(15)
  keybkkty   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_bkqte_ms {
  keybkqte   String    @db.Char(15)
  keybkkty   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmadr {
  keycmadr  String    @db.Char(15)
  keycmtyp  String    @db.Char(15)
  keydbtbl  String    @db.Char(15)
  keycode   String    @db.Char(15)
  region    String    @db.Char(2)
  adress1   String?   @db.VarChar(60)
  adress2   String?   @db.VarChar(60)
  adress3   String?   @db.VarChar(60)
  adress4   String?   @db.VarChar(60)
  adress5   String?   @db.VarChar(60)
  adress6   String?   @db.VarChar(60)
  adress7   String?   @db.VarChar(60)
  adress8   String?   @db.VarChar(60)
  adress9   String?   @db.VarChar(60)
  adress10  String?   @db.VarChar(60)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmadr_2 {
  keycmadr  String    @db.Char(15)
  keycmtyp  String    @db.Char(15)
  keydbtbl  String    @db.Char(15)
  keycode   String    @db.Char(15)
  region    String    @db.Char(2)
  adress1   String?   @db.VarChar(60)
  adress2   String?   @db.VarChar(60)
  adress3   String?   @db.VarChar(60)
  adress4   String?   @db.VarChar(60)
  adress5   String?   @db.VarChar(60)
  adress6   String?   @db.VarChar(60)
  adress7   String?   @db.VarChar(60)
  adress8   String?   @db.VarChar(60)
  adress9   String?   @db.VarChar(60)
  adress10  String?   @db.VarChar(60)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmcro {
  keycmcro  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmrol  String    @db.Char(15)
  croused   Int       @db.TinyInt
  lastused  DateTime? @db.Date
  timestamp String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmcro_2 {
  keycmcro  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmrol  String    @db.Char(15)
  croused   Int       @db.TinyInt
  lastused  DateTime? @db.Date
  timestamp String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmctc {
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmctc_2 {
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmeml {
  keycmeml  String    @db.Char(15)
  keycmemt  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  cmemlben  String    @db.VarChar(80)
  main      Int       @db.TinyInt
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmeml_2 {
  keycmeml  String    @db.Char(15)
  keycmemt  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  cmemlben  String    @db.VarChar(80)
  main      Int       @db.TinyInt
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmmem {
  keycmmem  String  @db.Char(15)
  keycode   String  @db.Char(15)
  id        Int
  kind      Int     @db.TinyInt
  name      String? @db.Char(30)
  text      String  @db.Text
  priority  Int     @db.TinyInt
  timestamp String? @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmmem_2 {
  keycmmem  String  @db.Char(15)
  keycode   String  @db.Char(15)
  id        Int
  kind      Int     @db.TinyInt
  name      String? @db.Char(30)
  text      String  @db.Text
  priority  Int     @db.TinyInt
  timestamp String? @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmmem2 {
  keycmmem  String  @db.Char(15)
  keycode   String  @db.Char(15)
  id        Int
  kind      Int     @db.TinyInt
  name      String? @db.Char(30)
  text      String  @db.Text
  priority  Int     @db.TinyInt
  timestamp String? @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmobj {
  keycmobj   String    @db.Char(15)
  keycmobt   String    @db.Char(15)
  bcode      String?   @db.VarChar(500)
  bcodetype  Int       @db.TinyInt
  objcond    Int       @db.TinyInt
  objcondate DateTime? @db.DateTime
  sharekind  Int       @db.TinyInt
  energycls  Int       @db.TinyInt
  nrginfreg  DateTime? @db.Date
  nrginfrec  DateTime? @db.Date
  nrgindex   Decimal?  @db.Decimal(10, 2)
  heatingcls Int       @db.TinyInt
  deletemark Int       @db.TinyInt
  timestamp  String?   @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmobj_2 {
  keycmobj   String    @db.Char(15)
  keycmobt   String    @db.Char(15)
  bcode      String?   @db.VarChar(500)
  bcodetype  Int       @db.TinyInt
  objcond    Int       @db.TinyInt
  objcondate DateTime? @db.DateTime
  sharekind  Int       @db.TinyInt
  energycls  Int       @db.TinyInt
  nrginfreg  DateTime? @db.Date
  nrginfrec  DateTime? @db.Date
  nrgindex   Decimal?  @db.Decimal(10, 2)
  heatingcls Int       @db.TinyInt
  deletemark Int       @db.TinyInt
  timestamp  String?   @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmtel {
  keycmtel  String    @db.Char(15)
  keycmtet  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  cmtelben  String    @db.Char(30)
  main      Int       @db.TinyInt
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String?   @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_cmtel_2 {
  keycmtel  String    @db.Char(15)
  keycmtet  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  cmtelben  String    @db.Char(30)
  main      Int       @db.TinyInt
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String?   @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_ctc_imp_ms {
  keybkctc            String?   @db.VarChar(15)
  Kundnummer          String?   @db.NVarChar(255)
  Personnummer        String?   @db.NVarChar(255)
  Namn                String?   @db.NVarChar(255)
  Fornamn             String?   @db.NVarChar(255)
  Efternamn           String?   @db.NVarChar(255)
  Adress1             String?   @db.NVarChar(255)
  Adress2             String?   @db.NVarChar(255)
  Postnummer          String?   @db.NVarChar(255)
  Ort                 String?   @db.NVarChar(255)
  Land                String?   @db.NVarChar(255)
  Telefonhem          String?   @db.NVarChar(255)
  Telefonarbete       String?   @db.NVarChar(255)
  Telefonmobil        String?   @db.NVarChar(255)
  Skapaddatum         DateTime? @db.DateTime
  Prioritet           DateTime? @db.DateTime
  Sokandekontroll     String?   @db.NVarChar(255)
  Sparrtom            DateTime? @db.DateTime
  Antalvuxna          String?   @db.NVarChar(255)
  Antalbarn           String?   @db.NVarChar(255)
  Debiterasfrom       DateTime? @db.Date
  Debiterastom        DateTime? @db.Date
  Internsokande       Float?
  Medsokande          Float?
  Medsokandekundnr    String?   @db.NVarChar(255)
  Arbetsgivare        String?   @db.NVarChar(255)
  Anstallningsdatum   String?   @db.NVarChar(255)
  Arsinkomst          Float?
  Arsinkomstar        String?   @db.NVarChar(255)
  Arbetsgivareadress1 String?   @db.NVarChar(255)
  Arbetsgivareadress2 String?   @db.NVarChar(255)
  Arbetsgivaretelefon String?   @db.NVarChar(255)
  Hyresvard           String?   @db.NVarChar(255)
  Inflyttad           String?   @db.NVarChar(255)
  Inflyttadinuv       String?   @db.NVarChar(255)
  Boadress1           String?   @db.NVarChar(255)
  Boadress2           String?   @db.NVarChar(255)
  Botelefon           String?   @db.NVarChar(255)
  Regnr               String?   @db.NVarChar(255)
  Aktiv               String?   @db.NVarChar(255)
  Notering            String?   @db.NVarChar(255)
  Epost               String?   @db.NVarChar(255)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medboende {
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medboende_ms {
  keycmctc   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctk   String    @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keysyloc   String    @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keylrpmt   String    @db.Char(15)
  keyaover   String?   @db.Char(15)
  keyaover2  String?   @db.Char(15)
  keycmtgr   String?   @db.Char(15)
  keyprdel   String?   @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)
  lcidcivno  Int
  birthdate  DateTime? @db.DateTime
  gender     Int       @db.TinyInt
  civilstat  Int       @db.TinyInt
  fnamn      String?   @db.VarChar(30)
  mname      String?   @db.VarChar(30)
  enamn      String?   @db.VarChar(45)
  birthname  String?   @db.VarChar(45)
  xname      String?   @db.VarChar(30)
  title      String?   @db.VarChar(30)
  region     String?   @db.Char(2)
  avdelning  String?   @db.VarChar(45)
  studentno  String?   @db.VarChar(30)
  nstudentno String?   @db.VarChar(30)
  sstudentno String?   @db.VarChar(30)
  studcheck  Int       @db.TinyInt
  createdate DateTime? @db.Date
  avliden    DateTime? @db.DateTime
  konkurs    DateTime? @db.DateTime
  lagsokt    DateTime? @db.DateTime
  utslag     DateTime? @db.DateTime
  avhyst     DateTime? @db.DateTime
  delgiven   DateTime? @db.DateTime
  betfore    DateTime? @db.DateTime
  aggressive DateTime? @db.DateTime
  msnp       DateTime? @db.DateTime
  wsnp       DateTime? @db.DateTime
  sletdate   DateTime? @db.DateTime
  demstatus  Int       @db.TinyInt
  hgffrom    DateTime? @db.DateTime
  hgftom     DateTime? @db.DateTime
  anstnr     String?   @db.VarChar(15)
  cper       Int       @db.TinyInt
  prminbel   Float?    @db.Money
  forvtyp    Int?      @db.TinyInt
  resursmail Int       @db.TinyInt
  aoexport   Int       @db.TinyInt
  mailnoti   Int       @db.TinyInt
  jobprcnt   Decimal?  @db.Decimal(4, 1)
  pg         String?   @db.VarChar(11)
  bg         String?   @db.VarChar(11)
  clearing   Int?
  account    String?   @db.VarChar(20)
  accheck    Int       @db.TinyInt
  accnttype  Int       @db.TinyInt
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(42)
  vatno      String?   @db.VarChar(20)
  gln        String?   @db.VarChar(13)
  aouppinfo  String?   @db.VarChar(60)
  aoadmmail  Int       @db.TinyInt
  gdprkeep   Int       @db.TinyInt
  gdprdate   DateTime? @db.Date
  gdprreason String?   @db.VarChar(100)
  externid   String?   @db.VarChar(64)
  atremtype  Int       @db.TinyInt
  ikmestype  Int       @db.TinyInt
  gensoi     Int       @db.TinyInt
  nomerge    Int       @db.TinyInt
  korrvag    Int       @db.TinyInt
  extblocked Int       @db.TinyInt
  blockads   Int       @db.TinyInt
  blockinfo  Int       @db.TinyInt
  citizen    Int       @db.TinyInt
  birthtime  String?   @db.Char(3)
  otherid    String?   @db.VarChar(30)
  tin        String?   @db.VarChar(30)
  tincountry String?   @db.Char(2)
  ppersorgnr String?   @db.VarChar(15)
  pfnamn     String?   @db.VarChar(30)
  penamn     String?   @db.VarChar(30)
  pcmctcben  String?   @db.VarChar(100)
  dsguid     String?   @db.VarChar(60)
  deletemark Int       @db.TinyInt
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medboende_soktid {
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  keycmctc   String    @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medboende_soktid_ms {
  quetime    DateTime  @db.DateTime
  originalqt DateTime? @db.DateTime
  keycmctc   String    @db.Char(15)
  cmctckod   String    @db.VarChar(30)
  cmctcben   String    @db.VarChar(100)
  persorgnr  String?   @db.VarChar(15)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medsok_orginal {
  kundnummer       String?   @db.NVarChar(255)
  personnummer     String?   @db.NVarChar(255)
  namn             String?   @db.NVarChar(255)
  adress1          String?   @db.NVarChar(255)
  postnummer       String?   @db.NVarChar(255)
  ort              String?   @db.NVarChar(255)
  medsokandekundnr String?   @db.NVarChar(255)
  ctckod           String?   @db.NVarChar(255)
  kotyp            String?   @db.NVarChar(255)
  quetime          DateTime? @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medsok_persnr_sept {
  persorgnr String?  @db.VarChar(15)
  keycmctc  String   @db.Char(15)
  quetime   DateTime @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medsokande_alla_kotidjust_sept {
  persorgnr         String?   @db.VarChar(15)
  quetime           DateTime  @db.DateTime
  keycmctc          String    @db.Char(15)
  cmctckod          String    @db.VarChar(30)
  cmctcben          String    @db.VarChar(100)
  kontrakt          String    @db.VarChar(35)
  KontraktAvtalsdat DateTime? @db.DateTime
  KontraktFrom      DateTime? @db.DateTime
  SistaDeb          DateTime? @db.DateTime
  objtyp            String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medsokande_justera {
  quetime           DateTime  @db.DateTime
  originalqt        DateTime? @db.DateTime
  keycmctc          String    @db.Char(15)
  cmctckod          String    @db.VarChar(30)
  cmctcben          String    @db.VarChar(100)
  persorgnr         String?   @db.VarChar(15)
  kontrakt          String    @db.VarChar(35)
  KontraktAvtalsdat DateTime? @db.DateTime
  KontraktFrom      DateTime? @db.DateTime
  SistaDeb          DateTime? @db.DateTime
  objtyp            String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medsokande_justera_unika {
  quetime           DateTime  @db.DateTime
  originalqt        DateTime? @db.DateTime
  keycmctc          String    @db.Char(15)
  cmctckod          String    @db.VarChar(30)
  cmctcben          String    @db.VarChar(100)
  persorgnr         String?   @db.VarChar(15)
  kontrakt          String    @db.VarChar(35)
  KontraktAvtalsdat DateTime? @db.DateTime
  KontraktFrom      DateTime? @db.DateTime
  SistaDeb          DateTime? @db.DateTime
  objtyp            String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medsokande_justera2 {
  quetime           DateTime  @db.DateTime
  originalqt        DateTime? @db.DateTime
  keycmctc          String    @db.Char(15)
  cmctckod          String    @db.VarChar(30)
  cmctcben          String    @db.VarChar(100)
  persorgnr         String?   @db.VarChar(15)
  kontrakt          String    @db.VarChar(35)
  KontraktAvtalsdat DateTime? @db.DateTime
  KontraktFrom      DateTime? @db.DateTime
  SistaDeb          DateTime? @db.DateTime
  objtyp            String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_medsokande_justeraoktober {
  kundnummer        String?   @db.NVarChar(255)
  personnummer      String?   @db.NVarChar(255)
  namn              String?   @db.NVarChar(255)
  adress1           String?   @db.NVarChar(255)
  postnummer        String?   @db.NVarChar(255)
  ort               String?   @db.NVarChar(255)
  medsokandekundnr  String?   @db.NVarChar(255)
  ctckod            String?   @db.NVarChar(255)
  kotyp             String?   @db.NVarChar(255)
  quetime           DateTime? @db.DateTime
  kontrakt          String    @db.VarChar(35)
  KontraktAvtalsdat DateTime? @db.DateTime
  KontraktFrom      DateTime? @db.DateTime
  SistaDeb          DateTime? @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_rapportForbrukare {
  code        String    @db.Char(30)
  generation  Int
  fdate       DateTime  @db.DateTime
  tdate       DateTime? @db.DateTime
  Fordelning  String    @db.VarChar(7)
  Kod         String?   @db.VarChar(30)
  Vardtyp     String    @db.VarChar(7)
  typ         String?   @db.VarChar(15)
  Benamning   String?   @db.VarChar(60)
  placering   String?   @db.VarChar(520)
  FordelVarde Float     @db.Money
  keydrmhf    String    @db.Char(15)
  keydrmpt    String    @db.Char(15)
  keycmobj    String    @db.Char(15)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_soktid_imp_ms {
  keybkqte String?   @db.VarChar(15)
  Kotyp    String?   @db.NVarChar(255)
  CtcKod   String?   @db.NVarChar(255)
  QueTime  DateTime? @db.DateTime

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_sygru {
  keysygru  String @db.Char(15)
  keysygrp  String @db.Char(15)
  keysyusr  String @db.Char(15)
  timestamp String @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_sygru_2 {
  keysygru  String @db.Char(15)
  keysygrp  String @db.Char(15)
  keysyusr  String @db.Char(15)
  timestamp String @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_syusr {
  keysyusr   String    @db.Char(15)
  userid     String    @db.VarChar(80)
  userkey    String    @db.VarChar(500)
  hshslt     String?   @db.VarChar(100)
  hshkey     String?   @db.VarChar(700)
  hshver     Int
  userspr    Int       @db.TinyInt
  name       String    @db.VarChar(80)
  phone      String    @db.VarChar(30)
  email      String    @db.VarChar(50)
  lcid       Int
  loglast    DateTime? @db.DateTime
  logcount   Int
  lognode    String?   @db.VarChar(30)
  extid      String?   @db.VarChar(64)
  pswchglst  DateTime? @db.DateTime
  pswchgnow  Int       @db.TinyInt
  pswchgnot  Int       @db.TinyInt
  pswexpnot  Int       @db.TinyInt
  accexp     DateTime? @db.DateTime
  acctime    String    @db.VarChar(168)
  acclocked  Int       @db.TinyInt
  serviceacc Int       @db.TinyInt
  userpic    Bytes?
  created    DateTime  @db.DateTime
  createtype Int       @db.TinyInt
  adignore   Int       @db.TinyInt
  chaquekind Int       @db.TinyInt
  chaqueansw String?   @db.VarChar(250)
  chaqueguid String?   @db.VarChar(250)
  chaqueexpi DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_syusr_2 {
  keysyusr   String    @db.Char(15)
  userid     String    @db.VarChar(80)
  userkey    String    @db.VarChar(500)
  hshslt     String?   @db.VarChar(100)
  hshkey     String?   @db.VarChar(700)
  hshver     Int
  userspr    Int       @db.TinyInt
  name       String    @db.VarChar(80)
  phone      String    @db.VarChar(30)
  email      String    @db.VarChar(50)
  lcid       Int
  loglast    DateTime? @db.DateTime
  logcount   Int
  lognode    String?   @db.VarChar(30)
  extid      String?   @db.VarChar(64)
  pswchglst  DateTime? @db.DateTime
  pswchgnow  Int       @db.TinyInt
  pswchgnot  Int       @db.TinyInt
  pswexpnot  Int       @db.TinyInt
  accexp     DateTime? @db.DateTime
  acctime    String    @db.VarChar(168)
  acclocked  Int       @db.TinyInt
  serviceacc Int       @db.TinyInt
  userpic    Bytes?
  created    DateTime  @db.DateTime
  createtype Int       @db.TinyInt
  adignore   Int       @db.TinyInt
  chaquekind Int       @db.TinyInt
  chaqueansw String?   @db.VarChar(250)
  chaqueguid String?   @db.VarChar(250)
  chaqueexpi DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model konv_valbase {
  code     String   @db.Char(30)
  valdate  DateTime @db.DateTime
  Verk1    Float    @db.Money
  Verk2    Float?   @db.Money
  keydrmpt String   @db.Char(15)

  @@ignore
}

model kragk {
  keykragk   String    @id(map: "pkkragk") @db.Char(15)
  keyrevrt   String    @db.Char(15)
  keycmdbg   String?   @db.Char(15)
  keykrknr   String    @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  mandateid  String?   @db.VarChar(20)
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(34)
  agnumber   String?   @db.VarChar(16)
  aglength   Int?      @db.SmallInt
  aginfo     String?   @db.Char(30)
  agclearing Decimal?  @db.Decimal(5, 0)
  agaccount  String?   @db.Char(20)
  agyear     Int?      @db.TinyInt
  reqpermit  Int       @default(0, map: "DF__kragk__reqpermit__417EBB9A") @db.TinyInt
  permitdate DateTime? @db.DateTime
  reqstop    Int       @default(0, map: "DF__kragk__reqstop__4272DFD3") @db.TinyInt
  frstdate   DateTime? @db.DateTime
  stopdate   DateTime? @db.DateTime
  lastdate   DateTime? @db.DateTime
  agdayfixed Int?      @db.TinyInt
  agdayno    Int?      @db.TinyInt
  agdaypass  Int?      @db.TinyInt
  aguniqueid String?   @db.Char(16)
  agcheck    Int       @default(0, map: "DF__kragk__agcheck__4367040C") @db.TinyInt
  timestamp  String    @db.Char(10)
  cmdbg      cmdbg?    @relation(fields: [keycmdbg], references: [keycmdbg], onUpdate: NoAction, map: "fkkragkkeycmdbg ")
  hyobj      hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkkragkkeyhyobj")
  krknr      krknr     @relation(fields: [keykrknr], references: [keykrknr], onDelete: Cascade, onUpdate: NoAction, map: "fkkragkkeykrknr")
  revrt      revrt     @relation(fields: [keyrevrt], references: [keyrevrt], onDelete: Cascade, onUpdate: NoAction, map: "fkkragkkeyrevrt ")

  @@index([keycmdbg], map: "fkkragkcmdbg")
  @@index([keyhyobj], map: "fkkragkhyobj")
  @@index([keykrknr], map: "fkkragkkrknr")
  @@index([keyrevrt], map: "fkkragkrevrt")
}

model kragl {
  keykragl  String   @id(map: "pkkragl") @db.Char(15)
  keysyusr  String   @db.Char(15)
  keycmctc  String?  @db.Char(15)
  keykrfkh  String?  @db.Char(15)
  keykrtrn  String?  @db.Char(15)
  keyhyobj  String?  @db.Char(15)
  logtype   Int      @db.TinyInt
  signature String   @db.VarChar(80)
  logdate   DateTime @db.DateTime
  logtime   DateTime @db.DateTime
  transdate DateTime @db.DateTime
  caption   String   @db.VarChar(120)
  mandateid String?  @db.VarChar(20)
  info      String?  @db.VarChar(Max)
  timestamp String   @db.Char(10)
  cmctc     cmctc?   @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkkraglkeycmctc")
  hyobj     hyobj?   @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkkraglkeyhyobj")
  krfkh     krfkh?   @relation(fields: [keykrfkh], references: [keykrfkh], onDelete: Cascade, onUpdate: NoAction, map: "fkkraglkeykrfkh")
  krtrn     krtrn?   @relation(fields: [keykrtrn], references: [keykrtrn], onDelete: Cascade, onUpdate: NoAction, map: "fkkraglkeykrtrn")

  @@index([keycmctc], map: "fkkraglcmctc")
  @@index([keyhyobj], map: "fkkraglhyobj")
  @@index([keykrfkh], map: "fkkraglkrfkh")
  @@index([keykrtrn], map: "fkkraglkrtrn")
  @@index([keysyusr], map: "fkkraglsyusr")
}

model kramo {
  keykramo  String @id(map: "pkkramo") @db.Char(15)
  keykramp  String @db.Char(15)
  period    Int    @db.TinyInt
  amount    Float  @db.Money
  timestamp String @db.Char(10)
  kramp     kramp  @relation(fields: [keykramp], references: [keykramp], onDelete: Cascade, onUpdate: NoAction, map: "fkkramokeykramp")

  @@index([keykramp], map: "fkkramokramp")
}

model kramp {
  keykramp                     String   @id(map: "pkkramp") @db.Char(15)
  keycmcmp                     String   @db.Char(15)
  keycmctc                     String   @db.Char(15)
  keycmctc2                    String?  @db.Char(15)
  keyrevrt                     String?  @db.Char(15)
  keysyusr                     String   @db.Char(15)
  regdate                      DateTime @db.DateTime
  closed                       Int      @db.TinyInt
  directdeb                    Int      @default(0, map: "DF__kramp__directdeb__09F769FE") @db.TinyInt
  content                      Int      @default(0, map: "DF__kramp__content__0AEB8E37") @db.TinyInt
  percity                      Int      @default(1, map: "DF__kramp__percity__0BDFB270") @db.TinyInt
  calcmethod                   Int      @db.SmallInt
  invmethod                    Int      @db.SmallInt
  periods                      Int      @db.SmallInt
  peramount                    Float    @db.Money
  totamount                    Float    @db.Money
  fee                          Float    @db.Money
  interest                     Float    @db.Money
  expmonth                     Int
  expdate                      DateTime @db.DateTime
  timestamp                    String   @db.Char(10)
  kramo                        kramo[]
  cmcmp                        cmcmp    @relation(fields: [keycmcmp], references: [keycmcmp], onDelete: Cascade, onUpdate: NoAction, map: "fkkrampkeycmcmp")
  cmctc_kramp_keycmctcTocmctc  cmctc    @relation("kramp_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkkrampkeycmctc")
  cmctc_kramp_keycmctc2Tocmctc cmctc?   @relation("kramp_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkkrampkeycmctc2")
  revrt                        revrt?   @relation(fields: [keyrevrt], references: [keyrevrt], onUpdate: NoAction, map: "fkkrampkeyrevrt")

  @@index([keycmcmp], map: "fkkrampcmcmp")
  @@index([keycmctc], map: "fkkrampcmctc")
  @@index([keycmctc2], map: "fkkrampcmctc2")
  @@index([keyrevrt], map: "fkkramprevrt")
  @@index([keysyusr], map: "fkkrampsyusr")
}

model kramx {
  keykramx  String @id(map: "PK__kramx__7D5974AD") @db.Char(15)
  caption   String @db.Char(30)
  type      Int    @db.TinyInt
  text      String @db.Text
  timestamp String @db.Char(10)
}

model krbfc {
  keykrbfc  String @id(map: "PK__krbfc__747A15E9") @db.Char(15)
  keykrbfl  String @db.Char(15)
  keycmctc  String @db.Char(15)
  bfcorder  Int    @default(0, map: "DF__krbfc__bfcorder__756E3A22") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keycmctc], map: "fkkrbfccmctc")
  @@index([keykrbfl], map: "fkkrbfckrbfl")
}

model krbfl {
  keykrbfl   String    @id(map: "pkkrbfl") @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keysyusr   String    @db.Char(15)
  appldate   DateTime  @db.DateTime
  status     Int       @db.TinyInt
  amount     Float     @db.Money
  interest   Float     @db.Money
  intalt     Int       @db.TinyInt
  intprcnt   Float?    @db.Money
  intfrom    DateTime? @db.DateTime
  intwhy     String    @db.VarChar(80)
  intwhytype Int       @db.TinyInt
  intagree   Int       @db.TinyInt
  applfee    Float     @db.Money
  ownfee     Float     @db.Money
  regfee     Float     @db.Money
  pamin1fee  Float     @db.Money
  pamin2fee  Float     @db.Money
  amortfee   Float     @db.Money
  execution  Int       @db.TinyInt
  exectext   String?   @db.VarChar(80)
  councode   String?   @db.VarChar(15)
  counbronn  String?   @db.VarChar(80)
  counourref String?   @db.VarChar(80)
  enfcontact String?   @db.VarChar(15)
  execbdate  DateTime? @db.DateTime
  execcdate  DateTime? @db.DateTime
  execndate  DateTime? @db.DateTime
  execrdate  DateTime? @db.DateTime
  totalonpet Int       @db.TinyInt
  household  String?   @db.VarChar(500)
  timestamp  String    @db.Char(10)
  cmcmp      cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkkrbflkeycmcmp")
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkkrbflkeycmctc")

  @@index([keycmcmp], map: "fkkrbflcmcmp")
  @@index([keycmctc], map: "fkkrbflcmctc")
  @@index([keysyusr], map: "fkkrbflsyusr")
}

model krbrg {
  keykrbrg   String  @id(map: "PK__krbrg__5EDFDA85") @db.Char(15)
  keykrfkh   String  @db.Char(15)
  keycmctc   String  @db.Char(15)
  keyhysec   String? @db.Char(15)
  type       Int
  ownerorder Int?    @db.TinyInt
  timestamp  String  @db.Char(10)

  @@index([keycmctc], map: "fkkrbrgcmctc")
  @@index([keyhysec], map: "fkkrbrghysec")
  @@index([keykrfkh], map: "fkkrbrgkrfkh")
  @@index([type, keykrfkh, keykrbrg, keycmctc], map: "inkrbrg_1SS0K8DWA")
}

model krbss {
  keykrbss  String @id(map: "pkkrbss") @db.Char(15)
  keycmctc  String @unique(map: "akkrbss") @db.Char(15)
  invamount Float  @default(0, map: "DF__krbss__invamount__22685078") @db.Money
  rangorder Int    @default(0, map: "DF__krbss__rangorder__235C74B1")
  collfirm  Int    @default(0, map: "DF__krbss__collfirm__245098EA") @db.TinyInt
  reminders Int    @default(0, map: "DF__krbss__reminders__2544BD23") @db.TinyInt
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkkrbsskeycmctc")
}

model krdbt {
  keykrdbt  String @id(map: "pkkrdbt") @db.Char(15)
  keyfadbt  String @db.Char(15)
  keykrfkh  String @db.Char(15)
  timestamp String @db.Char(10)
  fadbt     fadbt  @relation(fields: [keyfadbt], references: [keyfadbt], onUpdate: NoAction, map: "fkkrdbtkeyfadbt ")
  krfkh     krfkh  @relation(fields: [keykrfkh], references: [keykrfkh], onDelete: Cascade, onUpdate: NoAction, map: "fkkrdbtkeykrfkh")

  @@index([keyfadbt], map: "fkkrdbtfadbt")
  @@index([keykrfkh], map: "fkkrdbtkrfkh")
}

model krdcc {
  keykrdcc   String    @id(map: "pkkrdcc") @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  code       String    @db.VarChar(20)
  agency     Int       @default(0, map: "DF__krdcc__agency__3DDC09CE") @db.TinyInt
  agencycode String?   @db.VarChar(20)
  status     Int       @default(0, map: "DF__krdcc__status__3ED02E07") @db.TinyInt
  agencystat Int       @default(0, map: "DF__krdcc__agencysta__3FC45240") @db.TinyInt
  sentamount Float?    @db.Money
  note       String?   @db.VarChar(100)
  casetype   String?   @db.VarChar(20)
  regdate    DateTime  @db.DateTime
  sentdate   DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  cmcmp      cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkkrdcckeycmcmp")
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkkrdcckeycmctc")
  hyobj      hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: NoAction, onUpdate: NoAction, map: "fkkrdcckeyhyobj")
  krdcu      krdcu[]

  @@index([keycmcmp], map: "fkkrdcccmcmp")
  @@index([keycmctc], map: "fkkrdcccmctc")
  @@index([keyhyobj], map: "fkkrdcchyobj")
}

model krdcp {
  keykrdcp   String    @id(map: "pkkrdcp") @db.Char(15)
  keykrdcu   String    @db.Char(15)
  keykrfkh   String    @db.Char(15)
  agencydate DateTime? @db.DateTime
  amount     Float     @db.Money
  timestamp  String    @db.Char(10)
  krdcu      krdcu     @relation(fields: [keykrdcu], references: [keykrdcu], onDelete: Cascade, onUpdate: NoAction, map: "fkkrdcpkeykrdcu ")
  krfkh      krfkh     @relation(fields: [keykrfkh], references: [keykrfkh], onUpdate: NoAction, map: "fkkrdcpkeykrfkh ")

  @@index([keykrdcu], map: "fkkrdcpkrdcu")
  @@index([keykrfkh], map: "fkkrdcpkrfkh")
}

model krdcu {
  keykrdcu  String   @id(map: "pkkrdcu") @db.Char(15)
  keykrdcc  String   @db.Char(15)
  regdate   DateTime @db.DateTime
  status    Int      @default(0, map: "DF__krdcu__status__40755694") @db.TinyInt
  timestamp String   @db.Char(10)
  krdcp     krdcp[]
  krdcc     krdcc    @relation(fields: [keykrdcc], references: [keykrdcc], onDelete: Cascade, onUpdate: NoAction, map: "fkkrdcukeykrdcc")

  @@index([keykrdcc], map: "fkkrdcukrdcc")
}

model krein {
  keykrein  String    @id(map: "PK__krein__19817D66") @db.Char(15)
  keyhyobj  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmctc2 String?   @db.Char(15)
  keycmcmp  String    @db.Char(15)
  invdate   DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keycmcmp], map: "fkkreincmcmp")
  @@index([keycmctc], map: "fkkreincmctc")
  @@index([keycmctc2], map: "fkkreincmctc2")
  @@index([keyhyobj], map: "fkkreinhyobj")
}

model krerr {
  keykrerr  String  @id(map: "pkkrerr") @db.Char(15)
  keykrtrn  String  @default("0", map: "DF__krerr__keykrtrn__71AC8EE9") @db.Char(15)
  type      Int     @db.SmallInt
  errstring String? @db.Char(40)
  giro      String? @db.Char(20)
  status    Int     @default(0, map: "DF__krerr__status__72A0B322") @db.TinyInt
  amount    Float   @default(0, map: "DF__krerr__amount__7394D75B") @db.Money
  timestamp String  @db.Char(10)

  @@index([keykrtrn], map: "fkkrerrkrtrn")
}

model krfkh {
  keykrfkh                     String    @id(map: "pkkrfkh") @db.Char(15)
  keycmcmp                     String    @db.Char(15)
  keyrevrt                     String    @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmctc3                    String?   @db.Char(15)
  keycmctc4                    String?   @db.Char(15)
  keycmctc5                    String?   @db.Char(15)
  keycmeid                     String?   @db.Char(15)
  keyatway                     String?   @db.Char(15)
  keysyusr                     String    @db.Char(15)
  keycmdbm                     String?   @db.Char(15)
  debitid                      String?   @db.VarChar(10)
  invoice                      String?   @db.VarChar(25)
  type                         Int       @db.TinyInt
  debstatus                    Int       @db.TinyInt
  prnstatus                    Int       @db.TinyInt
  paystatus                    Int       @db.TinyInt
  resstatus                    Int       @db.TinyInt
  logstatus                    Int       @db.TinyInt
  losstatus                    Int       @default(0, map: "DF__krfkh__losstatus__13389BC9") @db.TinyInt
  errstatus                    Int       @db.TinyInt
  bundle                       Int       @db.TinyInt
  reference                    String?   @db.VarChar(30)
  yreference                   String?   @db.VarChar(30)
  ocr                          String?   @db.VarChar(25)
  ocrqty                       Int       @db.TinyInt
  amount                       Float     @db.Money
  fee                          Float     @db.Money
  reduction                    Float     @db.Money
  addamount                    Float     @default(0, map: "DF__krfkh__addamount__142CC002") @db.Money
  claim                        Float     @db.Money
  rest                         Float     @default(0, map: "DF__krfkh__rest__1520E43B") @db.Money
  houseallow                   Float     @default(0, map: "DF__krfkh__houseallo__16150874") @db.Money
  deposit                      Float     @default(0, map: "DF__krfkh__deposit__17092CAD") @db.Money
  vat                          Float     @db.Money
  interest                     Float     @db.Money
  roundoff                     Float     @db.Money
  famount                      Float     @default(0, map: "DF__krfkh__famount__17FD50E6") @db.Money
  fvat                         Float     @default(0, map: "DF__krfkh__fvat__18F1751F") @db.Money
  period                       Int?
  fromdate                     DateTime? @db.DateTime
  todate                       DateTime? @db.DateTime
  invdate                      DateTime? @db.DateTime
  expdate                      DateTime? @db.DateTime
  resdate                      DateTime? @db.DateTime
  acrintdate                   DateTime? @db.DateTime
  keysyusr2                    String?   @db.Char(15)
  blocked                      Int       @db.TinyInt
  blockpaym                    Int       @default(0, map: "DF__krfkh__blockpaym__19E59958") @db.TinyInt
  demandstop                   Int       @default(0, map: "DF__krfkh__demandsto__1AD9BD91") @db.TinyInt
  notintinv                    Int       @default(0, map: "DF__krfkh__notintinv__1BCDE1CA") @db.TinyInt
  revvatduty                   Int       @default(0, map: "DF__krfkh__revvatdut__1CC20603") @db.TinyInt
  amort                        Int       @default(0, map: "DF__krfkh__amort__1DB62A3C") @db.SmallInt
  ef                           Int       @default(0, map: "DF__krfkh__ef__1EAA4E75") @db.TinyInt
  ag                           Int       @default(0, map: "DF__krfkh__ag__1F9E72AE") @db.TinyInt
  agstatus                     Int       @default(0, map: "DF__krfkh__agstatus__209296E7") @db.TinyInt
  paydepo                      Int       @default(0, map: "DF__krfkh__paydepo__2186BB20") @db.TinyInt
  recalledcf                   Int       @default(0, map: "DF__krfkh__recalledc__227ADF59") @db.TinyInt
  deductdate                   DateTime? @db.DateTime
  sorkod                       String?   @db.VarChar(10)
  printsort                    String?   @db.VarChar(50)
  invformula                   String?   @db.VarChar(40)
  timestamp                    String    @db.Char(10)
  hffnd                        hffnd[]
  kragl                        kragl[]
  krdbt                        krdbt[]
  krdcp                        krdcp[]
  atway                        atway?    @relation(fields: [keyatway], references: [keyatway], onUpdate: NoAction, map: "fkkrfkhkeyatway ")
  cmcmp                        cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkkrfkhkeycmcmp ")
  cmctc_krfkh_keycmctc2Tocmctc cmctc?    @relation("krfkh_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkkrfkhkeycmctc2")
  cmctc_krfkh_keycmctc3Tocmctc cmctc?    @relation("krfkh_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkkrfkhkeycmctc3")
  cmctc_krfkh_keycmctc4Tocmctc cmctc?    @relation("krfkh_keycmctc4Tocmctc", fields: [keycmctc4], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkkrfkhkeycmctc4")
  cmctc_krfkh_keycmctc5Tocmctc cmctc?    @relation("krfkh_keycmctc5Tocmctc", fields: [keycmctc5], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkkrfkhkeycmctc5")
  cmdbm                        cmdbm?    @relation(fields: [keycmdbm], references: [keycmdbm], onDelete: NoAction, onUpdate: NoAction, map: "fkkrfkhkeycmdbm ")
  cmeid                        cmeid?    @relation(fields: [keycmeid], references: [keycmeid], onUpdate: NoAction, map: "fkkrfkhkeycmeid ")
  revrt                        revrt     @relation(fields: [keyrevrt], references: [keyrevrt], onUpdate: NoAction, map: "fkkrfkhkeyrevrt ")
  lnept                        lnept[]
  lnprf                        lnprf[]
  mminh                        mminh[]

  @@index([keycmcmp], map: "fkkrfkhcmcmp")
  @@index([keycmctc], map: "fkkrfkhcmctc")
  @@index([keycmctc2], map: "fkkrfkhcmctc2")
  @@index([keycmctc3], map: "fkkrfkhcmctc3")
  @@index([keycmctc4], map: "fkkrfkhcmctc4")
  @@index([keycmctc5], map: "fkkrfkhcmctc5")
  @@index([keycmeid], map: "fkkrfkhcmeid")
  @@index([keyrevrt], map: "fkkrfkhrevrt")
  @@index([keysyusr], map: "fkkrfkhsyusr")
  @@index([keysyusr2], map: "fkkrfkhsyusr2")
  @@index([invoice, ocr, debstatus, logstatus, type, blocked, paystatus, keykrfkh, keycmctc, keyrevrt], map: "inkrfkh_2LU0NSK7Y")
  @@index([agstatus, debstatus, blocked, ag], map: "inkrfkh_2LU0NSKCR")
  @@index([keykrfkh, keyrevrt, todate, debstatus, fromdate], map: "inkrfkh_2LU0NSKFZ")
  @@index([debstatus, keycmcmp, keykrfkh, blocked, logstatus, type, keyrevrt], map: "inkrfkh_2LU0NSKJI")
  @@index([reference], map: "inkrfkh_2LU0NSKNI")
  @@index([ocr, invoice], map: "inkrfkh_2LU0NSKUM")
  @@index([fromdate], map: "inkrfkh_2LU0NSKX9")
  @@index([todate], map: "inkrfkh_2LU0NSKZU")
  @@index([debstatus, paystatus, blocked, type], map: "inkrfkh_2LU0NSL33")
  @@index([keycmcmp, blocked, logstatus, type], map: "inkrfkh_3500ZY9AR")
}

model krfkk {
  keykrfkk  String  @id(map: "pkkrfkk") @db.Char(15)
  keykrfkh  String  @db.Char(15)
  keykrfkh2 String  @db.Char(15)
  keykrfkr  String? @db.Char(15)
  keykrfkr2 String? @db.Char(15)
  keycode   String? @db.Char(15)
  keycode2  String? @db.Char(15)
  keykrtrn  String? @db.Char(15)
  type      Int
  timestamp String  @db.Char(10)

  @@index([keycode], map: "fkkrfkkcode")
  @@index([keycode2], map: "fkkrfkkcode2")
  @@index([keykrfkh], map: "fkkrfkkkrfkh")
  @@index([keykrfkh2], map: "fkkrfkkkrfkh2")
  @@index([keykrfkr], map: "fkkrfkkkrfkr")
  @@index([keykrfkr2], map: "fkkrfkkkrfkr2")
  @@index([keykrtrn], map: "fkkrfkkkrtrn")
  @@index([type, keycode, keykrfkk, keykrfkh2, keykrfkh], map: "inkrfkk_1R30R3J03")
}

model krfkr {
  keykrfkr   String    @id(map: "pkkrfkr") @db.Char(15)
  keykrfkh   String    @db.Char(15)
  keycmart   String?   @db.Char(15)
  code       String?   @db.VarChar(20)
  text       String?   @db.Char(70)
  unit       String?   @db.Char(10)
  quantity   Float     @db.Money
  amount     Float     @db.Money
  reduction  Float     @db.Money
  vat        Float     @db.Money
  rowtype    Int       @db.SmallInt
  autoaddrow Int       @db.SmallInt
  fromdate   DateTime? @db.DateTime
  todate     DateTime? @db.DateTime
  printgrpno Int?      @db.SmallInt
  printgroup String?   @db.Char(70)
  printsort  Int?
  timestamp  String    @db.Char(10)

  @@index([keycmart], map: "fkkrfkrcmart")
  @@index([keykrfkh], map: "fkkrfkrkrfkh")
  @@index([code, keykrfkh, keykrfkr], map: "inkrfkr_2GG0PI502")
  @@index([code, keykrfkh, keykrfkr], map: "inkrfkr_3980YKVUW")
}

model krfkx {
  keykrfkx  String  @id(map: "pkkrfkx") @db.Char(15)
  keykrfkh  String  @db.Char(15)
  keykrfkr  String? @db.Char(15)
  extref1   String? @db.VarChar(100)
  extref2   String? @db.VarChar(100)
  text1     String? @db.VarChar(60)
  text2     String? @db.VarChar(60)
  text3     String? @db.VarChar(60)
  text4     String? @db.VarChar(60)
  text5     String? @db.VarChar(60)
  text6     String? @db.VarChar(60)
  text7     String? @db.VarChar(60)
  text8     String? @db.VarChar(60)
  text9     String? @db.VarChar(60)
  text10    String? @db.VarChar(60)
  text11    String? @db.VarChar(45)
  text12    String? @db.VarChar(30)
  text13    String? @db.VarChar(50)
  text14    String? @db.VarChar(50)
  text15    String? @db.VarChar(60)
  text16    String? @db.VarChar(50)
  text17    String? @db.VarChar(60)
  text18    String? @db.VarChar(60)
  text19    String? @db.VarChar(60)
  text20    String? @db.VarChar(200)
  text21    String? @db.VarChar(60)
  text22    String? @db.VarChar(2)
  text23    String? @db.VarChar(5)
  text24    String? @db.VarChar(5)
  text25    String? @db.VarChar(30)
  text26    String? @db.VarChar(250)
  text27    String? @db.VarChar(30)
  text28    String? @db.VarChar(30)
  text29    String? @db.VarChar(30)
  text30    String? @db.VarChar(30)
  text31    String? @db.VarChar(30)
  text32    String? @db.VarChar(30)
  text33    String? @db.VarChar(30)
  text34    String? @db.VarChar(30)
  text35    String? @db.VarChar(60)
  text36    String? @db.VarChar(60)
  text37    String? @db.VarChar(60)
  text38    String? @db.VarChar(60)
  text39    String? @db.VarChar(60)
  text40    String? @db.VarChar(60)
  timestamp String  @db.Char(10)

  @@index([keykrfkh], map: "fkkrfkxkrfkh")
  @@index([keykrfkr], map: "fkkrfkxkrfkr")
}

model krfsl {
  keykrfsl  String  @id(map: "pkkrfsl") @db.Char(15)
  keyrevrt  String  @db.Char(15)
  keykrfkh  String? @db.Char(15)
  keykrfkr  String? @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keydbtbl2 String  @db.Char(15)
  keycode2  String  @db.Char(15)
  keydbtbl3 String? @db.Char(15)
  keycode3  String? @db.Char(15)
  status    Int     @db.TinyInt
  status2   Int     @default(0, map: "DF__krfsl__status2__5762AD01") @db.TinyInt
  type      Int     @default(0, map: "DF__krfsl__type__5856D13A") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycode], map: "fkkrfslcode")
  @@index([keycode2], map: "fkkrfslcode2")
  @@index([keycode3], map: "fkkrfslcode3")
  @@index([keydbtbl], map: "fkkrfsldbtbl")
  @@index([keydbtbl2], map: "fkkrfsldbtbl2")
  @@index([keydbtbl3], map: "fkkrfsldbtbl3")
  @@index([keykrfkh], map: "fkkrfslkrfkh")
  @@index([keykrfkr], map: "fkkrfslkrfkr")
  @@index([keyrevrt], map: "fkkrfslrevrt")
  @@index([keycode2, keykrfsl, status], map: "inkrfsl_2C00MJ60F")
  @@index([keycode2, keykrfsl, status], map: "inkrfsl_3500QEG55")
  @@index([type, keyrevrt, keydbtbl2, keykrfkh, keycode, keykrfsl, keycode2], map: "inkrfsl_3500QEG8Z")
}

model krknr {
  keykrknr   String    @id(map: "pkkrknr") @db.Char(15)
  keycmctc   String    @unique(map: "akkrknr1") @db.Char(15)
  keysylng   String    @db.Char(15)
  paycond    Int?
  credlimit  Float     @db.Money
  revvatduty Int       @default(0, map: "DF__krknr__revvatdut__2DEC9205") @db.TinyInt
  ctax       Int       @db.TinyInt
  blocked    Int       @default(0, map: "DF__krknr__blocked__2EE0B63E") @db.TinyInt
  notintinv  Int       @db.TinyInt
  demandstop Int       @db.TinyInt
  resdays    Int       @default(0, map: "DF__krknr__resdays__2FD4DA77") @db.TinyInt
  svefakt    Int       @default(0, map: "DF__krknr__svefakt__30C8FEB0") @db.TinyInt
  b2cinvoice Int       @default(0, map: "DF__krknr__b2cinvoic__31BD22E9") @db.TinyInt
  smsinv     Int       @default(0, map: "DF__krknr__smsinv__32B14722") @db.TinyInt
  emailinv   Int       @default(0, map: "DF__krknr__emailinv__33A56B5B") @db.TinyInt
  jointlyinv Int       @default(1, map: "DF__krknr__jointlyin__34998F94") @db.TinyInt
  efaddress  String?   @db.Char(20)
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(34)
  autogiro   Int       @db.TinyInt
  agtype     Int       @default(0, map: "DF__krknr__agtype__358DB3CD") @db.TinyInt
  agnumber   String?   @db.VarChar(16)
  aglength   Int?      @db.SmallInt
  aginfo     String?   @db.Char(30)
  agclearing Decimal?  @db.Decimal(8, 0)
  agaccount  String?   @db.Char(20)
  agacctype  Int       @db.TinyInt
  agyear     Int?      @db.SmallInt
  reqpermit  Int       @db.TinyInt
  permitdate DateTime? @db.DateTime
  reqstop    Int       @db.TinyInt
  frstdate   DateTime? @db.DateTime
  stopdate   DateTime? @db.DateTime
  aglastdate DateTime? @db.DateTime
  agdayfixed Int?      @db.SmallInt
  agdayno    Int?      @db.SmallInt
  agdaypass  Int?      @db.SmallInt
  aguniqueid String?   @db.Char(16)
  agcheck    Int       @default(0, map: "DF__krknr__agcheck__3681D806") @db.TinyInt
  vatdeclare Int       @default(1, map: "DF__krknr__vatdeclar__3775FC3F") @db.TinyInt
  subjetovat Int       @default(0, map: "DF__krknr__subjetova__386A2078") @db.TinyInt
  avsldate   DateTime? @db.DateTime
  begdate    DateTime? @db.DateTime
  forldate   DateTime? @db.DateTime
  husdate    DateTime? @db.DateTime
  mnamnsdate DateTime? @db.DateTime
  mforldate  DateTime? @db.DateTime
  mhusdate   DateTime? @db.DateTime
  ikkmdate   DateTime? @db.DateTime
  avhdate    DateTime? @db.DateTime
  utldate    DateTime? @db.DateTime
  intudate   DateTime? @db.DateTime
  lonndate   DateTime? @db.DateTime
  pantdate   DateTime? @db.DateTime
  domdate    DateTime? @db.DateTime
  gjelddate  DateTime? @db.DateTime
  betpdate   DateTime? @db.DateTime
  gjeldbdate DateTime? @db.DateTime
  nopayment  Int       @default(0, map: "DF__krknr__nopayment__395E44B1") @db.TinyInt
  timestamp  String    @db.Char(10)
  kragk      kragk[]
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, map: "fkkrknrkeycmctc")

  @@index([keysylng], map: "fkkrknrsylng")
  @@index([notintinv, keycmctc, keykrknr], map: "inkrknr_2LU0JR8PT")
  @@index([keycmctc, keykrknr, agaccount], map: "inkrknr_2LU0JR8SQ")
}

model krkrv {
  keykrkrv   String  @id(map: "pkkrkrv") @db.Char(15)
  keykrsce   String  @db.Char(15)
  keyrevrt   String? @db.Char(15)
  keyfadbt   String? @db.Char(15)
  num        Int     @db.SmallInt
  type       Int     @db.SmallInt
  name       String? @db.VarChar(30)
  text       String? @db.VarChar(30)
  collfirm   Int     @db.TinyInt
  feenotice  Int     @db.TinyInt
  fee        Float   @db.Money
  days       Int     @default(0, map: "DF__krkrv__days__671E1683")
  resdays    Int     @default(0, map: "DF__krkrv__resdays__68123ABC") @db.TinyInt
  minamount  Float   @db.Money
  minrentpct Float   @default(0, map: "DF__krkrv__minrentpc__69065EF5") @db.Money
  maxamount  Float?  @db.Money
  bundle     Int     @db.TinyInt
  bundlecont Int     @default(0, map: "DF__krkrv__bundlecon__69FA832E") @db.TinyInt
  pledgelet  Int     @default(0, map: "DF__krkrv__pledgelet__6AEEA767") @db.TinyInt
  guaranlet  Int     @default(0, map: "DF__krkrv__guaranlet__6BE2CBA0") @db.TinyInt
  allconlet  Int     @default(0, map: "DF__krkrv__allconlet__6CD6EFD9") @db.TinyInt
  smsinv     Int     @default(0, map: "DF__krkrv__smsinv__6DCB1412") @db.TinyInt
  emailinv   Int     @default(0, map: "DF__krkrv__emailinv__6EBF384B") @db.TinyInt
  krvused    Int     @db.TinyInt
  timestamp  String  @db.Char(10)
  faprn      faprn[]

  @@index([keyfadbt], map: "fkkrkrvfadbt")
  @@index([keykrsce], map: "fkkrkrvkrsce")
  @@index([keyrevrt], map: "fkkrkrvrevrt")
}

model krlog {
  keykrlog  String   @id(map: "PK__krlog__63A3C44B") @db.Char(15)
  logdate   DateTime @db.DateTime
  amount    Float    @db.Money
  timestamp String   @db.Char(10)
}

model krpih {
  keykrpih   String   @id(map: "pkkrpih") @db.Char(15)
  filehash   String   @db.VarChar(1000)
  importtime DateTime @db.DateTime
  fileformat Int      @default(0, map: "DF__krpih__fileforma__33B38116")
  timestamp  String   @db.Char(10)
  krpir      krpir[]
}

model krpir {
  keykrpir   String   @id(map: "pkkrpir") @db.Char(15)
  keykrpih   String   @db.Char(15)
  keyrevrt   String   @db.Char(15)
  keyrekpy   String   @db.Char(15)
  impstate   Int      @default(0, map: "DF__krpir__impstate__47BA79C3") @db.TinyInt
  paydate    DateTime @db.Date
  transdate  DateTime @db.Date
  amount     Float    @db.Money
  ocr        String?  @db.VarChar(25)
  reference  String?  @db.VarChar(200)
  payername  String?  @db.VarChar(60)
  payeraddr1 String?  @db.VarChar(60)
  payeraddr2 String?  @db.VarChar(60)
  payeraddr3 String?  @db.VarChar(60)
  payeraddr4 String?  @db.VarChar(60)
  payeraddr5 String?  @db.VarChar(60)
  payeracnt  String?  @db.VarChar(30)
  payeracntt Int?     @db.TinyInt
  bpayerid   String?  @db.VarChar(30)
  bpayeridt  Int?     @db.TinyInt
  collfirm   Int      @default(0, map: "DF__krpir__collfirm__48AE9DFC") @db.TinyInt
  recacnt    String?  @db.VarChar(30)
  recacntt   Int?     @db.TinyInt
  timestamp  String   @db.Char(10)
  krpih      krpih    @relation(fields: [keykrpih], references: [keykrpih], onUpdate: NoAction, map: "fkkrpirkeykrpih")
  rekpy      rekpy    @relation(fields: [keyrekpy], references: [keyrekpy], onUpdate: NoAction, map: "fkkrpirkeyrekpy")
  revrt      revrt    @relation(fields: [keyrevrt], references: [keyrevrt], onUpdate: NoAction, map: "fkkrpirkeyrevrt")

  @@index([keykrpih], map: "fkkrpirkrpih")
  @@index([keyrekpy], map: "fkkrpirrekpy")
  @@index([keyrevrt], map: "fkkrpirrevrt")
}

model krrpk {
  keykrrpk  String @id(map: "PK__krrpk__6497E884") @db.Char(15)
  keyrevrt  String @db.Char(15)
  keykrrpr  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keykrrpr], map: "fkkrrpkkrrpr")
  @@index([keyrevrt], map: "fkkrrpkrevrt")
}

model krrpr {
  keykrrpr  String  @id(map: "PK__krrpr__6C39D5A3") @db.Char(15)
  keycmrnh  String? @db.Char(15)
  code      String  @db.Char(6)
  caption   String  @db.Char(40)
  respite   Int?
  saveint   Int     @db.TinyInt
  savedays  Int?
  minint    Int?
  minamount Int?
  complinv  Int     @db.TinyInt
  intfee    Int?
  diskonto  Int     @db.TinyInt
  calcint   Int     @db.SmallInt
  timestamp String  @db.Char(10)

  @@index([keycmrnh], map: "fkkrrprcmrnh")
}

model krscc {
  keykrscc  String @id(map: "PK__krscc__54F67D98") @db.Char(15)
  keykrsce  String @db.Char(15)
  keycmcmp  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmcmp], map: "fkkrscccmcmp")
  @@index([keykrsce], map: "fkkrscckrsce")
}

model krsce {
  keykrsce  String @id(map: "pkkrsce") @db.Char(15)
  caption   String @db.VarChar(30)
  sceused   Int    @db.TinyInt
  lvlproc   Int    @default(1, map: "DF__krsce__lvlproc__1DCB38D5") @db.TinyInt
  timestamp String @db.Char(10)
}

model krsct {
  keykrsct  String @id(map: "PK__krsct__58C70E7C") @db.Char(15)
  keykrsce  String @db.Char(15)
  keyrevrt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keykrsce], map: "fkkrsctkrsce")
  @@index([keyrevrt], map: "fkkrsctrevrt")
}

model krtrn {
  keykrtrn   String    @id(map: "pkkrtrn") @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keycmdbm   String?   @db.Char(15)
  keyrevrt   String    @db.Char(15)
  keyrevrt2  String?   @db.Char(15)
  keyrekpy   String?   @db.Char(15)
  keykrfkr   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keykrfkh   String    @db.Char(15)
  keykrtrn2  String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  transdate  DateTime? @db.DateTime
  regdate    DateTime? @db.DateTime
  exportdate DateTime? @db.DateTime
  type       Int       @default(0, map: "DF__krtrn__type__7BD93C47") @db.TinyInt
  status     Int
  amount     Float?    @db.Money
  orgamount  Float     @default(0, map: "DF__krtrn__orgamount__7CCD6080") @db.Money
  reference  String?   @db.Char(30)
  tranid     String?   @db.VarChar(500)
  tranidlock Int       @default(0, map: "DF__krtrn__tranidloc__7DC184B9") @db.TinyInt
  timestamp  String    @db.Char(10)
  kragl      kragl[]

  @@index([keycmcmp], map: "fkkrtrncmcmp")
  @@index([keycmctc], map: "fkkrtrncmctc")
  @@index([keycmdbm], map: "fkkrtrncmdbm")
  @@index([keykrfkh], map: "fkkrtrnkrfkh")
  @@index([keykrfkr], map: "fkkrtrnkrfkr")
  @@index([keykrtrn2], map: "fkkrtrnkrtrn2")
  @@index([keyrekpy], map: "fkkrtrnrekpy")
  @@index([keyrevrt], map: "fkkrtrnrevrt")
  @@index([keyrevrt2], map: "fkkrtrnrevrt2")
  @@index([keysyusr], map: "fkkrtrnsyusr")
  @@index([transdate], map: "inkrtrn_2HU0W1VQG")
  @@index([keyrevrt, keycmctc, keycmcmp, keykrtrn], map: "inkrtrn_2HU0W1VSM")
}

model lbanm {
  keylbanm  String    @id(map: "pklbanm") @db.Char(15)
  keylbbes  String    @db.Char(15)
  keylbrsd  String    @db.Char(15)
  keyaopla  String    @db.Char(15)
  keyaobdl  String    @db.Char(15)
  keyaodet  String?   @db.Char(15)
  keycmart  String?   @db.Char(15)
  keylbplr  String?   @db.Char(15)
  notering  String?   @db.VarChar(250)
  status    Int       @default(0, map: "DF__lbanm__status__3566BF5E") @db.TinyInt
  aocreated Int       @default(0, map: "DF__lbanm__aocreated__365AE397") @db.TinyInt
  missing   Int       @default(0, map: "DF__lbanm__missing__374F07D0") @db.TinyInt
  atgdatum  DateTime? @db.DateTime
  quantity  Float     @default(0, map: "DF__lbanm__quantity__38432C09") @db.Money
  kostnad   Float     @default(0, map: "DF__lbanm__kostnad__39375042") @db.Money
  increc    Int       @default(0, map: "DF__lbanm__increc__3A2B747B") @db.TinyInt
  timestamp String    @db.Char(10)
  aobdl     aobdl     @relation(fields: [keyaobdl], references: [keyaobdl], onUpdate: NoAction, map: "fklbanmkeyaobdl")
  aodet     aodet?    @relation(fields: [keyaodet], references: [keyaodet], onDelete: NoAction, onUpdate: NoAction, map: "fklbanmkeyaodet")
  aopla     aopla     @relation(fields: [keyaopla], references: [keyaopla], onUpdate: NoAction, map: "fklbanmkeyaopla")
  cmart     cmart?    @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fklbanmkeycmart")
  lbbes     lbbes     @relation(fields: [keylbbes], references: [keylbbes], onUpdate: NoAction, map: "fklbanmkeylbbes")
  lbplr     lbplr?    @relation(fields: [keylbplr], references: [keylbplr], onUpdate: NoAction, map: "fklbanmkeylbplr")
  lbrsd     lbrsd     @relation(fields: [keylbrsd], references: [keylbrsd], onUpdate: NoAction, map: "fklbanmkeylbrsd")

  @@index([keyaobdl], map: "fklbanmaobdl")
  @@index([keyaodet], map: "fklbanmaodet")
  @@index([keyaopla], map: "fklbanmaopla")
  @@index([keycmart], map: "fklbanmcmart")
  @@index([keylbbes], map: "fklbanmlbbes")
  @@index([keylbplr], map: "fklbanmlbplr")
  @@index([keylbrsd], map: "fklbanmlbrsd")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model lbanm_MH {
  keylbanm  String    @db.Char(15)
  keylbbes  String    @db.Char(15)
  keylbrsd  String    @db.Char(15)
  keyaopla  String    @db.Char(15)
  keyaobdl  String    @db.Char(15)
  keyaodet  String?   @db.Char(15)
  keycmart  String?   @db.Char(15)
  notering  String?   @db.VarChar(120)
  status    Int       @db.TinyInt
  aocreated Int       @db.TinyInt
  missing   Int       @db.TinyInt
  atgdatum  DateTime? @db.DateTime
  kostnad   Float     @db.Money
  timestamp String    @db.Char(10)

  @@ignore
}

model lbant {
  keylbant  String  @id(map: "pklbant") @db.Char(15)
  caption   String  @unique(map: "aklbant1") @db.VarChar(120)
  timestamp String  @db.Char(10)
  aobdt     aobdt[]
}

model lbbdl {
  keylbbdl  String @id(map: "pklbbdl") @db.Char(15)
  keylbpla  String @db.Char(15)
  keyaobdl  String @db.Char(15)
  code      String @db.Char(10)
  sortorder Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@unique([keylbpla, sortorder], map: "aklbbdl1")
  @@unique([keylbpla, keyaobdl], map: "aklbbdl2")
  @@unique([keylbpla, code], map: "aklbbdl3")
  @@index([keyaobdl], map: "fklbbdlaobdl")
  @@index([keylbpla], map: "fklbbdllbpla")
}

model lbbes {
  keylbbes   String    @id(map: "pklbbes") @db.Char(15)
  keylbbka   String    @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmrgr   String?   @db.Char(15)
  keycmpbt   String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyaotlt   String?   @db.Char(15)
  keybazav   String?   @db.Char(15)
  keyprprj   String?   @db.Char(15)
  caption    String    @db.VarChar(30)
  bokning    Int       @default(0, map: "DF__lbbes__bokning__7486A9E1") @db.TinyInt
  status     Int       @default(0, map: "DF__lbbes__status__757ACE1A") @db.TinyInt
  anmexists  Int       @default(0, map: "DF__lbbes__anmexists__766EF253") @db.TinyInt
  besdat     DateTime? @db.DateTime
  bestime    DateTime? @db.DateTime
  endtime    DateTime? @db.DateTime
  text       String?   @db.VarChar(100)
  moblerad   Int       @default(0, map: "DF__lbbes__moblerad__7763168C") @db.TinyInt
  hgnarvpl   Int       @default(0, map: "DF__lbbes__hgnarvpl__78573AC5") @db.TinyInt
  nyhgnarvpl Int       @default(0, map: "DF__lbbes__nyhgnarvp__794B5EFE") @db.TinyInt
  hgnarvar   Int       @default(0, map: "DF__lbbes__hgnarvar__7A3F8337") @db.TinyInt
  nyhgnarvar Int       @default(0, map: "DF__lbbes__nyhgnarva__7B33A770") @db.TinyInt
  exportxls  Int       @default(0, map: "DF__lbbes__exportxls__7C27CBA9") @db.TinyInt
  hggodk     Int       @default(0, map: "DF__lbbes__hggodk__7D1BEFE2") @db.TinyInt
  nyhggodk   Int       @default(0, map: "DF__lbbes__nyhggodk__7E10141B") @db.TinyInt
  editerbar  Int       @default(1, map: "DF__lbbes__editerbar__7F043854") @db.TinyInt
  amount     Float?    @db.Money
  rechkdays  Int       @default(0, map: "DF__lbbes__rechkdays__7FF85C8D") @db.TinyInt
  rechkgen   Int       @default(0, map: "DF__lbbes__rechkgen__00EC80C6") @db.TinyInt
  timestamp  String    @db.Char(10)
  lbanm      lbanm[]
  aotlt      aotlt?    @relation(fields: [keyaotlt], references: [keyaotlt], onUpdate: NoAction, map: "fklbbeskeyaotlt ")
  bazav      bazav?    @relation(fields: [keybazav], references: [keybazav], onUpdate: NoAction, map: "fklbbeskeybazav ")
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fklbbeskeycmctc")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fklbbeskeycmobj")
  cmpbt      cmpbt?    @relation(fields: [keycmpbt], references: [keycmpbt], onUpdate: NoAction, map: "fklbbeskeycmpbt ")
  cmrgr      cmrgr?    @relation(fields: [keycmrgr], references: [keycmrgr], onUpdate: NoAction, map: "fklbbeskeycmrgr")
  hyobj      hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fklbbeskeyhyobj")
  lbbka      lbbka     @relation(fields: [keylbbka], references: [keylbbka], onUpdate: NoAction, map: "fklbbeskeylbbka")
  prprj      prprj?    @relation(fields: [keyprprj], references: [keyprprj], onUpdate: NoAction, map: "fklbbeskeyprprj")

  @@index([keyaotlt], map: "fklbbesaotlt")
  @@index([keybazav], map: "fklbbesbazav")
  @@index([keycmctc], map: "fklbbescmctc")
  @@index([keycmobj], map: "fklbbescmobj")
  @@index([keycmpbt], map: "fklbbescmpbt")
  @@index([keycmrgr], map: "fklbbescmrgr")
  @@index([keyhyobj], map: "fklbbeshyobj")
  @@index([keylbbka], map: "fklbbeslbbka")
  @@index([keyprprj], map: "fklbbesprprj")
}

model lbbka {
  keylbbka                     String  @id(map: "pklbbka") @db.Char(15)
  keylbpro                     String? @db.Char(15)
  keylbbka2                    String? @db.Char(15)
  keybaret                     String? @db.Char(15)
  keybsdef                     String? @db.Char(15)
  keybsdef2                    String? @db.Char(15)
  keybsdef3                    String? @db.Char(15)
  code                         String  @unique(map: "aklbbkacode") @db.Char(10)
  caption                      String? @db.VarChar(30)
  bestype                      Int     @default(0, map: "DF__lbbka__bestype__25305795") @db.TinyInt
  sendmail                     Int     @default(0, map: "DF__lbbka__sendmail__26247BCE") @db.TinyInt
  besdur                       Int     @default(0, map: "DF__lbbka__besdur__2718A007") @db.SmallInt
  isent                        Int     @default(0, map: "DF__lbbka__isent__280CC440") @db.TinyInt
  publish                      Int     @default(1, map: "DF__lbbka__publish__2900E879") @db.TinyInt
  mobilesync                   Int     @default(1, map: "DF__lbbka__mobilesyn__29F50CB2") @db.TinyInt
  timestamp                    String  @db.Char(10)
  lbbes                        lbbes[]
  baret                        baret?  @relation(fields: [keybaret], references: [keybaret], onDelete: NoAction, onUpdate: NoAction, map: "fklbbkakeybaret")
  bsdef_lbbka_keybsdefTobsdef  bsdef?  @relation("lbbka_keybsdefTobsdef", fields: [keybsdef], references: [keybsdef], onDelete: NoAction, onUpdate: NoAction, map: "fklbbkakeybsdef")
  bsdef_lbbka_keybsdef2Tobsdef bsdef?  @relation("lbbka_keybsdef2Tobsdef", fields: [keybsdef2], references: [keybsdef], onDelete: NoAction, onUpdate: NoAction, map: "fklbbkakeybsdef2")
  bsdef_lbbka_keybsdef3Tobsdef bsdef?  @relation("lbbka_keybsdef3Tobsdef", fields: [keybsdef3], references: [keybsdef], onDelete: NoAction, onUpdate: NoAction, map: "fklbbkakeybsdef3")
  lbbka                        lbbka?  @relation("lbbkaTolbbka", fields: [keylbbka2], references: [keylbbka], onDelete: NoAction, onUpdate: NoAction, map: "fklbbkakeylbbka2")
  other_lbbka                  lbbka[] @relation("lbbkaTolbbka")
  lbpro                        lbpro?  @relation(fields: [keylbpro], references: [keylbpro], onDelete: NoAction, onUpdate: NoAction, map: "fklbbkakeylbpro")
  prtyb                        prtyb[]

  @@index([keybaret], map: "fklbbkabaret")
  @@index([keybsdef], map: "fklbbkabsdef")
  @@index([keybsdef2], map: "fklbbkabsdef2")
  @@index([keybsdef3], map: "fklbbkabsdef3")
  @@index([keylbbka2], map: "fklbbkalbbka2")
  @@index([keylbpro], map: "fklbbkalbpro")
}

model lbbpl {
  keylbbpl  String @id(map: "pklbbpl") @db.Char(15)
  keylbplr  String @db.Char(15)
  keyaobdl  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keylbplr, keyaobdl], map: "aklbbpl1")
  @@index([keyaobdl], map: "fklbbplaobdl")
  @@index([keylbplr], map: "fklbbpllbplr")
}

model lbpla {
  keylbpla  String @id(map: "pklbpla") @db.Char(15)
  keylbpro  String @db.Char(15)
  keyaopla  String @db.Char(15)
  incalways Int    @default(0, map: "DF__lbpla__incalways__77BD1E3E") @db.TinyInt
  sortorder Int    @default(0, map: "DF__lbpla__sortorder__78B14277") @db.TinyInt
  timestamp String @db.Char(10)
  aopla     aopla  @relation(fields: [keyaopla], references: [keyaopla], onDelete: Cascade, onUpdate: NoAction, map: "fklbplakeyaopla ")
  lbpro     lbpro  @relation(fields: [keylbpro], references: [keylbpro], onDelete: Cascade, onUpdate: NoAction, map: "fklbplakeylbpro ")

  @@unique([keylbpro, keyaopla], map: "aklbpla1")
  @@unique([keylbpro, sortorder], map: "aklbpla2")
  @@index([keyaopla], map: "fklbplaaopla")
  @@index([keylbpro], map: "fklbplalbpro")
}

model lbplh {
  keylbplh  String  @id(map: "pklbplh") @db.Char(15)
  code      String  @unique(map: "aklbplh1") @db.VarChar(15)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  lbplr     lbplr[]
}

model lbplr {
  keylbplr  String  @id(map: "pklbplr") @db.Char(15)
  keylbplh  String  @db.Char(15)
  keycmuni  String? @db.Char(15)
  keycmart  String? @db.Char(15)
  code      String  @db.VarChar(15)
  caption   String? @db.VarChar(70)
  price     Float   @default(0, map: "DF__lbplr__price__00BDECF5") @db.Money
  timestamp String  @db.Char(10)
  lbanm     lbanm[]
  cmart     cmart?  @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fklbplrkeycmart")
  cmuni     cmuni?  @relation(fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fklbplrkeycmuni")
  lbplh     lbplh   @relation(fields: [keylbplh], references: [keylbplh], onUpdate: NoAction, map: "fklbplrkeylbplh")

  @@unique([keylbplh, code], map: "aklbplr1")
  @@index([keycmart], map: "fklbplrcmart")
  @@index([keycmuni], map: "fklbplrcmuni")
  @@index([keylbplh], map: "fklbplrlbplh")
}

model lbpro {
  keylbpro  String  @id(map: "pklbpro") @db.Char(15)
  caption   String  @unique(map: "aklbpro1") @db.VarChar(30)
  ischklst  Int     @default(0, map: "DF__lbpro__ischklst__44DF07B2") @db.TinyInt
  timestamp String  @db.Char(10)
  balgh     balgh[]
  balgt     balgt[]
  balok     balok[]
  balot     balot[]
  lbbka     lbbka[]
  lbpla     lbpla[]
}

model lbrsd {
  keylbrsd  String  @id(map: "pklbrsd") @db.Char(15)
  caption   String  @db.VarChar(60)
  allowcost Int     @default(0, map: "DF__lbrsd__allowcost__62E98F54") @db.TinyInt
  aocreate  Int     @default(0, map: "DF__lbrsd__aocreate__63DDB38D") @db.TinyInt
  aostatus  Int     @default(0, map: "DF__lbrsd__aostatus__64D1D7C6") @db.TinyInt
  isok      Int     @default(0, map: "DF__lbrsd__isok__65C5FBFF") @db.TinyInt
  invoice   Int     @default(0, map: "DF__lbrsd__invoice__66BA2038") @db.TinyInt
  statuschk Int     @default(0, map: "DF__lbrsd__statuschk__67AE4471") @db.TinyInt
  statusval Int     @default(0, map: "DF__lbrsd__statusval__68A268AA") @db.TinyInt
  timestamp String  @db.Char(10)
  lbanm     lbanm[]
}

model lbrth {
  keylbrth  String  @id(map: "pklbrth") @db.Char(15)
  caption   String  @unique(map: "aklbrth") @db.VarChar(60)
  descript  String  @db.VarChar(500)
  timestamp String  @db.Char(10)
  lbrtr     lbrtr[]
}

model lbrtr {
  keylbrtr  String  @id(map: "pklbrtr") @db.Char(15)
  keylbrth  String  @db.Char(15)
  keyaopla  String  @db.Char(15)
  keyaobdl  String  @db.Char(15)
  keyaodet  String? @db.Char(15)
  keycmart  String? @db.Char(15)
  descript  String  @db.VarChar(250)
  remcost   Float   @default(0, map: "DF__lbrtr__remcost__2D90936C") @db.Money
  timestamp String  @db.Char(10)
  aobdl     aobdl   @relation(fields: [keyaobdl], references: [keyaobdl], onUpdate: NoAction, map: "fklbrtrkeyaobdl")
  aodet     aodet?  @relation(fields: [keyaodet], references: [keyaodet], onDelete: NoAction, onUpdate: NoAction, map: "fklbrtrkeyaodet")
  aopla     aopla   @relation(fields: [keyaopla], references: [keyaopla], onUpdate: NoAction, map: "fklbrtrkeyaopla")
  cmart     cmart?  @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fklbrtrkeycmart")
  lbrth     lbrth   @relation(fields: [keylbrth], references: [keylbrth], onUpdate: NoAction, map: "fklbrtrkeylbrth")

  @@index([keyaobdl], map: "fklbrtraobdl")
  @@index([keyaodet], map: "fklbrtraodet")
  @@index([keyaopla], map: "fklbrtraopla")
  @@index([keycmart], map: "fklbrtrcmart")
  @@index([keylbrth], map: "fklbrtrlbrth")
}

model lnbac {
  keylnbac   String  @id(map: "pklnbac") @db.Char(15)
  keylnprj   String  @db.Char(15)
  keycmobj   String  @db.Char(15)
  initshare  Decimal @db.Decimal(15, 5)
  initamount Float   @db.Money
  crntshare  Decimal @db.Decimal(15, 5)
  timestamp  String  @db.Char(10)
  cmobj      cmobj   @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fklnbackeycmobj")
  lnprj      lnprj   @relation(fields: [keylnprj], references: [keylnprj], onUpdate: NoAction, map: "fklnbackeylnprf")
  lnprf      lnprf[]

  @@index([keycmobj], map: "fklnbaccmobj")
  @@index([keylnprj], map: "fklnbaclnprj")
}

model lncpb {
  keylncpb  String   @id(map: "pklncpb") @db.Char(15)
  keylnobj  String   @db.Char(15)
  amount    Float    @db.Money
  kind      Int      @default(0, map: "DF__lncpb__kind__3DC6FB35") @db.TinyInt
  pmntdate  DateTime @db.DateTime
  comment   String?  @db.VarChar(200)
  timestamp String   @db.Char(10)
  lnobj     lnobj    @relation(fields: [keylnobj], references: [keylnobj], onUpdate: NoAction, map: "fklncpbkeylnobj")

  @@index([keylnobj], map: "fklncpblnobj")
}

model lnemf {
  keylnemf  String   @id(map: "pklnemf") @db.Char(15)
  keylnprj  String   @db.Char(15)
  keycmart  String   @db.Char(15)
  fromdate  DateTime @db.Date
  todate    DateTime @db.Date
  sharecost Float    @db.Money
  timestamp String   @db.Char(10)
  hyrad     hyrad[]
  cmart     cmart    @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fklnemfkeycmart")
  lnprj     lnprj    @relation(fields: [keylnprj], references: [keylnprj], onUpdate: NoAction, map: "fklnemfkeylnprj")

  @@index([keycmart], map: "fklnemfcmart")
  @@index([keylnprj], map: "fklnemflnprj")
}

model lnept {
  keylnept   String  @id(map: "pklnept") @db.Char(15)
  keylnprd   String? @db.Char(15)
  keykrfkh   String  @db.Char(15)
  keyhyobj   String  @db.Char(15)
  keylnlro   String  @db.Char(15)
  payedshare Float   @db.Money
  timestamp  String  @db.Char(10)
  hyobj      hyobj   @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fklneptkeyhyobj")
  krfkh      krfkh   @relation(fields: [keykrfkh], references: [keykrfkh], onDelete: Cascade, onUpdate: NoAction, map: "fklneptkeykrfkh")
  lnlro      lnlro   @relation(fields: [keylnlro], references: [keylnlro], onUpdate: NoAction, map: "fklneptkeylnlro")

  @@index([keyhyobj], map: "fklnepthyobj")
  @@index([keykrfkh], map: "fklneptkrfkh")
  @@index([keylnlro], map: "fklneptlnlro")
  @@index([keylnprd], map: "fklneptlnprd")
}

model lnkop {
  keylnkop  String @id(map: "PK__lnkop__353EA674") @db.Char(15)
  keylrfkh  String @db.Char(15)
  keylnobj  String @db.Char(15)
  keylnobp  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keylnobj], map: "fklnkoplnobj")
  @@index([keylnobp], map: "fklnkoplnobp")
  @@index([keylrfkh], map: "fklnkoplrfkh")
}

model lnlnt {
  keylnlnt   String  @id(map: "pklnlnt") @db.Char(15)
  caption    String  @db.VarChar(60)
  annuity    Int     @default(0, map: "DF__lnlnt__annuity__490A9C95") @db.TinyInt
  rollover   Int     @default(0, map: "DF__lnlnt__rollover__49FEC0CE") @db.TinyInt
  intbinding Int     @default(0, map: "DF__lnlnt__intbindin__4AF2E507") @db.TinyInt
  intbindper Int?    @db.SmallInt
  timestamp  String  @db.Char(10)
  lnobj      lnobj[]
}

model lnlpk {
  keylnlpk  String @id(map: "PK__lnlpk__7E237BB4") @db.Char(15)
  keylnlnt  String @db.Char(15)
  keylnlpt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keylnlnt], map: "fklnlpklnlnt")
  @@index([keylnlpt], map: "fklnlpklnlpt")
}

model lnlpt {
  keylnlpt  String  @id(map: "PK__lnlpt__000BC426") @db.Char(15)
  caption   String? @db.Char(30)
  timestamp String  @db.Char(10)
  lnobj     lnobj[]
}

model lnlro {
  keylnlro   String  @id(map: "pklnlro") @db.Char(15)
  keylnobj   String  @db.Char(15)
  keycmobj   String  @db.Char(15)
  initshare  Decimal @db.Decimal(5, 2)
  initamount Float   @default(0, map: "DF__lnlro__initamoun__0C8BD06E") @db.Money
  crntshare  Decimal @db.Decimal(5, 2)
  timestamp  String  @db.Char(10)
  lnept      lnept[]
  lnobj      lnobj   @relation(fields: [keylnobj], references: [keylnobj], onDelete: Cascade, onUpdate: NoAction, map: "fklnlrokeylnobj")

  @@index([keycmobj], map: "fklnlrohyinf")
  @@index([keylnobj], map: "fklnlrolnobj")
}

model lnobj {
  keylnobj   String    @id(map: "pklnobj") @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  keylnlnt   String    @db.Char(15)
  keylnlpt   String?   @db.Char(15)
  keylntyp   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keycmart   String?   @db.Char(15)
  keylnprj   String?   @db.Char(15)
  code       String    @db.VarChar(30)
  caption    String?   @db.VarChar(40)
  generation String    @db.VarChar(3)
  loanstatus Int       @default(0, map: "DF__lnobj__loanstatu__3B34A74D") @db.TinyInt
  loancat    Int       @default(0, map: "DF__lnobj__loancat__3C28CB86") @db.TinyInt
  periodical Int       @default(0, map: "DF__lnobj__periodica__3D1CEFBF") @db.SmallInt
  prcnt      Decimal   @default(0, map: "DF__lnobj__prcnt__3E1113F8") @db.Decimal(6, 4)
  intpaydays Int       @default(1, map: "DF__lnobj__intpayday__3F053831") @db.TinyInt
  invoice    Int       @default(1, map: "DF__lnobj__invoice__3FF95C6A") @db.TinyInt
  appldate   DateTime? @db.DateTime
  fromdate   DateTime  @db.DateTime
  todate     DateTime  @db.DateTime
  binddate   DateTime? @db.DateTime
  convdate   DateTime? @db.DateTime
  paydate    DateTime? @db.DateTime
  reciedate  DateTime? @db.DateTime
  regamount  Float     @default(0, map: "DF__lnobj__regamount__40ED80A3") @db.Money
  payamount  Float     @default(0, map: "DF__lnobj__payamount__41E1A4DC") @db.Money
  orgamount  Float     @default(0, map: "DF__lnobj__orgamount__42D5C915") @db.Money
  restamount Float     @default(0, map: "DF__lnobj__restamoun__43C9ED4E") @db.Money
  roundint   Int       @default(0, map: "DF__lnobj__roundint__44BE1187") @db.TinyInt
  amortper   Int       @default(0, map: "DF__lnobj__amortper__45B235C0") @db.TinyInt
  roundamort Int       @default(0, map: "DF__lnobj__roundamor__46A659F9") @db.TinyInt
  amortinc   Float     @default(0, map: "DF__lnobj__amortinc__479A7E32") @db.Money
  fictodate  Int       @default(0, map: "DF__lnobj__fictodate__488EA26B") @db.TinyInt
  cutday     Int       @default(0, map: "DF__lnobj__cutday__4982C6A4") @db.TinyInt
  maxamount  Float?    @db.Money
  termcond   String?   @db.VarChar(30)
  extrainfo  String?   @db.VarChar(30)
  israised   Int       @default(0, map: "DF__lnobj__israised__4A76EADD") @db.TinyInt
  prcntbound Int       @default(6, map: "DF__lnobj__prcntboun__4B6B0F16")
  timestamp  String    @db.Char(10)
  lncpb      lncpb[]
  lnlro      lnlro[]
  cmart      cmart?    @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fklnobjkeycmart")
  cmcmp      cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fklnobjkeycmcmp")
  cmctc      cmctc     @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fklnobjkeycmctc")
  lnlnt      lnlnt     @relation(fields: [keylnlnt], references: [keylnlnt], onUpdate: NoAction, map: "fklnobjkeylnlnt")
  lnlpt      lnlpt?    @relation(fields: [keylnlpt], references: [keylnlpt], onDelete: NoAction, onUpdate: NoAction, map: "fklnobjkeylnlpt")
  lnprj      lnprj?    @relation(fields: [keylnprj], references: [keylnprj], onDelete: NoAction, onUpdate: NoAction, map: "fklnobjkeylnprj")
  lntyp      lntyp?    @relation(fields: [keylntyp], references: [keylntyp], onDelete: NoAction, onUpdate: NoAction, map: "fklnobjkeylntyp")
  lnobl      lnobl[]
  lnobp      lnobp[]
  lnopt      lnopt[]
  lnprd      lnprd[]
  lnprt      lnprt[]

  @@index([keycmart], map: "fklnobjcmart")
  @@index([keycmcmp], map: "fklnobjcmcmp")
  @@index([keycmctc], map: "fklnobjcmctc")
  @@index([keylnlnt], map: "fklnobjlnlnt")
  @@index([keylnlpt], map: "fklnobjlnlpt")
  @@index([keylnprj], map: "fklnobjlnprj")
  @@index([keylntyp], map: "fklnobjlntyp")
  @@index([keysyusr], map: "fklnobjsyusr")
}

model lnobl {
  keylnobl  String   @id(map: "pklnobl") @db.Char(15)
  keylnobj  String   @db.Char(15)
  baldate   DateTime @db.DateTime
  blcamount Float?   @db.Money
  usrid     String   @db.VarChar(80)
  moddate   DateTime @db.DateTime
  timestamp String   @db.Char(10)
  lnobj     lnobj    @relation(fields: [keylnobj], references: [keylnobj], onDelete: Cascade, onUpdate: NoAction, map: "fklnoblkeylnobj")

  @@index([keylnobj], map: "fklnobllnobj")
}

model lnobp {
  keylnobp  String    @id(map: "pklnobp") @db.Char(15)
  keylnobj  String?   @db.Char(15)
  keylnobr  String?   @db.Char(15)
  keylnobp2 String?   @db.Char(15)
  fromdate  DateTime  @db.DateTime
  todate    DateTime  @db.DateTime
  expdate   DateTime  @db.DateTime
  amort     Float     @default(0, map: "DF__lnobp__amort__34799403") @db.Money
  interest  Float     @default(0, map: "DF__lnobp__interest__356DB83C") @db.Money
  prcnt     Decimal   @default(0, map: "DF__lnobp__prcnt__3661DC75") @db.Decimal(6, 4)
  paystatus Int       @default(0, map: "DF__lnobp__paystatus__375600AE") @db.TinyInt
  costdate  DateTime? @db.DateTime
  extended  Int       @default(0, map: "DF__lnobp__extended__384A24E7") @db.TinyInt
  type      Int       @default(0, map: "DF__lnobp__type__393E4920") @db.TinyInt
  origin    Int       @default(0, map: "DF__lnobp__origin__3A326D59") @db.TinyInt
  kind      Int       @default(0, map: "DF__lnobp__kind__3B269192") @db.TinyInt
  note      String?   @db.VarChar(200)
  timestamp String    @db.Char(10)
  lnobj     lnobj?    @relation(fields: [keylnobj], references: [keylnobj], onDelete: Cascade, onUpdate: NoAction, map: "fklnobpkeylnobj")
  lnobr     lnobr?    @relation(fields: [keylnobr], references: [keylnobr], onDelete: Cascade, onUpdate: NoAction, map: "fklnobpkeylnobr ")

  @@index([keylnobj], map: "fklnobplnobj")
  @@index([keylnobp2], map: "fklnobplnobp2")
  @@index([keylnobr], map: "fklnobplnobr")
}

model lnobr {
  keylnobr   String   @id(map: "pklnobr") @db.Char(15)
  keylnobj   String   @db.Char(15)
  keylnlnt   String   @db.Char(15)
  keylnlpt   String?  @db.Char(15)
  generation String   @db.Char(3)
  regamount  Float    @db.Money
  fromdate   DateTime @db.DateTime
  todate     DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  lnobp      lnobp[]

  @@index([keylnlnt], map: "fklnobrlnlnt")
  @@index([keylnlpt], map: "fklnobrlnlpt")
  @@index([keylnobj], map: "fklnobrlnobj")
}

model lnobs {
  keylnobs  String  @id(map: "PK__lnobs__122A7461") @db.Char(15)
  keylnobj  String? @db.Char(15)
  keylnobr  String? @db.Char(15)
  code      String? @db.Char(30)
  amount    Float   @default(0, map: "DF__lnobs__amount__131E989A") @db.Money
  winamount Float   @default(0, map: "DF__lnobs__winamount__1412BCD3") @db.Money
  sectype   Int     @default(0, map: "DF__lnobs__sectype__1506E10C") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keylnobj], map: "fklnobslnobj")
  @@index([keylnobr], map: "fklnobslnobr")
}

model lnopt {
  keylnopt  String   @id(map: "pklnopt") @db.Char(15)
  keylnobj  String   @db.Char(15)
  amount    Float    @db.Money
  caption   String   @db.VarChar(60)
  paydate   DateTime @db.DateTime
  comment   String?  @db.VarChar(500)
  timestamp String   @db.Char(10)
  lnobj     lnobj    @relation(fields: [keylnobj], references: [keylnobj], onDelete: Cascade, onUpdate: NoAction, map: "fklnoptkeylnobj")

  @@index([keylnobj], map: "fklnoptlnobj")
}

model lnouk {
  keylnouk  String  @id(map: "PK__lnouk__16EF297E") @db.Char(15)
  keylnobj  String? @db.Char(15)
  keylnobj2 String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keylnobj], map: "fklnouklnobj")
  @@index([keylnobj2], map: "fklnouklnobj2")
}

model lnprd {
  keylnprd  String   @id(map: "pklnprd") @db.Char(15)
  keylnobj  String   @db.Char(15)
  keycmart  String   @db.Char(15)
  fromdate  DateTime @db.DateTime
  todate    DateTime @db.DateTime
  sharecost Float    @db.Money
  timestamp String   @db.Char(10)
  hyrad     hyrad[]
  cmart     cmart    @relation(fields: [keycmart], references: [keycmart], onDelete: Cascade, onUpdate: NoAction, map: "fklnprdkeycmart")
  lnobj     lnobj    @relation(fields: [keylnobj], references: [keylnobj], onDelete: Cascade, onUpdate: NoAction, map: "fklnprdkeylnobj")

  @@index([keycmart], map: "fklnprdcmart")
  @@index([keylnobj], map: "fklnprdlnobj")
}

model lnprf {
  keylnprf  String @id(map: "pklnprf") @db.Char(15)
  keylnbac  String @db.Char(15)
  keykrfkh  String @db.Char(15)
  paidshare Float  @db.Money
  timestamp String @db.Char(10)
  krfkh     krfkh  @relation(fields: [keykrfkh], references: [keykrfkh], onUpdate: NoAction, map: "fklnprfkeykrfkh")
  lnbac     lnbac  @relation(fields: [keylnbac], references: [keylnbac], onUpdate: NoAction, map: "fklnprfkeylnbac")

  @@index([keykrfkh], map: "fklnprfkrfkh")
  @@index([keylnbac], map: "fklnprflnbac")
}

model lnprj {
  keylnprj  String  @id(map: "pklnprj") @db.Char(15)
  keycmcmp  String  @db.Char(15)
  caption   String  @db.VarChar(40)
  amount    Float   @db.Money
  inparts   Int     @db.TinyInt
  status    Int     @db.TinyInt
  timestamp String  @db.Char(10)
  lnbac     lnbac[]
  lnemf     lnemf[]
  lnobj     lnobj[]
  cmcmp     cmcmp   @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fklnprjkeycmcmp")

  @@index([keycmcmp], map: "fklnprjcmcmp")
}

model lnprt {
  keylnprt  String   @id(map: "pklnprt") @db.Char(15)
  keylnobj  String   @db.Char(15)
  keysyusr  String?  @db.Char(15)
  lpdate    DateTime @db.DateTime
  isdefault Int      @default(0, map: "DF__lnprt__isdefault__55065F26") @db.TinyInt
  amount    Float    @db.Money
  comment   String?  @db.VarChar(500)
  timestamp String   @db.Char(10)
  lnobj     lnobj    @relation(fields: [keylnobj], references: [keylnobj], onDelete: Cascade, onUpdate: NoAction, map: "fklnprtkeylnobj")

  @@index([keylnobj], map: "fklnprtlnobj")
  @@index([keysyusr], map: "fklnprtsyusr")
}

model lntyp {
  keylntyp  String  @id(map: "pklntyp") @db.Char(15)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  lnobj     lnobj[]
}

model lnupl {
  keylnupl  String @id(map: "PK__lnupl__037240B6") @db.Char(15)
  keylnobj  String @db.Char(15)
  year      Int    @db.SmallInt
  period    Int    @default(0, map: "DF__lnupl__period__046664EF") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keylnobj], map: "fklnupllnobj")
}

model lnvrt {
  keylnvrt  String @id(map: "pklnvrt") @db.Char(15)
  keyrevrt  String @db.Char(15)
  keyfadbt  String @db.Char(15)
  keycmcmp  String @db.Char(15)
  keycmart  String @db.Char(15)
  caption   String @db.Char(30)
  feetype   Int    @default(0, map: "DF__lnvrt__feetype__17095EE1") @db.TinyInt
  period    Int    @db.TinyInt
  paycond   Int    @db.TinyInt
  expires   Int    @db.TinyInt
  expmonth  Int    @db.TinyInt
  expday    Int    @db.TinyInt
  timestamp String @db.Char(10)
  cmart     cmart  @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fklnvrtkeycmart")
  cmcmp     cmcmp  @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fklnvrtkeycmcmp ")
  fadbt     fadbt  @relation(fields: [keyfadbt], references: [keyfadbt], onUpdate: NoAction, map: "fklnvrtkeyfadbt ")
  revrt     revrt  @relation(fields: [keyrevrt], references: [keyrevrt], onUpdate: NoAction, map: "fklnvrtkeyrevrt ")

  @@index([keycmart], map: "fklnvrtcmart")
  @@index([keycmcmp], map: "fklnvrtcmcmp")
  @@index([keyfadbt], map: "fklnvrtfadbt")
  @@index([keyrevrt], map: "fklnvrtrevrt")
}

model lrbac {
  keylrbac   String    @id(map: "pklrbac") @db.Char(15)
  keycmctc   String    @db.Char(15)
  account    String    @db.Char(13)
  bic        String?   @db.VarChar(11)
  iban       String?   @db.VarChar(34)
  fromdate   DateTime? @db.DateTime
  todate     DateTime? @db.DateTime
  defaultacc Int       @default(0, map: "DF__lrbac__defaultac__679935D8") @db.TinyInt
  blocked    Int       @default(0, map: "DF__lrbac__blocked__688D5A11") @db.TinyInt
  prcnt      Decimal   @default(0, map: "DF__lrbac__prcnt__69817E4A") @db.Decimal(8, 4)
  timestamp  String    @db.Char(10)

  @@index([keycmctc], map: "fklrbaccmctc")
}

model lrfkd {
  keylrfkd  String  @id(map: "pklrfkd") @db.Char(15)
  descript  String  @db.VarChar(30)
  timestamp String  @db.Char(10)
  lrfkh     lrfkh[]
}

model lrfkh {
  keylrfkh   String    @id(map: "pklrfkh") @db.Char(15)
  keycmcmp   String    @db.Char(15)
  keyrevrt   String    @db.Char(15)
  keyrevrt2  String?   @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keycmctc2  String?   @db.Char(15)
  keycmctc3  String?   @db.Char(15)
  keycmeid   String?   @db.Char(15)
  keycmcuh   String?   @db.Char(15)
  keydrmpt   String?   @db.Char(15)
  keyatway   String?   @db.Char(15)
  keylrbac   String?   @db.Char(15)
  keylrbac2  String?   @db.Char(15)
  keylrfkd   String?   @db.Char(15)
  keysyusr   String    @db.Char(15)
  keysyusr2  String?   @db.Char(15)
  invoice    String?   @db.Char(25)
  type       Int       @db.TinyInt
  regstatus  Int       @db.TinyInt
  paystatus  Int       @db.TinyInt
  jrnlstatus Int       @db.TinyInt
  atstatus   Int       @default(0, map: "DF__lrfkh__atstatus__1D7A2734") @db.TinyInt
  reference  String?   @db.Char(30)
  ocr        String?   @db.Char(25)
  orderid    String?   @db.Char(15)
  inwardid   String?   @db.VarChar(80)
  amount     Float     @db.Money
  vat        Float     @db.Money
  famount    Float     @db.Money
  fvat       Float     @db.Money
  addvat     Float     @default(0, map: "DF__lrfkh__addvat__1E6E4B6D") @db.Money
  blcamount  Float     @default(0, map: "DF__lrfkh__blcamount__1F626FA6") @db.Money
  invdate    DateTime  @db.DateTime
  expdate    DateTime? @db.DateTime
  fromdate   DateTime? @db.DateTime
  todate     DateTime? @db.DateTime
  regdate    DateTime  @db.DateTime
  factoring  Int       @db.TinyInt
  blockpaymd Int       @default(0, map: "DF__lrfkh__blockpaym__205693DF") @db.TinyInt
  expayuse   Int       @default(0, map: "DF__lrfkh__expayuse__214AB818") @db.TinyInt
  blocked    Int       @db.TinyInt
  blockeddef Int       @default(0, map: "DF__lrfkh__blockedde__223EDC51") @db.TinyInt
  allocated  Int?      @db.TinyInt
  blc        Int       @default(0, map: "DF__lrfkh__blc__2333008A") @db.TinyInt
  btw        Int       @default(0, map: "DF__lrfkh__btw__242724C3") @db.TinyInt
  btwcost    Int       @default(0, map: "DF__lrfkh__btwcost__251B48FC") @db.TinyInt
  expstatus  Int       @db.TinyInt
  subscript  Int       @default(0, map: "DF__lrfkh__subscript__260F6D35") @db.TinyInt
  timestamp  String    @db.Char(10)
  avfkh      avfkh[]
  lrfkd      lrfkd?    @relation(fields: [keylrfkd], references: [keylrfkd], onDelete: NoAction, onUpdate: NoAction, map: "fklrfkhkeylrfkd")
  prmtr      prmtr[]

  @@index([keyatway], map: "fklrfkhatway")
  @@index([keycmcmp], map: "fklrfkhcmcmp")
  @@index([keycmctc], map: "fklrfkhcmctc")
  @@index([keycmctc2], map: "fklrfkhcmctc2")
  @@index([keycmctc3], map: "fklrfkhcmctc3")
  @@index([keycmcuh], map: "fklrfkhcmcuh")
  @@index([keycmeid], map: "fklrfkhcmeid")
  @@index([keydrmpt], map: "fklrfkhdrmpt")
  @@index([keylrbac], map: "fklrfkhlrbac")
  @@index([keylrbac2], map: "fklrfkhlrbac2")
  @@index([keylrfkd], map: "fklrfkhlrfkd")
  @@index([keyrevrt], map: "fklrfkhrevrt")
  @@index([keyrevrt2], map: "fklrfkhrevrt2")
  @@index([keysyusr], map: "fklrfkhsyusr")
  @@index([keysyusr2], map: "fklrfkhsyusr2")
  @@index([keycmcmp, keylrfkh, type], map: "inlrfkh_1")
}

model lrfkk {
  keylrfkk  String @id(map: "PK__lrfkk__6C390A4C") @db.Char(15)
  keylrfkh  String @db.Char(15)
  keylrfkh2 String @db.Char(15)
  type      Int
  timestamp String @db.Char(10)

  @@index([keylrfkh], map: "fklrfkklrfkh")
  @@index([keylrfkh2], map: "fklrfkklrfkh2")
}

model lrlvk {
  keylrlvk  String  @id(map: "PK__lrlvk__2449249C") @db.Char(15)
  keylrlvr  String  @db.Char(15)
  keycmctc  String? @db.Char(15)
  keycmcmp  String? @db.Char(15)
  type      Int     @default(0, map: "DF__lrlvk__type__253D48D5") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keycmcmp], map: "fklrlvkcmcmp")
  @@index([keycmctc], map: "fklrlvkcmctc")
  @@index([keylrlvr], map: "fklrlvklrlvr")
}

model lrlvr {
  keylrlvr  String   @id(map: "pklrlvr") @db.Char(15)
  keycmctc  String   @db.Char(15)
  keysylng  String   @db.Char(15)
  keycmngr  String?  @db.Char(15)
  keyiksbg  String?  @db.Char(15)
  keyikslr  String?  @db.Char(15)
  keyatway  String?  @db.Char(15)
  id        String   @db.VarChar(34)
  paycond   Int      @db.SmallInt
  factoring Int      @default(0, map: "DF__lrlvr__factoring__7C634C2C") @db.TinyInt
  regdate   DateTime @db.DateTime
  blocked   Int      @default(0, map: "DF__lrlvr__blocked__7D577065") @db.TinyInt
  delflag   Int      @default(0, map: "DF__lrlvr__delflag__7E4B949E") @db.TinyInt
  btw       Int      @default(0, map: "DF__lrlvr__btw__7F3FB8D7") @db.TinyInt
  btwtype   Int      @default(0, map: "DF__lrlvr__btwtype__0033DD10")
  wka       Int      @default(0, map: "DF__lrlvr__wka__01280149") @db.TinyInt
  wkastatus Int      @default(0, map: "DF__lrlvr__wkastatus__021C2582") @db.TinyInt
  allowdup  Int      @default(0, map: "DF__lrlvr__allowdup__031049BB") @db.TinyInt
  timestamp String   @db.Char(10)

  @@index([keyatway], map: "fklrlvratway")
  @@index([keycmctc], map: "fklrlvrcmctc")
  @@index([keycmngr], map: "fklrlvrcmngr")
  @@index([keyiksbg], map: "fklrlvriksbg")
  @@index([keyikslr], map: "fklrlvrikslr")
  @@index([keysylng], map: "fklrlvrsylng")
}

model lrpmt {
  keylrpmt  String  @id(map: "pklrpmt") @db.Char(15)
  typeid    Int     @db.TinyInt
  name      String? @db.Char(30)
  usemethod Int     @db.TinyInt
  prio      Int     @db.TinyInt
  notlrprio Int     @db.TinyInt
  timestamp String  @db.Char(10)
  cmctc     cmctc[]
}

model lrptt {
  keylrptt   String  @id(map: "pklrptt") @db.Char(15)
  keylrsce   String  @db.Char(15)
  keyrevrt   String  @db.Char(15)
  keyrevrt2  String? @db.Char(15)
  printjrnl  Int     @db.TinyInt
  accdate    Int     @db.TinyInt
  adjustaccd Int     @db.SmallInt
  inwardset  Int     @db.TinyInt
  intpay     Int     @default(0, map: "DF__lrptt__intpay__5A64D239") @db.TinyInt
  invscan    Int     @default(0, map: "DF__lrptt__invscan__5B58F672") @db.TinyInt
  usesumat   Int     @default(0, map: "DF__lrptt__usesumat__5C4D1AAB") @db.TinyInt
  usesumik   Int     @default(0, map: "DF__lrptt__usesumik__5D413EE4") @db.TinyInt
  timestamp  String  @db.Char(10)

  @@index([keylrsce], map: "fklrpttlrsce")
  @@index([keyrevrt], map: "fklrpttrevrt")
  @@index([keyrevrt2], map: "fklrpttrevrt2")
}

model lrsce {
  keylrsce  String @id(map: "PK__lrsce__70FDBF69") @db.Char(15)
  typeid    Int
  name      String @db.Char(30)
  timestamp String @db.Char(10)
}

model lrtrn {
  keylrtrn  String   @id(map: "pklrtrn") @db.Char(15)
  keyrevrt  String   @db.Char(15)
  keycmctc  String   @db.Char(15)
  keylrfkh  String   @db.Char(15)
  keylrtrn2 String?  @db.Char(15)
  keylrfkk  String?  @db.Char(15)
  keylrpmt  String?  @db.Char(15)
  keycmcuh  String?  @db.Char(15)
  keysyusr  String   @db.Char(15)
  transdate DateTime @db.DateTime
  regdate   DateTime @db.DateTime
  status    Int      @db.TinyInt
  amount    Float    @db.Money
  famount   Float    @db.Money
  pg        String?  @db.Char(11)
  bg        String?  @db.Char(11)
  clearing  Int?
  account   String?  @db.VarChar(20)
  bic       String?  @db.Char(11)
  iban      String?  @db.VarChar(42)
  blc       Int      @default(0, map: "DF__lrtrn__blc__63BE92D1") @db.TinyInt
  groupid   String?  @db.VarChar(33)
  timestamp String   @db.Char(10)
  lrtsr     lrtsr[]

  @@index([keycmctc], map: "fklrtrncmctc")
  @@index([keycmcuh], map: "fklrtrncmcuh")
  @@index([keylrfkh], map: "fklrtrnlrfkh")
  @@index([keylrfkk], map: "fklrtrnlrfkk")
  @@index([keylrpmt], map: "fklrtrnlrpmt")
  @@index([keylrtrn2], map: "fklrtrnlrtrn")
  @@index([keyrevrt], map: "fklrtrnrevrt")
  @@index([keysyusr], map: "fklrtrnsyusr")
  @@index([transdate], map: "inlrtrn_1QG0NMF1R")
}

model lrtsr {
  keylrtsr  String  @id(map: "pklrtsr") @db.Char(15)
  keylrtrn  String  @db.Char(15)
  code      String  @db.Char(4)
  status    Int     @default(0, map: "DF__lrtsr__status__3FEB46AF")
  rejreason String? @db.VarChar(105)
  timestamp String  @db.Char(10)
  lrtrn     lrtrn   @relation(fields: [keylrtrn], references: [keylrtrn], onUpdate: NoAction, map: "fklrtsrkeylrtrn")

  @@index([keylrtrn], map: "fklrtsrlrtrn")
}

model lrwkh {
  keylrwkh   String    @id(map: "pklrwkh") @db.Char(15)
  keylrlvr   String    @db.Char(15)
  fromdate   DateTime? @db.DateTime
  todate     DateTime? @db.DateTime
  wkastate   Int       @default(0, map: "DF__lrwkh__wkastate__74141B56") @db.TinyInt
  dbtdate    DateTime? @db.DateTime
  prnwkadate DateTime? @db.DateTime
  timestamp  String    @db.Char(10)

  @@index([keylrlvr], map: "fklrwkhlrlvr")
}

model lrwkx {
  keylrwkx  String @id(map: "PK__lrwkx__5B644F5C") @db.Char(15)
  wkatext   String @db.Text
  timestamp String @db.Char(10)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model mallkopp {
  keyhybla  String  @db.Char(15)
  keyhyobj  String? @db.Char(15)
  keybsins  String  @db.Char(15)
  bilaga    String? @db.Char(5)
  timestamp String? @db.Char(10)
  keybsins2 String? @db.Char(15)
  keybsdef  String? @db.Char(15)
  def       String  @db.Char(30)

  @@ignore
}

model mbasd {
  keymbasd  String  @id(map: "pkmbasd") @db.Char(15)
  keymbsse  String? @db.Char(15)
  keycode   String  @db.Char(15)
  keysyusr  String  @db.Char(15)
  unitalias String  @db.VarChar(60)
  asdtype   Int     @default(0, map: "DF__mbasd__asdtype__2DDA0324") @db.TinyInt
  tblname   String? @db.VarChar(20)
  orgtstamp String? @db.Char(10)
  timestamp String  @db.Char(10)
  mbsse     mbsse?  @relation(fields: [keymbsse], references: [keymbsse], onDelete: Cascade, onUpdate: NoAction, map: "fkmbasdkeymbsse ")

  @@index([keymbsse], map: "fkmbasdmbsse")
  @@index([keycode, keysyusr, unitalias, tblname, orgtstamp], map: "inmbasd")
}

model mbsse {
  keymbsse   String   @id(map: "pkmbsse") @db.Char(15)
  keysyusr   String   @db.Char(15)
  unitalias  String   @db.VarChar(60)
  unitname   String   @db.VarChar(60)
  sysversion String   @db.VarChar(15)
  srvname    String   @db.VarChar(30)
  starttime  DateTime @db.DateTime
  endtime    DateTime @db.DateTime
  ssestatus  Int      @default(0, map: "DF__mbsse__ssestatus__364F4D94") @db.TinyInt
  errormsg   String   @db.VarChar(Max)
  timestamp  String   @db.Char(10)
  mbasd      mbasd[]

  @@index([keysyusr], map: "fkmbssesyusr")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model MimerVLU2FLU {
  hyresid String? @db.VarChar(30)

  @@ignore
}

model mmack {
  keymmack  String @id(map: "pkmmack") @db.Char(15)
  keymmact  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkmmackkeycmctc")
  mmact     mmact  @relation(fields: [keymmact], references: [keymmact], onUpdate: NoAction, map: "fkmmackkeymmact ")

  @@unique([keymmact, keycmctc], map: "akmmack1")
  @@index([keycmctc], map: "fkmmackcmctc")
  @@index([keymmact], map: "fkmmackmmact")
}

model mmact {
  keymmact  String    @id(map: "pkmmact") @db.Char(15)
  caption   String    @db.VarChar(70)
  actdate   DateTime? @db.Date
  timestamp String    @db.Char(10)
  mmack     mmack[]

  @@unique([caption, actdate], map: "akmmact1")
}

model mmadr {
  keymmadr  String  @id(map: "pkmmadr") @db.Char(15)
  keymmfst  String  @db.Char(15)
  adress1   String? @db.VarChar(60)
  adress3   String? @db.VarChar(60)
  adress4   String? @db.VarChar(60)
  timestamp String  @db.Char(10)
  mmfst     mmfst   @relation(fields: [keymmfst], references: [keymmfst], onDelete: Cascade, onUpdate: NoAction, map: "fkmmadrkeymmfst")

  @@unique([keymmfst, adress1, adress3, adress4], map: "akmmadr1")
  @@index([keymmfst], map: "fkmmadrmmfst")
}

model mmans {
  keymmans  String   @id(map: "pkmmans") @db.Char(15)
  ansdate   DateTime @unique(map: "akmmans1") @db.Date
  ansid     Int      @default(0, map: "DF__mmans__ansid__62FD986E")
  timestamp String   @db.Char(10)
}

model mmben {
  keymmben  String @id(map: "pkmmben") @db.Char(15)
  keymmbet  String @db.Char(15)
  caption   String @unique(map: "akmmben1") @db.VarChar(60)
  descrip   String @db.VarChar(600)
  comment   String @db.VarChar(600)
  demdate   Int    @default(0, map: "DF__mmben__demdate__66500BE4") @db.TinyInt
  isactive  Int    @default(1, map: "DF__mmben__isactive__6744301D") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keymmbet], map: "fkmmbenmmbet")
}

model mmbet {
  keymmbet  String @id(map: "pkmmbet") @db.Char(15)
  caption   String @unique(map: "akmmbet1") @db.VarChar(60)
  timestamp String @db.Char(10)
}

model mmcaf {
  keymmcaf   String  @id(map: "pkmmcaf") @db.Char(15)
  keymmyfp   String  @db.Char(15)
  fromval    Float?  @db.Money
  toval      Float?  @db.Money
  calcfact   Decimal @default(0, map: "DF__mmcaf__calcfact__2ADB4D64") @db.Decimal(7, 4)
  nwcalcfact Decimal @default(0, map: "DF__mmcaf__nwcalcfac__2BCF719D") @db.Decimal(7, 4)
  timestamp  String  @db.Char(10)
  mmyfp      mmyfp   @relation(fields: [keymmyfp], references: [keymmyfp], onDelete: Cascade, onUpdate: NoAction, map: "fkmmcafkeymmyfp ")

  @@index([keymmyfp], map: "fkmmcafmmyfp")
}

model mmctc {
  keymmctc                     String    @id(map: "pkmmctc") @db.Char(15)
  keymmwdr                     String?   @db.Char(15)
  keycmctc                     String    @unique(map: "akmmctc") @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmctc3                    String?   @db.Char(15)
  keysyusr                     String?   @db.Char(15)
  memstatus                    Int       @default(1, map: "DF__mmctc__memstatus__43BBD793") @db.TinyInt
  signatur                     String?   @db.VarChar(80)
  createdate                   DateTime? @db.Date
  entrydate                    DateTime? @db.Date
  exitdate                     DateTime? @db.Date
  apprdate                     DateTime? @db.Date
  memfeedist                   Int       @default(0, map: "DF__mmctc__memfeedis__44AFFBCC") @db.TinyInt
  memnumber                    String    @db.VarChar(15)
  memdisc                      Decimal   @default(0, map: "DF__mmctc__memdisc__45A42005") @db.Decimal(7, 2)
  ownertype                    Int       @default(0, map: "DF__mmctc__ownertype__4698443E") @db.TinyInt
  bundle                       Int       @default(0, map: "DF__mmctc__bundle__478C6877") @db.TinyInt
  coord                        Int       @default(0, map: "DF__mmctc__coord__48808CB0") @db.TinyInt
  yreference                   String?   @db.VarChar(30)
  timestamp                    String    @db.Char(10)
  cmctc_mmctc_keycmctcTocmctc  cmctc     @relation("mmctc_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkmmctckeycmctc")
  cmctc_mmctc_keycmctc2Tocmctc cmctc?    @relation("mmctc_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkmmctckeycmctc2")
  cmctc_mmctc_keycmctc3Tocmctc cmctc?    @relation("mmctc_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkmmctckeycmctc3")
  mmwdr                        mmwdr?    @relation(fields: [keymmwdr], references: [keymmwdr], onDelete: NoAction, onUpdate: NoAction, map: "fkmmctckeymmwdr ")

  @@index([keycmctc2], map: "fkmmctccmctc2")
  @@index([keycmctc3], map: "fkmmctccmctc3")
  @@index([keymmwdr], map: "fkmmctcmmwdr")
  @@index([keysyusr], map: "fkmmctcsyusr")
}

model mmfst {
  keymmfst                     String  @id(map: "pkmmfst") @db.Char(15)
  keymmlob                     String? @db.Char(15)
  keycmctc                     String  @db.Char(15)
  keycmctc2                    String? @db.Char(15)
  keycmctc3                    String? @db.Char(15)
  keybafst                     String  @unique(map: "fkmmfstbafst") @db.Char(15)
  address                      String? @db.VarChar(100)
  area                         Int?
  inclinfee                    Int     @default(0, map: "DF__mmfst__inclinfee__4F2D8A3F") @db.TinyInt
  memberfee                    Float   @default(0, map: "DF__mmfst__memberfee__5021AE78") @db.Money
  proptype                     Int     @default(0, map: "DF__mmfst__proptype__5115D2B1") @db.TinyInt
  servfee                      Float   @default(0, map: "DF__mmfst__servfee__5209F6EA") @db.Money
  fpservfee                    Float   @default(0, map: "DF__mmfst__fpservfee__52FE1B23") @db.Money
  note                         String? @db.VarChar(100)
  munkey                       String? @db.Char(4)
  yreference                   String? @db.VarChar(30)
  timestamp                    String  @db.Char(10)
  mmadr                        mmadr[]
  bafst                        bafst   @relation(fields: [keybafst], references: [keybafst], onUpdate: NoAction, map: "fkmmfstkeybafst")
  cmctc_mmfst_keycmctcTocmctc  cmctc   @relation("mmfst_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkmmfstkeycmctc")
  cmctc_mmfst_keycmctc2Tocmctc cmctc?  @relation("mmfst_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkmmfstkeycmctc2")
  cmctc_mmfst_keycmctc3Tocmctc cmctc?  @relation("mmfst_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkmmfstkeycmctc3")
  mmlob                        mmlob?  @relation(fields: [keymmlob], references: [keymmlob], onDelete: NoAction, onUpdate: NoAction, map: "fkmmfstkeymmlob ")

  @@index([keycmctc], map: "fkmmfstcmctc")
  @@index([keycmctc2], map: "fkmmfstcmctc2")
  @@index([keycmctc3], map: "fkmmfstcmctc3")
  @@index([keymmlob], map: "fkmmfstmmlob")
}

model mmfxf {
  keymmfxf  String @id(map: "pkmmfxf") @db.Char(15)
  keymmyfp  String @db.Char(15)
  fromval   Float? @db.Money
  toval     Float? @db.Money
  fixedfee  Float  @default(0, map: "DF__mmfxf__fixedfee__3A1D90F4") @db.Money
  timestamp String @db.Char(10)
  mmyfp     mmyfp  @relation(fields: [keymmyfp], references: [keymmyfp], onDelete: Cascade, onUpdate: NoAction, map: "fkmmfxfkeymmyfp ")

  @@index([keymmyfp], map: "fkmmfxfmmyfp")
}

model mmhsf {
  keymmhsf  String @id(map: "pkmmhsf") @db.Char(15)
  keymmyfp  String @db.Char(15)
  nohouse   Int    @default(0, map: "DF__mmhsf__nohouse__2CD8A46F") @db.SmallInt
  servfee   Float  @default(0, map: "DF__mmhsf__servfee__2DCCC8A8") @db.Money
  timestamp String @db.Char(10)
  mmyfp     mmyfp  @relation(fields: [keymmyfp], references: [keymmyfp], onDelete: Cascade, onUpdate: NoAction, map: "fkmmhsfkeymmyfp")

  @@unique([keymmyfp, nohouse], map: "akmmhsf")
}

model mminh {
  keymminh  String @id(map: "pkmminh") @db.Char(15)
  keycmctc  String @db.Char(15)
  keycmobj  String @db.Char(15)
  keykrfkh  String @db.Char(15)
  servfee   Float  @default(0, map: "DF__mminh__servfee__1F9EA4E2") @db.Money
  membfee   Float  @default(0, map: "DF__mminh__membfee__2092C91B") @db.Money
  taxval    Float  @default(0, map: "DF__mminh__taxval__2186ED54") @db.Money
  pricetabl Int    @default(0, map: "DF__mminh__pricetabl__227B118D") @db.TinyInt
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkmminhkeycmctc")
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkmminhkeycmobj ")
  krfkh     krfkh  @relation(fields: [keykrfkh], references: [keykrfkh], onDelete: Cascade, onUpdate: NoAction, map: "fkmminhkeykrfkh")

  @@index([keycmctc], map: "fkmminhcmctc")
  @@index([keycmobj], map: "fkmminhcmobj")
  @@index([keykrfkh], map: "fkmminhkrfkh")
}

model mmlob {
  keymmlob  String  @id(map: "pkmmlob") @db.Char(15)
  code      String  @unique(map: "akmmlob1") @db.VarChar(10)
  caption   String  @unique(map: "akmmlob2") @db.VarChar(60)
  timestamp String  @db.Char(10)
  mmfst     mmfst[]
}

model mmolg {
  keymmolg                     String   @id(map: "pkmmolg") @db.Char(15)
  keycmobj                     String   @db.Char(15)
  keycmctc                     String?  @db.Char(15)
  keycmctc2                    String?  @db.Char(15)
  olgdate                      DateTime @db.Date
  changetype                   Int      @default(0, map: "DF__mmolg__changetyp__5A9F3CEB") @db.TinyInt
  timestamp                    String   @db.Char(10)
  cmctc_mmolg_keycmctcTocmctc  cmctc?   @relation("mmolg_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkmmolgkeycmctc")
  cmctc_mmolg_keycmctc2Tocmctc cmctc?   @relation("mmolg_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkmmolgkeycmctc2")
  cmobj                        cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkmmolgkeycmobj ")

  @@index([keycmctc], map: "fkmmolgcmctc")
  @@index([keycmctc2], map: "fkmmolgcmctc2")
  @@index([keycmobj], map: "fkmmolgcmobj")
}

model mmsmp {
  keymmsmp  String @id(map: "pkmmsmp") @db.Char(15)
  keymmyfp  String @db.Char(15)
  fromval   Float? @db.Money
  toval     Float? @db.Money
  smetprice Float  @default(0, map: "DF__mmsmp__smetprice__3DEE21D8") @db.Money
  timestamp String @db.Char(10)
  mmyfp     mmyfp  @relation(fields: [keymmyfp], references: [keymmyfp], onDelete: Cascade, onUpdate: NoAction, map: "fkmmsmpkeymmyfp ")

  @@index([keymmyfp], map: "fkmmsmpmmyfp")
}

model mmtaf {
  keymmtaf  String @id(map: "pkmmtaf") @db.Char(15)
  keymmyfp  String @db.Char(15)
  fromval   Float? @db.Money
  toval     Float? @db.Money
  fee       Float  @default(0, map: "DF__mmtaf__fee__41BEB2BC") @db.Money
  timestamp String @db.Char(10)
  mmyfp     mmyfp  @relation(fields: [keymmyfp], references: [keymmyfp], onDelete: Cascade, onUpdate: NoAction, map: "fkmmtafkeymmyfp ")

  @@index([keymmyfp], map: "fkmmtafmmyfp")
}

model mmwdr {
  keymmwdr  String  @id(map: "pkmmwdr") @db.Char(15)
  caption   String  @unique(map: "akmmwdr1") @db.VarChar(60)
  descrip   String  @db.VarChar(600)
  instterm  Int     @default(0, map: "DF__mmwdr__instterm__6EE551E5") @db.TinyInt
  isactive  Int     @default(1, map: "DF__mmwdr__isactive__6FD9761E") @db.TinyInt
  timestamp String  @db.Char(10)
  mmctc     mmctc[]
}

model mmyfp {
  keymmyfp   String  @id(map: "pkmmyfp") @db.Char(15)
  year       Int     @unique(map: "akmmyfp") @default(0, map: "DF__mmyfp__year__2833EAE3") @db.SmallInt
  feeprcnt   Decimal @default(0, map: "DF__mmyfp__feeprcnt__29280F1C") @db.Decimal(5, 2)
  maxtaxval  Float   @default(0, map: "DF__mmyfp__maxtaxval__2A1C3355") @db.Money
  fixmembfee Float   @default(0, map: "DF__mmyfp__fixmembfe__2B10578E") @db.Money
  minservfee Float   @default(0, map: "DF__mmyfp__minservfe__2C047BC7") @db.Money
  maxservfee Float   @default(0, map: "DF__mmyfp__maxservfe__2CF8A000") @db.Money
  propserfee Float   @default(0, map: "DF__mmyfp__propserfe__2DECC439") @db.Money
  fixservfee Float   @default(0, map: "DF__mmyfp__fixservfe__2EE0E872") @db.Money
  propfee    Float   @default(0, map: "DF__mmyfp__propfee__2FD50CAB") @db.Money
  timestamp  String  @db.Char(10)
  mmcaf      mmcaf[]
  mmfxf      mmfxf[]
  mmhsf      mmhsf[]
  mmsmp      mmsmp[]
  mmtaf      mmtaf[]
}

model nybks {
  keynybks  String  @id(map: "pknybks") @db.Char(15)
  code      String  @unique(map: "aknybks") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  nycty     nycty[]
}

model nycty {
  keynycty  String  @id(map: "pknycty") @db.Char(15)
  keynybks  String? @db.Char(15)
  keynysys  String  @db.Char(15)
  code      String  @db.VarChar(30)
  caption   String? @db.VarChar(60)
  timestamp String  @db.Char(10)
  nybks     nybks?  @relation(fields: [keynybks], references: [keynybks], onUpdate: NoAction, map: "fknyntykeynybks ")
  nysys     nysys   @relation(fields: [keynysys], references: [keynysys], onUpdate: NoAction, map: "fknyntykeynysys ")
  nycyl     nycyl[]
  nykop     nykop[]

  @@index([keynybks], map: "fknyctynybks")
  @@index([keynysys], map: "fknyctynysys")
}

model nycyl {
  keynycyl  String    @id(map: "pknycyl") @db.Char(15)
  keycmobj  String?   @db.Char(15)
  keynycty  String    @db.Char(15)
  code      String    @db.VarChar(30)
  caption   String?   @db.VarChar(30)
  anvand    Int       @default(0, map: "DF__nycyl__anvand__6428A725") @db.TinyInt
  kasserad  Int       @default(0, map: "DF__nycyl__kasserad__651CCB5E") @db.TinyInt
  saknad    Int       @default(0, map: "DF__nycyl__saknad__6610EF97") @db.TinyInt
  extrabest Int       @default(0, map: "DF__nycyl__extrabest__670513D0") @db.TinyInt
  tillvdat  DateTime? @db.DateTime
  anvdat    DateTime? @db.DateTime
  placering String?   @db.VarChar(60)
  timestamp String    @db.Char(10)
  cmobj     cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fknycylkeycmobj ")
  nycty     nycty     @relation(fields: [keynycty], references: [keynycty], onUpdate: NoAction, map: "fknycylkeynycty ")

  @@index([keycmobj], map: "fknycylcmobj")
  @@index([keynycty], map: "fknycylnycty")
}

model nykni {
  keynykni  String  @id(map: "pknykni") @db.Char(15)
  keynyknt  String? @db.Char(15)
  code      String  @unique(map: "aknykni") @db.VarChar(30)
  caption   String? @db.VarChar(30)
  placering String? @db.VarChar(60)
  timestamp String  @db.Char(10)
  nyknt     nyknt?  @relation(fields: [keynyknt], references: [keynyknt], onUpdate: NoAction, map: "fknyknikeynyknt ")

  @@index([keynyknt], map: "fknykninyknt")
}

model nyknn {
  keynyknn  String  @id(map: "PK__nyknn__76B698BF") @db.Char(15)
  keynykni  String  @db.Char(15)
  keynynty  String  @db.Char(15)
  keynynyc  String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keynykni], map: "fknyknnnykni")
  @@index([keynynty], map: "fknyknnnynty")
  @@index([keynynyc], map: "fknyknnnynyc")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model nyknn_PA210426 {
  keynyknn  String  @db.Char(15)
  keynykni  String  @db.Char(15)
  keynynty  String  @db.Char(15)
  keynynyc  String? @db.Char(15)
  timestamp String? @db.Char(10)

  @@ignore
}

model nyknt {
  keynyknt  String  @id(map: "pknyknt") @db.Char(15)
  code      String  @unique(map: "aknyknt") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  nykni     nykni[]
}

model nykop {
  keynykop  String @id(map: "pknykop") @db.Char(15)
  keynynty  String @db.Char(15)
  keynycty  String @db.Char(15)
  timestamp String @db.Char(10)
  nycty     nycty  @relation(fields: [keynycty], references: [keynycty], onUpdate: NoAction, map: "fknykopkeynycty ")
  nynty     nynty  @relation(fields: [keynynty], references: [keynynty], onUpdate: NoAction, map: "fknykopkeynynty ")

  @@index([keynycty], map: "fknykopnycty")
  @@index([keynynty], map: "fknykopnynty")
}

model nyktx {
  keynyktx  String @id(map: "pknyktx") @db.Char(15)
  caption   String @unique(map: "aknyktx1") @db.VarChar(30)
  type      Int    @default(1, map: "DF__nyktx__type__72B5E2C9") @db.TinyInt
  text      String @db.VarChar(Max)
  timestamp String @db.Char(10)
}

model nynty {
  keynynty  String  @id(map: "PK__nynty__7A8729A3") @db.Char(15)
  keynysys  String  @db.Char(15)
  keynybks  String? @db.Char(15)
  code      String  @db.Char(30)
  caption   String? @db.Char(30)
  pris      Float?  @db.Money
  hnyckel   Int     @db.TinyInt
  timestamp String  @db.Char(10)
  nykop     nykop[]
  nytyl     nytyl[]

  @@index([keynybks], map: "fknyntynybks")
  @@index([keynysys], map: "fknyntynysys")
}

model nynyc {
  keynynyc  String    @id(map: "pknynyc") @db.Char(15)
  keynynty  String    @db.Char(15)
  keynyrer  String?   @db.Char(15)
  code      String    @db.VarChar(10)
  caption   String?   @db.VarChar(60)
  utlanad   Int       @db.TinyInt
  kasserad  Int       @db.TinyInt
  saknad    Int       @db.TinyInt
  extrabest Int       @db.TinyInt
  ejlev     Int       @db.TinyInt
  tillvdat  DateTime? @db.DateTime
  placering String?   @db.VarChar(60)
  timestamp String    @db.Char(10)

  @@index([keynynty], map: "fknynycnynty")
  @@index([keynyrer], map: "fknynycnyrer")
}

model nyreh {
  keynyreh  String    @id(map: "PK__nyreh__11CA81AE") @db.Char(15)
  keynysys  String    @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmctc2 String?   @db.Char(15)
  keycmctc3 String    @db.Char(15)
  keynyktx  String    @db.Char(15)
  keynyktx2 String?   @db.Char(15)
  code      String    @db.Char(10)
  caption   String?   @db.Char(30)
  bestdat   DateTime  @db.DateTime
  levdat    DateTime? @db.DateTime
  extraavg  Float     @db.Money
  status    Int       @db.TinyInt
  timestamp String    @db.Char(10)

  @@index([keycmctc], map: "fknyrehcmctc")
  @@index([keycmctc2], map: "fknyrehcmctc2")
  @@index([keycmctc3], map: "fknyrehcmctc3")
  @@index([keynyktx], map: "fknyrehnyktx")
  @@index([keynyktx2], map: "fknyrehnyktx2")
  @@index([keynysys], map: "fknyrehnysys")
}

model nyrer {
  keynyrer  String @id(map: "PK__nyrer__13B2CA20") @db.Char(15)
  keynyreh  String @db.Char(15)
  keynynty  String @db.Char(15)
  antal     Int?   @db.SmallInt
  kodlen    Int    @db.TinyInt
  intervall String @db.Char(30)
  levererad Int    @db.TinyInt
  pris      Float  @db.Money
  timestamp String @db.Char(10)

  @@index([keynynty], map: "fknyrernynty")
  @@index([keynyreh], map: "fknyrernyreh")
}

model nysys {
  keynysys                     String    @id(map: "pknysys") @db.Char(15)
  keynysyt                     String?   @db.Char(15)
  keycmobj                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmctc3                    String?   @db.Char(15)
  code                         String    @db.VarChar(30)
  caption                      String?   @db.VarChar(30)
  fabrikat                     String?   @db.VarChar(30)
  mottagdat                    DateTime? @db.Date
  active                       Int       @default(1, map: "DF__nysys__active__348700B3") @db.TinyInt
  timestamp                    String    @db.Char(10)
  nycty                        nycty[]
  cmctc_nysys_keycmctcTocmctc  cmctc?    @relation("nysys_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fknysyskeycmctc")
  cmctc_nysys_keycmctc2Tocmctc cmctc?    @relation("nysys_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fknysyskeycmctc2")
  cmctc_nysys_keycmctc3Tocmctc cmctc?    @relation("nysys_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fknysyskeycmctc3")
  cmobj                        cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fknysyskeycmobj ")
  nysyt                        nysyt?    @relation(fields: [keynysyt], references: [keynysyt], onDelete: NoAction, onUpdate: NoAction, map: "fknysyskeynysyt ")

  @@index([keycmctc], map: "fknysyscmctc")
  @@index([keycmctc2], map: "fknysyscmctc2")
  @@index([keycmctc3], map: "fknysyscmctc3")
  @@index([keycmobj], map: "fknysyscmobj")
  @@index([keynysyt], map: "fknysysnysyt")
}

model nysyt {
  keynysyt  String  @id(map: "pknysyt") @db.Char(15)
  code      String  @unique(map: "aknysyt") @db.VarChar(30)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  nysys     nysys[]
}

model nytyl {
  keynytyl  String @id(map: "pknytyl") @db.Char(15)
  keynynty  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fknytylkeycmobj")
  nynty     nynty  @relation(fields: [keynynty], references: [keynynty], onDelete: Cascade, onUpdate: NoAction, map: "fknytylkeynynty ")

  @@unique([keynynty, keycmobj], map: "aknytyl")
  @@index([keycmobj], map: "fknytylcmobj")
}

model nyutl {
  keynyutl  String    @id(map: "pknyutl") @db.Char(15)
  keyhyobj  String?   @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmctc2 String?   @db.Char(15)
  keynyktx  String?   @db.Char(15)
  keysyusr  String?   @db.Char(15)
  kvittens  String    @unique(map: "aknyutl1") @db.VarChar(30)
  utlandat  DateTime  @db.DateTime
  signut    String    @db.VarChar(80)
  senastdat DateTime? @db.DateTime
  referens  String?   @db.VarChar(30)
  status    String?   @db.Char(1)
  timestamp String    @db.Char(10)

  @@index([keycmctc], map: "fknyutlcmctc")
  @@index([keycmctc2], map: "fknyutlcmctc2")
  @@index([keyhyobj], map: "fknyutlhyobj")
  @@index([keynyktx], map: "fknyutlnyktx")
  @@index([keysyusr], map: "fknyutlsyusr")
}

model nyutn {
  keynyutn  String    @id(map: "pknyutn") @db.Char(15)
  keynyutl  String    @db.Char(15)
  keynykni  String?   @db.Char(15)
  keynynyc  String?   @db.Char(15)
  keysyusr  String?   @db.Char(15)
  knippa    Int       @default(0, map: "DF__nyutn__knippa__777A97E6") @db.TinyInt
  aterdat   DateTime? @db.DateTime
  signater  String?   @db.VarChar(80)
  timestamp String    @db.Char(10)

  @@index([keynykni], map: "fknyutnnykni")
  @@index([keynynyc], map: "fknyutnnynyc")
  @@index([keynyutl], map: "fknyutnnyutl")
  @@index([keysyusr], map: "fknyutnsyusr")
}

model pdaci {
  keypdaci   String    @id(map: "pkpdaci") @db.Char(15)
  keyhyobj   String    @db.Char(15)
  keypddpd   String    @db.Char(15)
  invamount  Float?    @db.Money
  finalded   Int       @default(1, map: "DF__pdaci__finalded__076AEA84") @db.TinyInt
  tempdeduct Int       @default(0, map: "DF__pdaci__tempdeduc__085F0EBD") @db.TinyInt
  tempdfrom  DateTime? @db.Date
  tempdto    DateTime? @db.Date
  tmpfamtset Int       @default(0, map: "DF__pdaci__tmpfamtse__095332F6") @db.TinyInt
  timestamp  String    @db.Char(10)
  hyobj      hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkpdacikeyhyobj")
  pddpd      pddpd     @relation(fields: [keypddpd], references: [keypddpd], onUpdate: NoAction, map: "fkpdacikeypddpd")
  pdacr      pdacr[]

  @@index([keyhyobj], map: "fkpdacihyobj")
  @@index([keypddpd], map: "fkpdacipddpd")
}

model pdacr {
  keypdacr   String  @id(map: "pkpdacr") @db.Char(15)
  keypdaci   String  @db.Char(15)
  keypdair   String? @db.Char(15)
  keycmart   String? @db.Char(15)
  orgamount  Float   @db.Money
  amount     Float   @db.Money
  pinvamount Float   @db.Money
  dedstatus  Int     @default(0, map: "DF__pdacr__dedstatus__69EF9636") @db.TinyInt
  ownvobj    Float?  @db.Money
  ownvobje   Float?  @db.Money
  ownnvobj   Float?  @db.Money
  ownnvobje  Float?  @db.Money
  afpercvat  Float?  @db.Money
  afpercvato Float?  @db.Money
  tencostnv  Float?  @db.Money
  bnkrcostv  Float?  @db.Money
  bnkrcostnv Float?  @db.Money
  timestamp  String  @db.Char(10)
  cmart      cmart?  @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkpdacrkeycmart")
  pdaci      pdaci   @relation(fields: [keypdaci], references: [keypdaci], onDelete: Cascade, onUpdate: NoAction, map: "fkpdacrkeypdaci")
  pdair      pdair?  @relation(fields: [keypdair], references: [keypdair], onDelete: NoAction, onUpdate: NoAction, map: "fkpdacrkeypdair")

  @@index([keycmart], map: "fkpdacrcmart")
  @@index([keypdaci], map: "fkpdacrpdaci")
  @@index([keypdair], map: "fkpdacrpdair")
}

model pdadv {
  keypdadv  String   @id(map: "pkpdadv") @db.Char(15)
  keyhyobj  String   @db.Char(15)
  keycmart  String   @db.Char(15)
  fromdate  DateTime @db.Date
  todate    DateTime @db.Date
  amount    Float    @default(0, map: "DF__pdadv__amount__2ABD9F57") @db.Money
  timestamp String   @db.Char(10)
  cmart     cmart    @relation(fields: [keycmart], references: [keycmart], onDelete: Cascade, onUpdate: NoAction, map: "fkpdadvkeycmart")
  hyobj     hyobj    @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkpdadvkeyhyobj")

  @@index([keycmart], map: "fkpdadvcmart")
  @@index([keyhyobj], map: "fkpdadvhyobj")
}

model pdaip {
  keypdaip   String   @id(map: "pkpdaip") @db.Char(15)
  keypdaix   String   @db.Char(15)
  fdate      DateTime @db.Date
  tdate      DateTime @db.Date
  prelamount Float    @db.Money
  orgamount  Float    @db.Money
  amount     Float    @db.Money
  dramount   Float    @db.Money
  dedstatus  Int      @default(0, map: "DF__pdaip__dedstatus__2EBD6D17") @db.TinyInt
  invamount  Float?   @db.Money
  timestamp  String   @db.Char(10)
  pdaix      pdaix    @relation(fields: [keypdaix], references: [keypdaix], onDelete: Cascade, map: "fkpdaipkeypdaix ")

  @@index([keypdaix], map: "fkpdaippdaix")
}

model pdair {
  keypdair                     String    @id(map: "pkpdair") @db.Char(15)
  keypdaix                     String    @db.Char(15)
  keyhying                     String?   @db.Char(15)
  keyhying2                    String?   @db.Char(15)
  year                         Int       @db.SmallInt
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime? @db.DateTime
  weight                       Decimal   @db.Decimal(7, 2)
  prelamount                   Float     @db.Money
  orgamount                    Float     @db.Money
  amount                       Float     @db.Money
  dramount                     Float     @db.Money
  vacantcst                    Float     @default(0, map: "DF__pdair__vacantcst__3C28227B") @db.Money
  oorgamount                   Float     @default(0, map: "DF__pdair__oorgamoun__3D1C46B4") @db.Money
  oamount                      Float     @default(0, map: "DF__pdair__oamount__3E106AED") @db.Money
  ovacantcst                   Float     @default(0, map: "DF__pdair__ovacantcs__3F048F26") @db.Money
  dedstatus                    Int       @default(0, map: "DF__pdair__dedstatus__3FF8B35F") @db.TinyInt
  fixedamnt                    Float?    @db.Money
  percamount                   Decimal?  @db.Decimal(5, 2)
  weightown                    Decimal?  @db.Decimal(7, 2)
  pctowner                     Decimal   @default(0, map: "DF__pdair__pctowner__40ECD798") @db.Decimal(5, 2)
  maxamount                    Float?    @db.Money
  vacweight                    Decimal?  @db.Decimal(7, 2)
  vacdistrib                   Decimal?  @db.Decimal(7, 2)
  invamount                    Float?    @db.Money
  timestamp                    String    @db.Char(10)
  pdacr                        pdacr[]
  hying_pdair_keyhyingTohying  hying?    @relation("pdair_keyhyingTohying", fields: [keyhying], references: [keyhying], onDelete: NoAction, onUpdate: NoAction, map: "fkpdairkeyhying")
  hying_pdair_keyhying2Tohying hying?    @relation("pdair_keyhying2Tohying", fields: [keyhying2], references: [keyhying], onDelete: NoAction, onUpdate: NoAction, map: "fkpdairkeyhying2")
  pdaix                        pdaix     @relation(fields: [keypdaix], references: [keypdaix], onDelete: Cascade, map: "fkpdairkeypdaix ")

  @@index([keyhying], map: "fkpdairhying")
  @@index([keyhying2], map: "fkpdairhying2")
  @@index([keypdaix], map: "fkpdairpdaix")
  @@index([keypdaix, fdate, weight], map: "inpdair_2CS0SG58E")
}

model pdaix {
  keypdaix  String  @id(map: "pkpdaix") @db.Char(15)
  keycmart  String  @db.Char(15)
  keycmobj  String  @db.Char(15)
  timestamp String  @db.Char(10)
  pdaip     pdaip[]
  pdair     pdair[]

  @@unique([keycmart, keycmobj], map: "akpdaix1")
  @@index([keycmart], map: "fkpdaixcmart")
  @@index([keycmobj], map: "fkpdaixcmobj")
}

model pdbuh {
  keypdbuh  String @id(map: "PK__pdbuh__072DC301") @db.Char(15)
  keycmcmp  String @db.Char(15)
  keyrebud  String @db.Char(15)
  year      Int    @db.SmallInt
  partno    Int    @default(0, map: "DF__pdbuh__partno__0821E73A") @db.TinyInt
  part      String @db.Char(10)
  timestamp String @db.Char(10)

  @@index([keycmcmp], map: "fkpdbuhcmcmp")
}

model pdbur {
  keypdbur  String @id(map: "pkpdbur") @db.Char(15)
  keypdbuh  String @db.Char(15)
  bu        Float  @default(0, map: "DF__pdbur__bu__09992713") @db.Money
  orgbu     Float  @default(0, map: "DF__pdbur__orgbu__0A8D4B4C") @db.Money
  partno    Int    @default(0, map: "DF__pdbur__partno__0B816F85") @db.TinyInt
  part      String @db.Char(10)
  timestamp String @db.Char(10)

  @@unique([keypdbuh, partno, part], map: "akpdbur1")
  @@index([keypdbuh], map: "fkpdburpdbuh")
}

model pdbut {
  keypdbut  String  @id(map: "pkpdbut") @unique(map: "akpdbut1") @db.Char(15)
  keypdbur  String  @db.Char(15)
  type      Int     @default(0, map: "DF__pdbut__type__679914CA") @db.TinyInt
  period    Int     @db.TinyInt
  verid     String? @db.Char(30)
  text      String  @db.Char(40)
  amount    Float   @default(0, map: "DF__pdbut__amount__688D3903") @db.Money
  orgamount Float   @default(0, map: "DF__pdbut__orgamount__69815D3C") @db.Money
  timestamp String  @db.Char(10)

  @@index([keypdbur], map: "fkpdbutpdbur")
}

model pddcr {
  keypddcr  String   @id(map: "pkpddcr") @db.Char(15)
  keybaclh  String   @db.Char(15)
  keycmart  String   @db.Char(15)
  fromdate  DateTime @db.Date
  todate    DateTime @db.Date
  year      Int      @db.SmallInt
  cost      Float    @default(0, map: "DF__pddcr__cost__423BC321") @db.Money
  timestamp String   @db.Char(10)
  baclh     baclh    @relation(fields: [keybaclh], references: [keybaclh], onDelete: Cascade, map: "fkpddcrkeybaclh")
  cmart     cmart    @relation(fields: [keycmart], references: [keycmart], map: "fkpddcrkeycmart")

  @@index([keybaclh], map: "fkpddcrbaclh")
  @@index([keycmart], map: "fkpddcrcmart")
}

model pdddc {
  keypdddc   String @id(map: "pkpdddc") @db.Char(15)
  keypddpd   String @db.Char(15)
  keycmart   String @db.Char(15)
  keycmobj   String @db.Char(15)
  debstatus  Int    @default(0, map: "DF__pdddc__debstatus__7E2B990D") @db.TinyInt
  orgamount  Float  @db.Money
  amount     Float  @db.Money
  dramount   Float  @db.Money
  vacamount  Float  @db.Money
  oorgamount Float  @db.Money
  oamount    Float  @db.Money
  ovacamount Float  @db.Money
  admfeevo   Float  @db.Money
  timestamp  String @db.Char(10)
  cmart      cmart  @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkpdddckeycmart")
  cmobj      cmobj  @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkpdddckeycmobj")
  pddpd      pddpd  @relation(fields: [keypddpd], references: [keypddpd], onUpdate: NoAction, map: "fkpdddckeypddpd")

  @@index([keycmart], map: "fkpdddccmart")
  @@index([keycmobj], map: "fkpdddccmobj")
  @@index([keypddpd], map: "fkpdddcpddpd")
}

model pdddk {
  keypdddk                     String  @id(map: "pkpdddk") @db.Char(15)
  keycmobj                     String  @db.Char(15)
  keycmart                     String? @db.Char(15)
  keycmvat                     String? @db.Char(15)
  keycmvat2                    String? @db.Char(15)
  keycmvat3                    String? @db.Char(15)
  keycmvat4                    String? @db.Char(15)
  distk1                       String? @db.Char(15)
  distk2                       String? @db.Char(15)
  distk3                       String? @db.Char(15)
  distk4                       String? @db.Char(15)
  isdefault                    Int     @default(0, map: "DF__pdddk__isdefault__58D6F00A") @db.TinyInt
  timestamp                    String  @db.Char(10)
  cmart                        cmart?  @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkpdddkkeycmart ")
  cmvat_pdddk_keycmvatTocmvat  cmvat?  @relation("pdddk_keycmvatTocmvat", fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkpdddkkeycmvat ")
  cmvat_pdddk_keycmvat2Tocmvat cmvat?  @relation("pdddk_keycmvat2Tocmvat", fields: [keycmvat2], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkpdddkkeycmvat2 ")
  cmvat_pdddk_keycmvat3Tocmvat cmvat?  @relation("pdddk_keycmvat3Tocmvat", fields: [keycmvat3], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkpdddkkeycmvat3 ")
  cmvat_pdddk_keycmvat4Tocmvat cmvat?  @relation("pdddk_keycmvat4Tocmvat", fields: [keycmvat4], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkpdddkkeycmvat4 ")

  @@index([keycmvat], map: "fkpdddkcmvat")
  @@index([keycmvat2], map: "fkpdddkcmvat2")
  @@index([keycmvat3], map: "fkpdddkcmvat3")
  @@index([keycmvat4], map: "fkpdddkcmvat4")
}

model pddpd {
  keypddpd  String   @id(map: "pkpddpd") @db.Char(15)
  keycmobj  String   @db.Char(15)
  fdate     DateTime @db.Date
  tdate     DateTime @db.Date
  timestamp String   @db.Char(10)
  pdaci     pdaci[]
  pdddc     pdddc[]
  cmobj     cmobj    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkpddpdkeycmobj ")
  pdreh     pdreh[]
  pdtdn     pdtdn[]

  @@index([keycmobj], map: "fkpddpdcmobj")
}

model pddrl {
  keypddrl  String    @id(map: "pkpddrl") @db.Char(15)
  keycmobj  String    @db.Char(15)
  keycmart  String?   @db.Char(15)
  recipient Int       @default(0, map: "DF__pddrl__recipient__347126C3") @db.TinyInt
  calctype  Int       @default(0, map: "DF__pddrl__calctype__35654AFC") @db.TinyInt
  rangefrom Decimal?  @db.Decimal(7, 2)
  rangeto   Decimal?  @db.Decimal(7, 2)
  validfrom DateTime? @db.DateTime
  validto   DateTime? @db.DateTime
  prnt      Decimal   @db.Decimal(7, 2)
  sortorder Int
  timestamp String    @db.Char(10)
  cmart     cmart?    @relation(fields: [keycmart], references: [keycmart], onDelete: Cascade, onUpdate: NoAction, map: "fkpddrlkeycmart")
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkpddrlkeycmobj")

  @@index([keycmart], map: "fkpddrlkeycmart")
  @@index([keycmobj], map: "fkpddrlkeycmobj")
}

model pddsr {
  keypddsr  String    @id(map: "pkpddsr") @db.Char(15)
  keypddst  String    @db.Char(15)
  keyhyand  String?   @db.Char(15)
  keycmart  String    @db.Char(15)
  prelcost  Float     @db.Money
  fdate     DateTime  @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmart     cmart     @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkpddsrkeycmart")

  @@index([keycmart], map: "fkpddsrcmart")
  @@index([keyhyand], map: "fkpddsrhyand")
  @@index([keypddst], map: "fkpddsrpddst")
}

model pddst {
  keypddst   String   @id(map: "pkpddst") @db.Char(15)
  keycmobj   String   @db.Char(15)
  prelcalc   Int      @default(0, map: "DF__pddst__prelcalc__4C5E8A44") @db.TinyInt
  dedcalc    Int      @default(0, map: "DF__pddst__dedcalc__4D52AE7D") @db.TinyInt
  dedcalcval Decimal? @db.Decimal(9, 2)
  defexec    Int      @db.TinyInt
  fdate      DateTime @db.Date
  tdate      DateTime @db.Date
  timestamp  String   @db.Char(10)

  @@index([keycmobj], map: "fkpddstcmobj")
}

model pdreh {
  keypdreh  String @id(map: "pkpdreh") @db.Char(15)
  keycmcmp  String @db.Char(15)
  keypddpd  String @db.Char(15)
  year      Int    @db.SmallInt
  partno    Int    @db.TinyInt
  part      String @db.Char(10)
  status    Int    @default(0, map: "DF__pdreh__status__502F1B28") @db.TinyInt
  timestamp String @db.Char(10)
  pddpd     pddpd  @relation(fields: [keypddpd], references: [keypddpd], onUpdate: NoAction, map: "fkpdrehkeypddpd ")

  @@index([keycmcmp], map: "fkpdrehcmcmp")
  @@index([keypddpd], map: "fkpdrehpddpd")
}

model pdrek {
  keypdrek  String @id(map: "pkpdrek") @db.Char(15)
  keycmart  String @db.Char(15)
  year      Int    @db.SmallInt
  partno    Int    @db.TinyInt
  part      String @db.Char(10)
  timestamp String @db.Char(10)

  @@index([keycmart], map: "fkpdrekcmart")
}

model pdrer {
  keypdrer  String @id(map: "pkpdrer") @db.Char(15)
  keypdreh  String @db.Char(15)
  orgamount Float  @default(0, map: "DF__pdrer__orgamount__4B86E601") @db.Money
  amount    Float  @default(0, map: "DF__pdrer__amount__4C7B0A3A") @db.Money
  partno    Int    @default(0, map: "DF__pdrer__partno__4D6F2E73") @db.TinyInt
  part      String @db.Char(10)
  timestamp String @db.Char(10)

  @@unique([keypdreh, partno, part], map: "akpdrer1")
  @@index([keypdreh], map: "fkpdrerpdreh")
}

model pdret {
  keypdret  String  @id(map: "pkpdret") @db.Char(15)
  keypdrer  String  @db.Char(15)
  type      Int     @default(0, map: "DF__pdret__type__504B9B1E") @db.TinyInt
  period    Int     @db.TinyInt
  verid     String? @db.Char(30)
  text      String  @db.Char(40)
  amount    Float   @default(0, map: "DF__pdret__amount__513FBF57") @db.Money
  orgamount Float   @default(0, map: "DF__pdret__orgamount__5233E390") @db.Money
  timestamp String  @db.Char(10)

  @@index([keypdrer], map: "fkpdretpdrer")
}

model pdtdn {
  keypdtdn   String   @id(map: "pkpdtdn") @db.Char(15)
  keyhyobj   String   @db.Char(15)
  keypddpd   String   @db.Char(15)
  isfinalded Int      @default(0, map: "DF__pdtdn__isfinalde__53FFAC0C") @db.TinyInt
  fdate      DateTime @db.Date
  tdate      DateTime @db.Date
  timestamp  String   @db.Char(10)
  hyobj      hyobj    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkpdtdnkeyhyobj")
  pddpd      pddpd    @relation(fields: [keypddpd], references: [keypddpd], onUpdate: NoAction, map: "fkpdtdnkeypddpd ")

  @@index([keyhyobj], map: "fkpdtdnhyobj")
  @@index([keypddpd], map: "fkpdtdnpddpd")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Pergrund {
  fstcode   String  @db.Char(5)
  hyintcode String  @db.Char(6)
  keycmtep  String  @db.Char(15)
  text      String? @db.VarChar(20)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PerGrundDistinct {
  fstcode   String  @db.Char(5)
  hyintcode String  @db.Char(6)
  keycmtep  String  @db.Char(15)
  text      String? @db.VarChar(20)

  @@ignore
}

model pracc {
  keypracc  String @id(map: "pkpracc") @db.Char(15)
  keyprprj  String @db.Char(15)
  keysygrp  String @db.Char(15)
  timestamp String @db.Char(10)
  prprj     prprj  @relation(fields: [keyprprj], references: [keyprprj], onDelete: Cascade, onUpdate: NoAction, map: "fkpracckeyprprj ")

  @@unique([keyprprj, keysygrp], map: "akpracc")
  @@index([keysygrp], map: "fkpraccsygrp")
}

model pract {
  keypract  String    @id(map: "pkpract") @db.Char(15)
  keyprprj  String?   @db.Char(15)
  keyprppr  String?   @db.Char(15)
  keycmctc  String    @db.Char(15)
  keycmart  String    @db.Char(15)
  keyprmtr  String?   @db.Char(15)
  debit     Int       @default(0, map: "DF__pract__debit__256C5A9D") @db.TinyInt
  starttime DateTime  @db.DateTime
  stoptime  DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmart     cmart     @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkpractkeycmart")
  cmctc     cmctc     @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkpractkeycmctc")
  prmtr     prmtr?    @relation(fields: [keyprmtr], references: [keyprmtr], onUpdate: NoAction, map: "fkpractkeyprmtr ")
  prppr     prppr?    @relation(fields: [keyprppr], references: [keyprppr], onDelete: Cascade, onUpdate: NoAction, map: "fkpractkeyprppr ")
  prprj     prprj?    @relation(fields: [keyprprj], references: [keyprprj], onDelete: NoAction, onUpdate: NoAction, map: "fkpractkeyprprj")

  @@index([keycmart], map: "fkpractcmart")
  @@index([keycmctc], map: "fkpractcmctc")
  @@index([keyprmtr], map: "fkpractprmtr")
  @@index([keyprppr], map: "fkpractprppr")
  @@index([keyprprj], map: "fkpractprprj")
}

model praoc {
  keypraoc  String @id(map: "pkpraoc") @db.Char(15)
  keycmart  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  cmart     cmart  @relation(fields: [keycmart], references: [keycmart], onDelete: Cascade, onUpdate: NoAction, map: "fkpraockeycmart")
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkpraockeycmobj")

  @@unique([keycmart, keycmobj], map: "akpraoc1")
  @@index([keycmart], map: "fkpraoccmart")
  @@index([keycmobj], map: "fkpraoccmobj")
}

model prarc {
  keyprarc  String @id(map: "pkprarc") @db.Char(15)
  keycmart  String @db.Char(15)
  keycmart2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmart], map: "fkprarccmart")
  @@index([keycmart2], map: "fkprarccmart2")
}

model prark {
  keyprark   String    @id(map: "pkprark") @db.Char(15)
  keycmart   String?   @db.Char(15)
  keyprprj   String?   @db.Char(15)
  keycmctc   String?   @db.Char(15)
  price      Float?    @db.Money
  priceint   Float?    @db.Money
  pricebuy   Float?    @db.Money
  addprcnt   Float     @default(0, map: "DF__prark__addprcnt__3EE49395") @db.Money
  addprcntlr Float     @default(0, map: "DF__prark__addprcntl__3FD8B7CE") @db.Money
  debit      Int       @default(1, map: "DF__prark__debit__40CCDC07") @db.TinyInt
  debitlock  Int       @default(0, map: "DF__prark__debitlock__41C10040") @db.TinyInt
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  cmart      cmart?    @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkprarkkeycmart")
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkprarkkeycmctc")
  prprj      prprj?    @relation(fields: [keyprprj], references: [keyprprj], onDelete: Cascade, onUpdate: NoAction, map: "fkprarkkeyprprj")

  @@index([keycmart], map: "fkprarkcmart")
  @@index([keycmctc], map: "fkprarkcmctc")
  @@index([keyprprj], map: "fkprarkprprj")
}

model prath {
  keyprath  String  @id(map: "pkprath") @db.Char(15)
  caption   String  @unique(map: "akprath") @db.VarChar(60)
  descript  String  @db.VarChar(600)
  timestamp String  @db.Char(10)
  pratr     pratr[]
}

model pratr {
  keypratr  String  @id(map: "pkpratr") @db.Char(15)
  keyprath  String  @db.Char(15)
  keycmart  String  @db.Char(15)
  vatprcnt  Decimal @default(0, map: "DF__pratr__vatprcnt__078E915D") @db.Decimal(8, 2)
  timestamp String  @db.Char(10)
  prath     prath   @relation(fields: [keyprath], references: [keyprath], onDelete: Cascade, onUpdate: NoAction, map: "fkpratrkeyprath ")

  @@unique([keyprath, keycmart], map: "akpratr")
  @@index([keycmart], map: "fkpratrcmart")
  @@index([keyprath], map: "fkpratrprath")
}

model prcat {
  keyprcat  String  @id(map: "pkprcat") @db.Char(15)
  caption   String  @unique(map: "akprcat") @db.VarChar(60)
  freecode  Int     @default(0, map: "DF__prcat__freecode__0F3AA01D") @db.TinyInt
  cntalias  String? @db.VarChar(5)
  timestamp String  @db.Char(10)
  hymrp     hymrp[]
  prprj     prprj[]
  prtcc     prtcc[]
  prtyp     prtyp[]
}

model prclc {
  keyprclc  String    @id(map: "pkprclc") @db.Char(15)
  keyprclr  String    @db.Char(15)
  keydbtbl  String    @db.Char(15)
  keycode   String    @db.Char(15)
  status    Int       @default(0, map: "DF__prclc__status__7C3F4D03") @db.TinyInt
  compdate  DateTime? @db.DateTime
  comment   String?   @db.VarChar(1000)
  timestamp String    @db.Char(10)

  @@index([keycode], map: "fkprclccode")
  @@index([keydbtbl], map: "fkprclcdbtbl")
  @@index([keyprclr], map: "fkprclcprclr")
}

model prclh {
  keyprclh  String  @id(map: "pkprclh") @db.Char(15)
  func      Int     @default(0, map: "DF__prclh__func__76E6A812") @db.TinyInt
  caption   String  @unique(map: "akprclh") @db.VarChar(100)
  descript  String  @db.VarChar(1000)
  clallrows Int     @default(1, map: "DF__prclh__clallrows__77DACC4B") @db.TinyInt
  timestamp String  @db.Char(10)
  bkclo     bkclo[]
  bkkty     bkkty[]
  prppr     prppr[]
  prprj     prprj[]
  prtyp     prtyp[]
}

model prclr {
  keyprclr  String  @id(map: "pkprclr") @db.Char(15)
  keyprclh  String  @db.Char(15)
  caption   String  @db.VarChar(100)
  timestamp String  @db.Char(10)
  bkclr     bkclr[]

  @@index([keyprclh], map: "fkprclrprclh")
}

model prdat {
  keyprdat  String   @id(map: "pkprdat") @db.Char(15)
  keyprpdp  String   @db.Char(15)
  keyprder  String   @db.Char(15)
  dateval   DateTime @db.Date
  timestamp String   @db.Char(10)
  prder     prder    @relation(fields: [keyprder], references: [keyprder], onUpdate: NoAction, map: "fkprdatkeyprder")
  prpdp     prpdp    @relation(fields: [keyprpdp], references: [keyprpdp], onDelete: Cascade, onUpdate: NoAction, map: "fkprdatkeyprpdp ")

  @@unique([keyprpdp, keyprder], map: "akprdat")
  @@index([keyprder], map: "fkprdatprder")
}

model prdct {
  keyprdct                     String  @id(map: "pkprdct") @db.Char(15)
  keycmart                     String? @db.Char(15)
  keycmart2                    String? @db.Char(15)
  keycmart3                    String? @db.Char(15)
  keycmart4                    String? @db.Char(15)
  keycmctc                     String? @db.Char(15)
  caption                      String  @unique(map: "akprdct") @db.VarChar(60)
  normprcnt                    Decimal @default(0, map: "DF__prdct__normprcnt__3D0F0C38") @db.Decimal(5, 2)
  timestamp                    String  @db.Char(10)
  aoupp                        aoupp[]
  cmart_prdct_keycmartTocmart  cmart?  @relation("prdct_keycmartTocmart", fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkprdctkeycmart")
  cmart_prdct_keycmart2Tocmart cmart?  @relation("prdct_keycmart2Tocmart", fields: [keycmart2], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkprdctkeycmart2")
  cmart_prdct_keycmart3Tocmart cmart?  @relation("prdct_keycmart3Tocmart", fields: [keycmart3], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkprdctkeycmart3")
  cmart_prdct_keycmart4Tocmart cmart?  @relation("prdct_keycmart4Tocmart", fields: [keycmart4], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkprdctkeycmart4")
  cmctc                        cmctc?  @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprdctkeycmctc")
  tvprd                        tvprd[]
  tvscr                        tvscr[]

  @@index([keycmart], map: "fkprdctcmart")
  @@index([keycmart2], map: "fkprdctcmart2")
  @@index([keycmart3], map: "fkprdctcmart3")
  @@index([keycmart4], map: "fkprdctcmart4")
}

model prdel {
  keyprdel  String  @id(map: "pkprdel") @db.Char(15)
  code      String  @db.VarChar(15)
  caption   String  @db.VarChar(50)
  timestamp String  @db.Char(10)
  cmctc     cmctc[]
  prder     prder[]
  prldp     prldp[]
  prpdp     prpdp[]
}

model prder {
  keyprder  String  @id(map: "pkprder") @db.Char(15)
  keyprdel  String  @db.Char(15)
  keyikkat  String? @db.Char(15)
  datetype  Int     @default(0, map: "DF__prder__datetype__36820A3A") @db.TinyInt
  nodays    Int     @default(0, map: "DF__prder__nodays__37762E73") @db.SmallInt
  timestamp String  @db.Char(10)
  prdat     prdat[]
  ikkat     ikkat?  @relation(fields: [keyikkat], references: [keyikkat], onDelete: Cascade, onUpdate: NoAction, map: "fkprderkeyikkat ")
  prdel     prdel   @relation(fields: [keyprdel], references: [keyprdel], onDelete: Cascade, onUpdate: NoAction, map: "fkprderkeyprdel ")

  @@unique([keyikkat, keyprdel], map: "akprder")
  @@index([keyprdel], map: "fkprderprdel")
}

model preta {
  keypreta  String  @id(map: "pkpreta") @db.Char(15)
  caption   String  @unique(map: "akpreta") @db.VarChar(60)
  timestamp String  @db.Char(10)
  prprj     prprj[]
}

model pretb {
  keypretb  String  @id(map: "pkpretb") @db.Char(15)
  caption   String  @unique(map: "akpretb") @db.VarChar(60)
  timestamp String  @db.Char(10)
  prprj     prprj[]
}

model pretc {
  keypretc  String  @id(map: "pkpretc") @db.Char(15)
  caption   String  @unique(map: "akpretc") @db.VarChar(60)
  timestamp String  @db.Char(10)
  prprj     prprj[]
}

model priah {
  keypriah   String    @id(map: "pkpriah") @db.Char(15)
  keyprprj   String    @db.Char(15)
  code       String    @unique(map: "akpriah1") @db.VarChar(25)
  createdate DateTime  @db.Date
  lastdate   DateTime  @db.Date
  cldate     DateTime? @db.Date
  iahstatus  Int       @default(0, map: "DF__priah__iahstatus__7F1BB9AE") @db.TinyInt
  timestamp  String    @db.Char(10)

  @@index([keyprprj], map: "fkpriahprprj")
}

model priar {
  keypriar  String    @id(map: "pkpriar") @db.Char(15)
  keypriah  String    @db.Char(15)
  keyaoupp  String    @db.Char(15)
  iarstatus Int       @default(0, map: "DF__priar__iarstatus__01F82659") @db.TinyInt
  clmessage String    @db.VarChar(2000)
  cldate    DateTime? @db.Date
  timestamp String    @db.Char(10)

  @@index([keyaoupp], map: "fkpriaraoupp")
  @@index([keypriah], map: "fkpriarpriah")
}

model prldp {
  keyprldp  String @id(map: "pkprldp") @db.Char(15)
  keyprdel  String @db.Char(15)
  keycmctc  String @db.Char(15)
  timestamp String @db.Char(10)
  cmctc     cmctc  @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkprldpkeycmctc")
  prdel     prdel  @relation(fields: [keyprdel], references: [keyprdel], onDelete: Cascade, onUpdate: NoAction, map: "fkprldpkeyprdel ")

  @@unique([keyprdel, keycmctc], map: "akprldp")
  @@index([keycmctc], map: "fkprldpcmctc")
}

model prmti {
  keyprmti  String  @id(map: "pkprmti") @db.Char(15)
  year      Int     @db.SmallInt
  month     Int     @db.TinyInt
  accutime  Decimal @db.Decimal(5, 2)
  timestamp String  @db.Char(10)
  prmtk     prmtk[]

  @@unique([year, month], map: "akprmti")
}

model prmtk {
  keyprmtk  String  @id(map: "pkprmtk") @db.Char(15)
  keycmctc  String  @db.Char(15)
  keyprmti  String  @db.Char(15)
  accutime  Decimal @default(0, map: "DF__prmtk__accutime__01468878") @db.Decimal(5, 2)
  d1        Decimal @default(0, map: "DF__prmtk__d1__023AACB1") @db.Decimal(4, 2)
  d2        Decimal @default(0, map: "DF__prmtk__d2__032ED0EA") @db.Decimal(4, 2)
  d3        Decimal @default(0, map: "DF__prmtk__d3__0422F523") @db.Decimal(4, 2)
  d4        Decimal @default(0, map: "DF__prmtk__d4__0517195C") @db.Decimal(4, 2)
  d5        Decimal @default(0, map: "DF__prmtk__d5__060B3D95") @db.Decimal(4, 2)
  d6        Decimal @default(0, map: "DF__prmtk__d6__06FF61CE") @db.Decimal(4, 2)
  d7        Decimal @default(0, map: "DF__prmtk__d7__07F38607") @db.Decimal(4, 2)
  d8        Decimal @default(0, map: "DF__prmtk__d8__08E7AA40") @db.Decimal(4, 2)
  d9        Decimal @default(0, map: "DF__prmtk__d9__09DBCE79") @db.Decimal(4, 2)
  d10       Decimal @default(0, map: "DF__prmtk__d10__0ACFF2B2") @db.Decimal(4, 2)
  d11       Decimal @default(0, map: "DF__prmtk__d11__0BC416EB") @db.Decimal(4, 2)
  d12       Decimal @default(0, map: "DF__prmtk__d12__0CB83B24") @db.Decimal(4, 2)
  d13       Decimal @default(0, map: "DF__prmtk__d13__0DAC5F5D") @db.Decimal(4, 2)
  d14       Decimal @default(0, map: "DF__prmtk__d14__0EA08396") @db.Decimal(4, 2)
  d15       Decimal @default(0, map: "DF__prmtk__d15__0F94A7CF") @db.Decimal(4, 2)
  d16       Decimal @default(0, map: "DF__prmtk__d16__1088CC08") @db.Decimal(4, 2)
  d17       Decimal @default(0, map: "DF__prmtk__d17__117CF041") @db.Decimal(4, 2)
  d18       Decimal @default(0, map: "DF__prmtk__d18__1271147A") @db.Decimal(4, 2)
  d19       Decimal @default(0, map: "DF__prmtk__d19__136538B3") @db.Decimal(4, 2)
  d20       Decimal @default(0, map: "DF__prmtk__d20__14595CEC") @db.Decimal(4, 2)
  d21       Decimal @default(0, map: "DF__prmtk__d21__154D8125") @db.Decimal(4, 2)
  d22       Decimal @default(0, map: "DF__prmtk__d22__1641A55E") @db.Decimal(4, 2)
  d23       Decimal @default(0, map: "DF__prmtk__d23__1735C997") @db.Decimal(4, 2)
  d24       Decimal @default(0, map: "DF__prmtk__d24__1829EDD0") @db.Decimal(4, 2)
  d25       Decimal @default(0, map: "DF__prmtk__d25__191E1209") @db.Decimal(4, 2)
  d26       Decimal @default(0, map: "DF__prmtk__d26__1A123642") @db.Decimal(4, 2)
  d27       Decimal @default(0, map: "DF__prmtk__d27__1B065A7B") @db.Decimal(4, 2)
  d28       Decimal @default(0, map: "DF__prmtk__d28__1BFA7EB4") @db.Decimal(4, 2)
  d29       Decimal @default(0, map: "DF__prmtk__d29__1CEEA2ED") @db.Decimal(4, 2)
  d30       Decimal @default(0, map: "DF__prmtk__d30__1DE2C726") @db.Decimal(4, 2)
  d31       Decimal @default(0, map: "DF__prmtk__d31__1ED6EB5F") @db.Decimal(4, 2)
  timestamp String  @db.Char(10)
  cmctc     cmctc   @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkprmtkkeycmctc")
  prmti     prmti   @relation(fields: [keyprmti], references: [keyprmti], onDelete: Cascade, onUpdate: NoAction, map: "fkprmtkkeyprmti ")

  @@unique([keyprmti, keycmctc], map: "akprmtk1")
  @@index([keycmctc], map: "fkprmtkcmctc")
}

model prmtr {
  keyprmtr                     String    @id(map: "pkprmtr") @db.Char(15)
  keyprprj                     String    @db.Char(15)
  keyprppr                     String?   @db.Char(15)
  keysyusr                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmart                     String?   @db.Char(15)
  keyimial                     String?   @db.Char(15)
  keylrfkh                     String?   @db.Char(15)
  keyrevrr                     String?   @db.Char(15)
  keyskafb                     String?   @db.Char(15)
  lrinvoice                    Int       @default(0, map: "DF__prmtr__lrinvoice__38179A75") @db.TinyInt
  quantity                     Float     @default(0, map: "DF__prmtr__quantity__390BBEAE") @db.Money
  debqty                       Float     @default(0, map: "DF__prmtr__debqty__39FFE2E7") @db.Money
  amount                       Float     @default(0, map: "DF__prmtr__amount__3AF40720") @db.Money
  debamount                    Float     @default(0, map: "DF__prmtr__debamount__3BE82B59") @db.Money
  addprcnt                     Float     @default(0, map: "DF__prmtr__addprcnt__3CDC4F92") @db.Money
  caption                      String    @db.VarChar(70)
  fdate                        DateTime  @db.DateTime
  tdate                        DateTime? @db.DateTime
  ftime                        Int?      @db.SmallInt
  ttime                        Int?      @db.SmallInt
  debit                        Int       @default(0, map: "DF__prmtr__debit__3DD073CB") @db.TinyInt
  expgrp                       Int?      @db.SmallInt
  atstatus                     Int       @default(0, map: "DF__prmtr__atstatus__3EC49804") @db.TinyInt
  source                       Int       @default(1, map: "DF__prmtr__source__3FB8BC3D") @db.TinyInt
  exportdate                   DateTime? @db.DateTime
  blocked                      Int       @default(0, map: "DF__prmtr__blocked__40ACE076") @db.TinyInt
  invrem                       Int       @default(0, map: "DF__prmtr__invrem__41A104AF") @db.TinyInt
  timestamp                    String    @db.Char(10)
  pract                        pract[]
  cmart                        cmart?    @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkprmtrkeycmart")
  cmctc_prmtr_keycmctcTocmctc  cmctc?    @relation("prmtr_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprmtrkeycmctc")
  cmctc_prmtr_keycmctc2Tocmctc cmctc?    @relation("prmtr_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprmtrkeycmctc2")
  imial                        imial?    @relation(fields: [keyimial], references: [keyimial], onUpdate: NoAction, map: "fkprmtrkeyimial")
  lrfkh                        lrfkh?    @relation(fields: [keylrfkh], references: [keylrfkh], onDelete: NoAction, onUpdate: NoAction, map: "fkprmtrkeylrfkh")
  prppr                        prppr?    @relation(fields: [keyprppr], references: [keyprppr], onDelete: NoAction, onUpdate: NoAction, map: "fkprmtrkeyprppr")
  prprj                        prprj     @relation(fields: [keyprprj], references: [keyprprj], onUpdate: NoAction, map: "fkprmtrkeyprprj")
  revrr                        revrr?    @relation(fields: [keyrevrr], references: [keyrevrr], onDelete: NoAction, onUpdate: NoAction, map: "fkprmtrkeyrevrr")
  skafb                        skafb?    @relation(fields: [keyskafb], references: [keyskafb], onUpdate: NoAction, map: "fkprmtrkeyskafb ")

  @@index([keycmart], map: "fkprmtrcmart")
  @@index([keycmctc], map: "fkprmtrcmctc")
  @@index([keycmctc2], map: "fkprmtrcmctc2")
  @@index([keyimial], map: "fkprmtriminv")
  @@index([keylrfkh], map: "fkprmtrlrfkh")
  @@index([keyprppr], map: "fkprmtrprppr")
  @@index([keyprprj], map: "fkprmtrprprj")
  @@index([keyrevrr], map: "fkprmtrrevrr")
  @@index([keyskafb], map: "fkprmtrskafb")
  @@index([keysyusr], map: "fkprmtrsyusr")
  @@index([keycmctc, fdate, keyprprj], map: "inprmtr_2LU0GRMG7")
}

model prpci {
  keyprpci   String   @id(map: "pkprpci") @db.Char(15)
  keyprprj   String?  @db.Char(15)
  keyprppr   String?  @db.Char(15)
  keycmctc   String?  @db.Char(15)
  keycmart   String   @db.Char(15)
  fdate      DateTime @db.DateTime
  quantity   Float    @default(0, map: "DF__prpci__quantity__4DEBFFAD") @db.Money
  cost       Float    @default(0, map: "DF__prpci__cost__4EE023E6") @db.Money
  totcost    Float    @default(0, map: "DF__prpci__totcost__4FD4481F") @db.Money
  income     Float    @default(0, map: "DF__prpci__income__50C86C58") @db.Money
  totincome  Float    @default(0, map: "DF__prpci__totincome__51BC9091") @db.Money
  oquantity  Float    @default(0, map: "DF__prpci__oquantity__52B0B4CA") @db.Money
  ocost      Float    @default(0, map: "DF__prpci__ocost__53A4D903") @db.Money
  ototcost   Float    @default(0, map: "DF__prpci__ototcost__5498FD3C") @db.Money
  oincome    Float    @default(0, map: "DF__prpci__oincome__558D2175") @db.Money
  ototincome Float    @default(0, map: "DF__prpci__ototincom__568145AE") @db.Money
  vatprcnt   Decimal  @default(0, map: "DF__prpci__vatprcnt__577569E7") @db.Decimal(7, 2)
  decided    Int      @default(0, map: "DF__prpci__decided__58698E20") @db.TinyInt
  timestamp  String   @db.Char(10)
  cmart      cmart    @relation(fields: [keycmart], references: [keycmart], onDelete: Cascade, onUpdate: NoAction, map: "fkprpcikeycmart")
  cmctc      cmctc?   @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkprpcikeycmctc")
  prppr      prppr?   @relation(fields: [keyprppr], references: [keyprppr], onDelete: Cascade, onUpdate: NoAction, map: "fkprpcikeyprppr")
  prprj      prprj?   @relation(fields: [keyprprj], references: [keyprprj], onDelete: Cascade, onUpdate: NoAction, map: "fkprpcikeyprprj")

  @@index([keycmart], map: "fkprpcicmart")
  @@index([keycmctc], map: "fkprpcicmctc")
  @@index([keyprppr], map: "fkprpciprppr")
  @@index([keyprprj], map: "fkprpciprprj")
}

model prpdp {
  keyprpdp  String  @id(map: "pkprpdp") @db.Char(15)
  keyprprj  String  @db.Char(15)
  keyprdel  String  @db.Char(15)
  timestamp String  @db.Char(10)
  prdat     prdat[]
  prdel     prdel   @relation(fields: [keyprdel], references: [keyprdel], onDelete: Cascade, onUpdate: NoAction, map: "fkprpdpkeyprdel ")
  prprj     prprj   @relation(fields: [keyprprj], references: [keyprprj], onDelete: Cascade, onUpdate: NoAction, map: "fkprpdpkeyprprj")

  @@unique([keyprprj, keyprdel], map: "akprpdp")
}

model prpia {
  keyprpia  String @id(map: "pkprpia") @db.Char(15)
  keyprprj  String @db.Char(15)
  keycmart  String @db.Char(15)
  amount    Float  @default(0, map: "DF__prpia__amount__4700783E") @db.Money
  sortorder Int    @default(0, map: "DF__prpia__sortorder__47F49C77") @db.SmallInt
  timestamp String @db.Char(10)
  cmart     cmart  @relation(fields: [keycmart], references: [keycmart], onDelete: Cascade, map: "fkprpiakeycmart")
  prprj     prprj  @relation(fields: [keyprprj], references: [keyprprj], onDelete: Cascade, map: "fkprpiakeyprprj")

  @@index([keycmart], map: "fkprpiacmart")
  @@index([keyprprj], map: "fkprpiaprprj")
}

model prpob {
  keyprpob  String  @id(map: "pkprpob") @db.Char(15)
  keyprprj  String  @db.Char(15)
  keycmobj  String  @db.Char(15)
  keyaotyp  String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@unique([keyprprj, keycmobj, keyaotyp], map: "akprpob1")
  @@index([keyaotyp], map: "fkprpobaotyp")
  @@index([keycmobj], map: "fkprpobcmobj")
  @@index([keyprprj], map: "fkprpobprprj")
}

model prppc {
  keyprppc  String  @id(map: "pkprppc") @db.Char(15)
  caption   String  @unique(map: "akprppc") @db.VarChar(60)
  timestamp String  @db.Char(10)
  prppr     prppr[]
}

model prppo {
  keyprppo  String    @id(map: "pkprppo") @db.Char(15)
  keyprppr  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  delidate  DateTime? @db.Date
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkprppokeycmobj")
  prppr     prppr     @relation(fields: [keyprppr], references: [keyprppr], onDelete: Cascade, onUpdate: NoAction, map: "fkprppokeyprppr")

  @@unique([keyprppr, keycmobj], map: "akprppo")
  @@index([keycmobj], map: "fkprppocmobj")
}

model prppr {
  keyprppr                     String    @id(map: "pkprppr") @db.Char(15)
  keyprprj                     String?   @db.Char(15)
  keyprppr2                    String?   @db.Char(15)
  keyprppc                     String?   @db.Char(15)
  keyprclh                     String?   @db.Char(15)
  keycmctc                     String?   @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmctc3                    String?   @db.Char(15)
  keycmctc4                    String?   @db.Char(15)
  keycmobj                     String?   @db.Char(15)
  keysyusr                     String?   @db.Char(15)
  code                         String    @db.VarChar(30)
  caption                      String?   @db.VarChar(60)
  fdate                        DateTime? @db.DateTime
  preltdate                    DateTime? @db.DateTime
  tdate                        DateTime? @db.DateTime
  repodate                     DateTime? @db.DateTime
  closedate                    DateTime? @db.DateTime
  closesign                    String?   @db.VarChar(80)
  status                       Int       @default(0, map: "DF__prppr__status__3195856F") @db.TinyInt
  bundle                       Int       @default(0, map: "DF__prppr__bundle__3289A9A8") @db.TinyInt
  pprtype                      Int       @default(0, map: "DF__prppr__pprtype__337DCDE1") @db.TinyInt
  orgtime                      Decimal?  @db.Decimal(10, 4)
  preltime                     Decimal?  @db.Decimal(10, 4)
  orgcost                      Float?    @db.Money
  estimcost                    Float?    @db.Money
  quoprice                     String?   @db.VarChar(100)
  yreference                   String?   @db.VarChar(30)
  revvatduty                   Int       @default(0, map: "DF__prppr__revvatdut__3471F21A") @db.TinyInt
  timestamp                    String    @db.Char(10)
  aoupp                        aoupp[]
  ikbeh                        ikbeh[]
  ikppr                        ikppr[]
  pract                        pract[]
  prmtr                        prmtr[]
  prpci                        prpci[]
  prppo                        prppo[]
  cmctc_prppr_keycmctcTocmctc  cmctc?    @relation("prppr_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprpprkeycmctc")
  cmctc_prppr_keycmctc2Tocmctc cmctc?    @relation("prppr_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprpprkeycmctc2")
  cmctc_prppr_keycmctc3Tocmctc cmctc?    @relation("prppr_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onUpdate: NoAction, map: "fkprpprkeycmctc3")
  cmctc_prppr_keycmctc4Tocmctc cmctc?    @relation("prppr_keycmctc4Tocmctc", fields: [keycmctc4], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprpprkeycmctc4")
  cmobj                        cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkprpprkeycmobj ")
  prclh                        prclh?    @relation(fields: [keyprclh], references: [keyprclh], onUpdate: NoAction, map: "fkprpprkeyprclh")
  prppc                        prppc?    @relation(fields: [keyprppc], references: [keyprppc], onUpdate: NoAction, map: "fkprpprkeyprppc ")
  prprj                        prprj?    @relation(fields: [keyprprj], references: [keyprprj], onUpdate: NoAction, map: "fkprpprkeyprprj")
  prpro                        prpro[]
  prrel_prrel_keyprpprToprppr  prrel[]   @relation("prrel_keyprpprToprppr")
  prrel_prrel_keyprppr2Toprppr prrel[]   @relation("prrel_keyprppr2Toprppr")
  pusta                        pusta[]
  puund                        puund[]

  @@index([keycmctc], map: "fkprpprcmctc")
  @@index([keycmctc2], map: "fkprpprcmctc2")
  @@index([keycmctc3], map: "fkprpprcmctc3")
  @@index([keycmctc4], map: "fkprpprcmctc4")
  @@index([keycmobj], map: "fkprpprcmobj")
  @@index([keyprclh], map: "fkprpprprclh")
  @@index([keyprppc], map: "fkprpprprppc")
  @@index([keyprppr2], map: "fkprpprprppr2")
  @@index([keyprprj], map: "fkprpprprprj")
  @@index([keysyusr], map: "fkprpprsyusr")
  @@index([code], map: "inprppr1")
}

model prprj {
  keyprprj                     String    @id(map: "pkprprj") @db.Char(15)
  keyprvrt                     String    @db.Char(15)
  keyprsdi                     String?   @db.Char(15)
  keyprtyp                     String?   @db.Char(15)
  keyprcat                     String?   @db.Char(15)
  keyprclh                     String?   @db.Char(15)
  keypreta                     String?   @db.Char(15)
  keypretb                     String?   @db.Char(15)
  keypretc                     String?   @db.Char(15)
  keycmctc                     String    @db.Char(15)
  keycmctc2                    String?   @db.Char(15)
  keycmctc3                    String?   @db.Char(15)
  keycmctc4                    String?   @db.Char(15)
  keycmctc5                    String?   @db.Char(15)
  keycmcmp                     String    @db.Char(15)
  keycmsom                     String?   @db.Char(15)
  keysyusr                     String?   @db.Char(15)
  keyatway                     String?   @db.Char(15)
  keyaopri                     String?   @db.Char(15)
  keyikdnt                     String?   @db.Char(15)
  code                         String    @db.VarChar(30)
  caption                      String?   @db.VarChar(50)
  prjsummary                   String?   @db.VarChar(1000)
  internal                     Int       @db.TinyInt
  prjtype                      Int       @default(0, map: "DF__prprj__prjtype__2D0D7C65") @db.TinyInt
  debit                        Int       @db.TinyInt
  debitlr                      Int       @db.TinyInt
  forceppr                     Int       @default(0, map: "DF__prprj__forceppr__2E01A09E") @db.TinyInt
  forceaoppr                   Int       @default(0, map: "DF__prprj__forceaopp__2EF5C4D7") @db.TinyInt
  forceikppr                   Int       @default(0, map: "DF__prprj__forceikpp__2FE9E910") @db.TinyInt
  bundle                       Int?      @db.TinyInt
  repodate                     DateTime? @db.Date
  fdate                        DateTime? @db.Date
  tdate                        DateTime? @db.Date
  preltime                     Int?
  preltdate                    DateTime? @db.Date
  orderval                     Float     @default(0, map: "DF__prprj__orderval__30DE0D49") @db.Money
  orderprcnt                   Int       @default(0, map: "DF__prprj__orderprcn__31D23182") @db.TinyInt
  status                       Int       @default(0, map: "DF__prprj__status__32C655BB") @db.TinyInt
  custdefa                     Int       @default(0, map: "DF__prprj__custdefa__33BA79F4") @db.TinyInt
  blkprmtr                     Int       @default(0, map: "DF__prprj__blkprmtr__34AE9E2D") @db.TinyInt
  prjresult                    Int       @default(0, map: "DF__prprj__prjresult__35A2C266") @db.TinyInt
  atstatus                     Int       @default(0, map: "DF__prprj__atstatus__3696E69F") @db.TinyInt
  buildstart                   DateTime? @db.Date
  buildstop                    DateTime? @db.Date
  bldorgstop                   DateTime? @db.Date
  closedate                    DateTime? @db.Date
  closesign                    String?   @db.VarChar(80)
  addprcnt                     Float     @default(0, map: "DF__prprj__addprcnt__378B0AD8") @db.Money
  addprcntlr                   Float     @default(0, map: "DF__prprj__addprcntl__387F2F11") @db.Money
  intctr                       Int       @default(0, map: "DF__prprj__intctr__3973534A") @db.TinyInt
  intctrcost                   Float     @default(0, map: "DF__prprj__intctrcos__3A677783") @db.Money
  invinter                     Int       @default(0, map: "DF__prprj__invinter__3B5B9BBC") @db.SmallInt
  prinvsign                    Int       @default(0, map: "DF__prprj__prinvsign__3C4FBFF5") @db.TinyInt
  prinvint                     Int       @default(0, map: "DF__prprj__prinvint__3D43E42E") @db.TinyInt
  prinvrdays                   Int       @default(0, map: "DF__prprj__prinvrday__3E380867") @db.SmallInt
  prinvstart                   DateTime? @db.Date
  prinvresd                    DateTime? @db.Date
  aodebit                      Int       @default(0, map: "DF__prprj__aodebit__3F2C2CA0") @db.TinyInt
  incresinv                    Int       @default(1, map: "DF__prprj__incresinv__402050D9") @db.TinyInt
  invgrpkind                   Int       @default(1, map: "DF__prprj__invgrpkin__41147512") @db.TinyInt
  estimcost                    Float?    @db.Money
  yreference                   String?   @db.VarChar(30)
  devinote                     String?   @db.VarChar(600)
  devprj                       Int       @default(0, map: "DF__prprj__devprj__4208994B") @db.TinyInt
  timestamp                    String    @db.Char(10)
  aoupp                        aoupp[]
  crtsk                        crtsk[]
  hyspt                        hyspt[]
  ikbeh                        ikbeh[]
  lbbes                        lbbes[]
  pracc                        pracc[]
  pract                        pract[]
  prark                        prark[]
  prmtr                        prmtr[]
  prpci                        prpci[]
  prpdp                        prpdp[]
  prpia                        prpia[]
  prppr                        prppr[]
  aopri                        aopri?    @relation(fields: [keyaopri], references: [keyaopri], onUpdate: NoAction, map: "fkprprjkeyaopri ")
  atway                        atway?    @relation(fields: [keyatway], references: [keyatway], onUpdate: NoAction, map: "fkprprjkeyatway")
  cmcmp                        cmcmp     @relation(fields: [keycmcmp], references: [keycmcmp], onUpdate: NoAction, map: "fkprprjkeycmcmp ")
  cmctc_prprj_keycmctcTocmctc  cmctc     @relation("prprj_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkprprjkeycmctc")
  cmctc_prprj_keycmctc2Tocmctc cmctc?    @relation("prprj_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprprjkeycmctc2")
  cmctc_prprj_keycmctc3Tocmctc cmctc?    @relation("prprj_keycmctc3Tocmctc", fields: [keycmctc3], references: [keycmctc], onUpdate: NoAction, map: "fkprprjkeycmctc3")
  cmctc_prprj_keycmctc4Tocmctc cmctc?    @relation("prprj_keycmctc4Tocmctc", fields: [keycmctc4], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprprjkeycmctc4")
  cmctc_prprj_keycmctc5Tocmctc cmctc?    @relation("prprj_keycmctc5Tocmctc", fields: [keycmctc5], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkprprjkeycmctc5")
  cmsom                        cmsom?    @relation(fields: [keycmsom], references: [keycmsom], onUpdate: NoAction, map: "fkprprjkeycmsom ")
  prcat                        prcat?    @relation(fields: [keyprcat], references: [keyprcat], onUpdate: NoAction, map: "fkprprjkeyprcat ")
  prclh                        prclh?    @relation(fields: [keyprclh], references: [keyprclh], onUpdate: NoAction, map: "fkprprjkeyprclh ")
  preta                        preta?    @relation(fields: [keypreta], references: [keypreta], onUpdate: NoAction, map: "fkprprjkeypreta ")
  pretb                        pretb?    @relation(fields: [keypretb], references: [keypretb], onUpdate: NoAction, map: "fkprprjkeypretb ")
  pretc                        pretc?    @relation(fields: [keypretc], references: [keypretc], onUpdate: NoAction, map: "fkprprjkeypretc ")
  prsdi                        prsdi?    @relation(fields: [keyprsdi], references: [keyprsdi], onUpdate: NoAction, map: "fkprprjkeyprsdi ")
  prtyp                        prtyp?    @relation(fields: [keyprtyp], references: [keyprtyp], onUpdate: NoAction, map: "fkprprjkeyprtyp ")
  prvrt                        prvrt     @relation(fields: [keyprvrt], references: [keyprvrt], onUpdate: NoAction, map: "fkprprjkeyprvrt ")
  prpro                        prpro[]
  puund                        puund[]

  @@index([keyaopri], map: "fkprprjaopri")
  @@index([keyatway], map: "fkprprjatway")
  @@index([keycmcmp], map: "fkprprjcmcmp")
  @@index([keycmctc], map: "fkprprjcmctc")
  @@index([keycmctc2], map: "fkprprjcmctc2")
  @@index([keycmctc3], map: "fkprprjcmctc3")
  @@index([keycmctc4], map: "fkprprjcmctc4")
  @@index([keycmctc5], map: "fkprprjcmctc5")
  @@index([keycmsom], map: "fkprprjcmsom")
  @@index([keyprcat], map: "fkprprjprcat")
  @@index([keyprclh], map: "fkprprjprclh")
  @@index([keypreta], map: "fkprprjpreta")
  @@index([keypretb], map: "fkprprjpretb")
  @@index([keypretc], map: "fkprprjpretc")
  @@index([keyprsdi], map: "fkprprjprsdi")
  @@index([keyprtyp], map: "fkprprjprtyp")
  @@index([keyprvrt], map: "fkprprjprvrt")
  @@index([keysyusr], map: "fkprprjsyusr")
  @@index([code], map: "inprprj_code")
}

model prpro {
  keyprpro  String  @id(map: "pkprpro") @db.Char(15)
  keyprprj  String  @db.Char(15)
  keyprppr  String? @db.Char(15)
  keycmctc  String  @db.Char(15)
  keyprrol  String  @db.Char(15)
  timestamp String  @db.Char(10)
  cmctc     cmctc   @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fkprprokeycmctc")
  prppr     prppr?  @relation(fields: [keyprppr], references: [keyprppr], onUpdate: NoAction, map: "fkprprokeyprppr")
  prprj     prprj   @relation(fields: [keyprprj], references: [keyprprj], onDelete: Cascade, onUpdate: NoAction, map: "fkprprokeyprprj")
  prrol     prrol   @relation(fields: [keyprrol], references: [keyprrol], onDelete: Cascade, onUpdate: NoAction, map: "fkprprokeyprrol ")

  @@index([keycmctc], map: "fkprprocmctc")
  @@index([keyprppr], map: "fkprproprppr")
  @@index([keyprprj], map: "fkprproprprj")
  @@index([keyprrol], map: "fkprproprrol")
  @@index([keycmctc, keyprprj], map: "inprpro_1Z80IGF8R")
}

model prrel {
  keyprrel                     String @id(map: "pkprrel") @db.Char(15)
  keyprppr                     String @db.Char(15)
  keyprppr2                    String @db.Char(15)
  timestamp                    String @db.Char(10)
  prppr_prrel_keyprpprToprppr  prppr  @relation("prrel_keyprpprToprppr", fields: [keyprppr], references: [keyprppr], onUpdate: NoAction, map: "fkprrelkeyprppr")
  prppr_prrel_keyprppr2Toprppr prppr  @relation("prrel_keyprppr2Toprppr", fields: [keyprppr2], references: [keyprppr], onDelete: Cascade, onUpdate: NoAction, map: "fkprrelkeyprppr2")

  @@unique([keyprppr, keyprppr2], map: "akprrel")
  @@index([keyprppr2], map: "fkprrelprppr2")
}

model prrol {
  keyprrol  String  @id(map: "pkprrol") @db.Char(15)
  caption   String  @unique(map: "akprrol1") @db.Char(30)
  printsort Int     @default(0, map: "DF__prrol__printsort__49716353") @db.TinyInt
  timestamp String  @db.Char(10)
  ikkak     ikkak[]
  prpro     prpro[]
}

model prsdi {
  keyprsdi   String  @id(map: "pkprsdi") @db.Char(15)
  caption    String  @unique(map: "akprsdi1") @db.VarChar(30)
  emptylnegr Int     @default(0, map: "DF__prsdi__emptylneg__7DB5EEB6") @db.TinyInt
  prprjfld   String? @db.VarChar(800)
  prpprfld   String? @db.VarChar(800)
  aouppfld   String? @db.VarChar(800)
  aoupgfld   String? @db.VarChar(800)
  timestamp  String  @db.Char(10)
  prprj      prprj[]
}

model prtcc {
  keyprtcc  String @id(map: "pkprtcc") @db.Char(15)
  keyprtyp  String @db.Char(15)
  keyprcat  String @db.Char(15)
  timestamp String @db.Char(10)
  prcat     prcat  @relation(fields: [keyprcat], references: [keyprcat], onDelete: Cascade, onUpdate: NoAction, map: "fkprtcckeyprcat ")
  prtyp     prtyp  @relation(fields: [keyprtyp], references: [keyprtyp], onDelete: Cascade, onUpdate: NoAction, map: "fkprtcckeyprtyp ")

  @@unique([keyprtyp, keyprcat], map: "akprtcc")
}

model prtyb {
  keyprtyb  String @id(map: "pkprtyb") @db.Char(15)
  keyprtyp  String @db.Char(15)
  keylbbka  String @db.Char(15)
  datetype  Int    @default(0, map: "DF__prtyb__datetype__6BC9FB21") @db.TinyInt
  nodays    Int    @default(0, map: "DF__prtyb__nodays__6CBE1F5A") @db.SmallInt
  timestamp String @db.Char(10)
  lbbka     lbbka  @relation(fields: [keylbbka], references: [keylbbka], onDelete: Cascade, onUpdate: NoAction, map: "fkprtybkeylbbka")
  prtyp     prtyp  @relation(fields: [keyprtyp], references: [keyprtyp], onDelete: Cascade, onUpdate: NoAction, map: "fkprtybkeyprtyp ")

  @@unique([keyprtyp, keylbbka], map: "akprtyb")
}

model prtyp {
  keyprtyp  String  @id(map: "pkprtyp") @db.Char(15)
  keyprcat  String? @db.Char(15)
  keyprclh  String? @db.Char(15)
  keyatway  String? @db.Char(15)
  keyhyspa  String? @db.Char(15)
  caption   String  @unique(map: "akprtyp") @db.VarChar(60)
  isrenproj Int     @default(0, map: "DF__prtyp__isrenproj__5E7D3A7F") @db.TinyInt
  timestamp String  @db.Char(10)
  hymrp     hymrp[]
  prprj     prprj[]
  prtcc     prtcc[]
  prtyb     prtyb[]
  atway     atway?  @relation(fields: [keyatway], references: [keyatway], onUpdate: NoAction, map: "fkprtypkeyatway")
  hyspa     hyspa?  @relation(fields: [keyhyspa], references: [keyhyspa], onUpdate: NoAction, map: "fkprtypkeyhyspa ")
  prcat     prcat?  @relation(fields: [keyprcat], references: [keyprcat], onUpdate: NoAction, map: "fkprtypkeyprcat ")
  prclh     prclh?  @relation(fields: [keyprclh], references: [keyprclh], onUpdate: NoAction, map: "fkprtypkeyprclh")

  @@index([keyatway], map: "fkprtypatway")
  @@index([keyhyspa], map: "fkprtyphyspa")
  @@index([keyprcat], map: "fkprtypprcat")
  @@index([keyprclh], map: "fkprtypprclh")
}

model prvrt {
  keyprvrt   String  @id(map: "pkprvrt") @db.Char(15)
  keyprvrt2  String? @db.Char(15)
  keyrevrt   String  @db.Char(15)
  keyfadbt   String  @db.Char(15)
  keycmcmp   String? @db.Char(15)
  caption    String  @db.VarChar(30)
  internal   Int     @db.TinyInt
  debit      Int     @db.TinyInt
  debitlr    Int     @db.TinyInt
  sorttype   Int     @db.TinyInt
  bundle     Int?    @db.TinyInt
  addprcnt   Float   @default(0, map: "DF__prvrt__addprcnt__13FF553A") @db.Money
  addprcntlr Float   @default(0, map: "DF__prvrt__addprcntl__14F37973") @db.Money
  timestamp  String  @db.Char(10)
  prprj      prprj[]

  @@index([keycmcmp], map: "fkprvrtcmcmp")
  @@index([keyfadbt], map: "fkprvrtfadbt")
  @@index([keyprvrt], map: "fkprvrtprvrt")
  @@index([keyrevrt], map: "fkprvrtrevrt")
}

model puagg {
  keypuagg  String  @id(map: "pkpuagg") @db.Char(15)
  code      String  @db.VarChar(30)
  timestamp String  @db.Char(10)
  puagr     puagr[]
}

model puagr {
  keypuagr  String  @id(map: "pkpuagr") @db.Char(15)
  keypuagg  String? @db.Char(15)
  keycmart  String? @db.Char(15)
  atggrp    String  @db.VarChar(30)
  atggrpben String? @db.VarChar(30)
  perpecost Int     @default(0, map: "DF__puagr__perpecost__7182D477") @db.TinyInt
  timestamp String  @db.Char(10)
  ikund     ikund[]
  cmart     cmart?  @relation(fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkpuagrkeycmart")
  puagg     puagg?  @relation(fields: [keypuagg], references: [keypuagg], onDelete: NoAction, onUpdate: NoAction, map: "fkpuagrkeypuagg ")
  puatg     puatg[]
  puprk     puprk[]
  puund     puund[]
  puuns     puuns[]

  @@index([keycmart], map: "fkpuagrcmart")
  @@index([keypuagg], map: "fkpuagrpuagg")
}

model puapp {
  keypuapp  String   @id(map: "pkpuapp") @db.Char(15)
  keycmobj  String   @db.Char(15)
  keycmctc  String   @db.Char(15)
  senddate  DateTime @db.Date
  year      Int      @db.SmallInt
  status    Int      @db.TinyInt
  failnote  String   @db.VarChar(600)
  timestamp String   @db.Char(10)

  @@index([keycmctc], map: "fkpuappcmctc")
  @@index([keycmobj], map: "fkpuappcmobj")
}

model puatg {
  keypuatg                     String   @id(map: "pkpuatg") @db.Char(15)
  keypuatt                     String?  @db.Char(15)
  keypumtt                     String?  @db.Char(15)
  keycmart                     String?  @db.Char(15)
  keycmuni                     String?  @db.Char(15)
  keycmvat                     String?  @db.Char(15)
  keycmvat2                    String?  @db.Char(15)
  keypuagr                     String?  @db.Char(15)
  atgard                       String   @unique(map: "akpuatg") @db.Char(10)
  text1                        String?  @db.VarChar(30)
  text2                        String?  @db.VarChar(30)
  klartext                     String?  @db.VarChar(30)
  kostnfakt                    Decimal? @db.Decimal(6, 2)
  mtrlpris                     Float?   @db.Money
  pris                         Float?   @db.Money
  intervall                    Int?     @db.TinyInt
  invest                       Int      @default(0, map: "DF__puatg__invest__74CBA2FA") @db.TinyInt
  mainttype                    Int      @default(0, map: "DF__puatg__mainttype__75BFC733") @db.TinyInt
  egetinterv                   Int?     @db.TinyInt
  tidmark                      Decimal? @db.Decimal(8, 2)
  tidtra                       Decimal? @db.Decimal(8, 2)
  tidbetong                    Decimal? @db.Decimal(8, 2)
  tidmaln                      Decimal? @db.Decimal(8, 2)
  tidplat                      Decimal? @db.Decimal(8, 2)
  tidgolv                      Decimal? @db.Decimal(8, 2)
  tidror                       Decimal? @db.Decimal(8, 2)
  tidvent                      Decimal? @db.Decimal(8, 2)
  tidel                        Decimal? @db.Decimal(8, 2)
  tidhiss                      Decimal? @db.Decimal(8, 2)
  tidovr                       Decimal? @db.Decimal(8, 2)
  tidkok                       Decimal? @db.Decimal(8, 2)
  prioritet                    Int?     @db.TinyInt
  vluaterbet                   Int?     @db.TinyInt
  minqty                       Int?     @db.SmallInt
  maxqty                       Int?     @db.SmallInt
  incchange                    Float?   @db.Money
  favorit                      Int      @default(0, map: "DF__puatg__favorit__76B3EB6C") @db.TinyInt
  repabkod                     Int      @default(0, map: "DF__puatg__repabkod__77A80FA5") @db.TinyInt
  timestamp                    String   @db.Char(10)
  aoatb                        aoatb[]
  ikund                        ikund[]
  cmart                        cmart?   @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fkpuatgkeycmart")
  cmuni                        cmuni?   @relation(fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkpuatgkeycmuni ")
  cmvat_puatg_keycmvatTocmvat  cmvat?   @relation("puatg_keycmvatTocmvat", fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkpuatgkeycmvat ")
  cmvat_puatg_keycmvat2Tocmvat cmvat?   @relation("puatg_keycmvat2Tocmvat", fields: [keycmvat2], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkpuatgkeycmvat2 ")
  puagr                        puagr?   @relation(fields: [keypuagr], references: [keypuagr], onDelete: NoAction, onUpdate: NoAction, map: "fkpuatgkeypuagr")
  puatt                        puatt?   @relation(fields: [keypuatt], references: [keypuatt], onUpdate: NoAction, map: "fkpuatgkeypuatt ")
  pumtt                        pumtt?   @relation(fields: [keypumtt], references: [keypumtt], onUpdate: NoAction, map: "fkpuatgkeypumtt ")
  puatx_puatx_keypuatgTopuatg  puatx[]  @relation("puatx_keypuatgTopuatg")
  puatx_puatx_keypuatg2Topuatg puatx[]  @relation("puatx_keypuatg2Topuatg")
  pubgr                        pubgr[]
  pubtc                        pubtc[]
  pusta                        pusta[]
  puund                        puund[]
  puuns                        puuns[]

  @@index([keycmart], map: "fkpuatgcmart")
  @@index([keycmuni], map: "fkpuatgcmuni")
  @@index([keycmvat], map: "fkpuatgcmvat")
  @@index([keycmvat2], map: "fkpuatgcmvat2")
  @@index([keypuagr], map: "fkpuatgpuagr")
  @@index([keypuatt], map: "fkpuatgpuatt")
  @@index([keypumtt], map: "fkpuatgpumtt")
}

model puatk {
  keypuatk  String @id(map: "pkpuatk") @db.Char(15)
  keypuatg  String @db.Char(15)
  keybakmt  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keybakmt], map: "fkpuatkbakmt")
  @@index([keypuatg], map: "fkpuatkpuatg")
}

model puatl {
  keypuatl   String    @id(map: "pkpuatl") @db.Char(15)
  keypuatr   String?   @db.Char(15)
  fklage     String?   @db.VarChar(30)
  metod      Int?      @db.TinyInt
  tklage     String?   @db.VarChar(30)
  datum      DateTime? @db.DateTime
  fatgard    String?   @db.VarChar(30)
  keysyusr   String?   @db.Char(15)
  tatgard    String?   @db.VarChar(30)
  upprfaktor Decimal?  @db.Decimal(7, 3)
  timestamp  String    @db.Char(10)
  puatr      puatr?    @relation(fields: [keypuatr], references: [keypuatr], onDelete: NoAction, onUpdate: NoAction, map: "fkpuatlkeypuatr ")

  @@index([keypuatr], map: "fkpuatlpuatr")
  @@index([keysyusr], map: "fkpuatlsyusr")
}

model puatr {
  keypuatr  String  @id(map: "pkpuatr") @db.Char(15)
  huvudg    String? @db.Char(2)
  huvudgben String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  puatl     puatl[]
}

model puatt {
  keypuatt  String  @id(map: "pkpuatt") @db.Char(15)
  keypuhdt  String  @db.Char(15)
  code      String  @unique(map: "akpuatt1") @db.Char(4)
  caption   String  @db.VarChar(100)
  issystem  Int     @default(0, map: "DF__puatt__issystem__7C9452BE") @db.TinyInt
  timestamp String  @db.Char(10)
  baaot     baaot[]
  babdt     babdt[]
  babpt     babpt[]
  babyt     babyt[]
  bahyt     bahyt[]
  bakmt     bakmt[]
  balgt     balgt[]
  balot     balot[]
  barut     barut[]
  basyt     basyt[]
  puatg     puatg[]

  @@index([keypuhdt], map: "fkpuattpuhdt")
}

model puatx {
  keypuatx                     String @id(map: "pkpuatx") @db.Char(15)
  keypuatg                     String @db.Char(15)
  keypuatg2                    String @db.Char(15)
  keyaopla                     String @db.Char(15)
  text                         String @db.VarChar(30)
  timestamp                    String @db.Char(10)
  aopla                        aopla  @relation(fields: [keyaopla], references: [keyaopla], onUpdate: NoAction, map: "fkpuatxkeyaopla ")
  puatg_puatx_keypuatgTopuatg  puatg  @relation("puatx_keypuatgTopuatg", fields: [keypuatg], references: [keypuatg], onDelete: Cascade, onUpdate: NoAction, map: "fkpuatxkeypuatg")
  puatg_puatx_keypuatg2Topuatg puatg  @relation("puatx_keypuatg2Topuatg", fields: [keypuatg2], references: [keypuatg], onUpdate: NoAction, map: "fkpuatxkeypuatg2")

  @@index([keyaopla], map: "fkpuatxaopla")
  @@index([keypuatg], map: "fkpuatxpuatg")
  @@index([keypuatg2], map: "fkpuatxpuatg2")
}

model pubdl {
  keypubdl  String  @id(map: "pkpubdl") @db.Char(15)
  keypuatr  String  @db.Char(15)
  code      String  @unique(map: "akpubdl1") @db.Char(2)
  caption   String? @db.VarChar(100)
  issystem  Int     @default(0, map: "DF__pubdl__issystem__7F70BF69") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keypuatr], map: "fkpubdlpuatr")
}

model pubgh {
  keypubgh  String  @id(map: "pkpubgh") @db.Char(15)
  keycmobt  String  @db.Char(15)
  caption   String  @db.VarChar(90)
  timestamp String  @db.Char(10)
  cmobt     cmobt   @relation(fields: [keycmobt], references: [keycmobt], onUpdate: NoAction, map: "fkpubghkeycmobt ")
  pubgr     pubgr[]

  @@unique([keycmobt, caption], map: "akpubgh")
}

model pubgr {
  keypubgr  String @id(map: "pkpubgr") @db.Char(15)
  keypubgh  String @db.Char(15)
  keypuatg  String @db.Char(15)
  timestamp String @db.Char(10)
  pubgh     pubgh  @relation(fields: [keypubgh], references: [keypubgh], onDelete: Cascade, onUpdate: NoAction, map: "fkpubgrkeypubgh ")
  puatg     puatg  @relation(fields: [keypuatg], references: [keypuatg], onDelete: Cascade, onUpdate: NoAction, map: "fkpubgtkeypuatg ")

  @@unique([keypubgh, keypuatg], map: "akpubgr")
  @@index([keypuatg], map: "fkpubgrpuatg")
}

model pubtc {
  keypubtc  String @id(map: "pkpubtc") @db.Char(15)
  keypuatg  String @db.Char(15)
  keycmobt  String @db.Char(15)
  keycode   String @db.Char(15)
  btckind   Int    @default(0, map: "DF__pubtc__btckind__5BC86B4E") @db.TinyInt
  timestamp String @db.Char(10)
  cmobt     cmobt  @relation(fields: [keycmobt], references: [keycmobt], onUpdate: NoAction, map: "fkpubtckeycmobt ")
  puatg     puatg  @relation(fields: [keypuatg], references: [keypuatg], onDelete: Cascade, onUpdate: NoAction, map: "fkpubtckeypuatg ")

  @@unique([keycmobt, keycode, keypuatg], map: "akpubtc")
  @@index([keypuatg], map: "fkpubtcpuatg")
}

model puhdt {
  keypuhdt  String  @id(map: "pkpuhdt") @db.Char(15)
  keypubdl  String  @db.Char(15)
  code      String  @unique(map: "akpuhdt1") @db.Char(3)
  caption   String  @db.VarChar(100)
  note      String? @db.VarChar(2000)
  notecond  String? @db.VarChar(2000)
  issystem  Int     @default(0, map: "DF__puhdt__issystem__2ACE4DE4") @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keypubdl], map: "fkpuhdtpubdl")
}

model pumtt {
  keypumtt  String  @id(map: "pkpumtt") @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String? @db.VarChar(100)
  issystem  Int     @default(0, map: "DF__pumtt__issystem__052998BF") @db.TinyInt
  timestamp String  @db.Char(10)
  puatg     puatg[]
}

model pupin {
  keypupin  String   @id(map: "pkpupin") @db.Char(15)
  keypupkt  String   @db.Char(15)
  keypuatg  String   @db.Char(15)
  keycmvat  String?  @db.Char(15)
  mangd     Decimal  @db.Decimal(9, 1)
  intervall Int?     @db.TinyInt
  svarighet Decimal? @db.Decimal(6, 2)
  invest    Int      @default(0, map: "DF__pupin__invest__7284DC37") @db.TinyInt
  timestamp String   @db.Char(10)

  @@index([keycmvat], map: "fkpupincmvat")
  @@index([keypuatg], map: "fkpupinpuatg")
  @@index([keypupkt], map: "fkpupinpupkt")
}

model pupkt {
  keypupkt  String  @id(map: "pkpupkt") @db.Char(15)
  caption   String? @db.VarChar(50)
  timestamp String  @db.Char(10)
}

model puprd {
  keypuprd  String    @id(map: "pkpuprd") @db.Char(15)
  keycmctc  String?   @db.Char(15)
  code      String    @db.VarChar(30)
  caption   String    @db.VarChar(30)
  suppartno String?   @db.VarChar(30)
  fdate     DateTime? @db.DateTime
  tdate     DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmctc     cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkpuprdkeycmctc")
  puprk     puprk[]

  @@index([keycmctc], map: "fkpuprdcmctc")
}

model puprk {
  keypuprk  String  @id(map: "pkpuprk") @db.Char(15)
  keypuagr  String? @db.Char(15)
  keypuprd  String? @db.Char(15)
  timestamp String  @db.Char(10)
  puagr     puagr?  @relation(fields: [keypuagr], references: [keypuagr], onDelete: Cascade, onUpdate: NoAction, map: "fkpuprkkeypuagr")
  puprd     puprd?  @relation(fields: [keypuprd], references: [keypuprd], onDelete: Cascade, onUpdate: NoAction, map: "fkpuprkkeypuprd ")

  @@index([keypuagr], map: "fkpuprkpuagr")
  @@index([keypuprd], map: "fkpuprkpuprd")
}

model pusta {
  keypusta   String    @id(map: "pkpusta") @db.Char(15)
  keypuund   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keycmobj   String?   @db.Char(15)
  keypuatg   String?   @db.Char(15)
  keyprppr   String?   @db.Char(15)
  senastutf  Int       @default(0, map: "DF__pusta__senastutf__00925B61") @db.SmallInt
  senastutm  Int?      @db.TinyInt
  orgsenutf  Int       @default(0, map: "DF__pusta__orgsenutf__01867F9A") @db.SmallInt
  orgsenutm  Int?      @db.TinyInt
  atgard     String    @db.VarChar(30)
  text1      String?   @db.VarChar(30)
  text2      String?   @db.VarChar(30)
  klartext   String?   @db.VarChar(30)
  kostnad    Int?
  mangd      Decimal?  @db.Decimal(9, 1)
  invest     Int       @default(0, map: "DF__pusta__invest__027AA3D3") @db.TinyInt
  costfactor Decimal   @default(1, map: "DF__pusta__costfacto__036EC80C") @db.Decimal(5, 4)
  fdate      DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  cmobj      cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkpustakeycmobj")
  prppr      prppr?    @relation(fields: [keyprppr], references: [keyprppr], onUpdate: NoAction, map: "fkpustakeyprppr")
  puatg      puatg?    @relation(fields: [keypuatg], references: [keypuatg], onUpdate: NoAction, map: "fkpustakeypuatg ")
  puund      puund?    @relation(fields: [keypuund], references: [keypuund], onUpdate: NoAction, map: "fkpustakeypuund ")

  @@index([keycmobj], map: "fkpustacmobj")
  @@index([keyprppr], map: "fkpustaprppr")
  @@index([keypuatg], map: "fkpustapuatg")
  @@index([keypuund], map: "fkpustapuund")
  @@index([keysyusr], map: "fkpustasyusr")
}

model puube {
  keypuube  String @id(map: "pkpuube") @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  keyfbanm  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keydbtbl, keycode, keyfbanm], map: "akpuube1")
  @@index([keycode], map: "fkpuubecode")
  @@index([keydbtbl], map: "fkpuubedbtbl")
  @@index([keyfbanm], map: "fkpuubefbanm")
}

model puund {
  keypuund   String    @id(map: "pkpuund") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keypuatg   String    @db.Char(15)
  keycmvat   String?   @db.Char(15)
  keypuagr   String?   @db.Char(15)
  keyprppr   String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyprprj   String?   @db.Char(15)
  nastautf   Int?      @db.SmallInt
  intervall  Int?      @db.TinyInt
  senastutf  Int?      @db.SmallInt
  senastutm  Int?      @db.TinyInt
  stopp      Int?      @db.SmallInt
  simnasta   Int?      @db.SmallInt
  siminterv  Int?      @db.TinyInt
  prelnext   Int?      @db.SmallInt
  mangd      Decimal?  @db.Decimal(9, 1)
  framflytt  Int?      @db.TinyInt
  prioritet  Int?      @db.TinyInt
  svarighet  Decimal?  @db.Decimal(6, 2)
  text       String?   @db.VarChar(120)
  typ        String?   @db.Char(2)
  status     Int       @default(0, map: "DF__puund__status__013179DF") @db.TinyInt
  invest     Int       @default(0, map: "DF__puund__invest__02259E18") @db.TinyInt
  extranote  String?   @db.VarChar(60)
  costfactor Decimal   @default(1, map: "DF__puund__costfacto__0319C251") @db.Decimal(5, 4)
  hglu       Int       @default(0, map: "DF__puund__hglu__040DE68A") @db.TinyInt
  bestalld   String?   @db.Char(1)
  bestdat    DateTime? @db.DateTime
  hgluhgbet  Int?      @db.TinyInt
  hgludeb    Int       @default(0, map: "DF__puund__hgludeb__05020AC3") @db.SmallInt
  hgluavdrag Int?      @db.SmallInt
  hglutdate  DateTime? @db.DateTime
  hgluxed    Int?      @db.TinyInt
  apprfdate  DateTime? @db.DateTime
  apprtdate  DateTime? @db.DateTime
  apprnote   String?   @db.VarChar(250)
  apprsign   String?   @db.VarChar(10)
  apprdate   DateTime? @db.DateTime
  rejsign    String?   @db.VarChar(10)
  rejdate    DateTime? @db.DateTime
  startmonth Int?      @db.TinyInt
  finmonth   Int?      @db.TinyInt
  incchange  Float?    @db.Money
  timestamp  String    @db.Char(10)
  bazav      bazav[]
  hfunf      hfunf[]
  pusta      pusta[]
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkpuundkeycmobj")
  cmvat      cmvat?    @relation(fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkpuundkeycmvat ")
  hyobj      hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkpuundkeyhyobj")
  prppr      prppr?    @relation(fields: [keyprppr], references: [keyprppr], onUpdate: NoAction, map: "fkpuundkeyprppr")
  prprj      prprj?    @relation(fields: [keyprprj], references: [keyprprj], onUpdate: NoAction, map: "fkpuundkeyprprj")
  puagr      puagr?    @relation(fields: [keypuagr], references: [keypuagr], onUpdate: NoAction, map: "fkpuundkeypuagr")
  puatg      puatg     @relation(fields: [keypuatg], references: [keypuatg], onUpdate: NoAction, map: "fkpuundkeypuatg ")
  puuns      puuns[]

  @@index([keycmobj], map: "fkpuundcmobj")
  @@index([keycmvat], map: "fkpuundcmvat")
  @@index([keyhyobj], map: "fkpuundhyobj")
  @@index([keyprppr], map: "fkpuundprppr")
  @@index([keyprprj], map: "fkpuundprprj")
  @@index([keypuagr], map: "fkpuundpuagr")
  @@index([keypuatg], map: "fkpuundpuatg")
}

model puuns {
  keypuuns   String   @id(map: "pkpuuns") @db.Char(15)
  keypuunv   String   @db.Char(15)
  keypuund   String?  @db.Char(15)
  keycmobj   String   @db.Char(15)
  keypuatg   String   @db.Char(15)
  keycmvat   String?  @db.Char(15)
  keypuagr   String?  @db.Char(15)
  nastautf   Int?     @db.SmallInt
  intervall  Int?     @db.TinyInt
  senastutf  Int?     @db.SmallInt
  senastutm  Int?     @db.TinyInt
  stopp      Int?     @db.SmallInt
  prelnext   Int?     @db.SmallInt
  mangd      Decimal? @db.Decimal(9, 1)
  prioritet  Int?     @db.TinyInt
  svarighet  Decimal? @db.Decimal(6, 2)
  text       String?  @db.VarChar(120)
  typ        String?  @db.Char(2)
  status     Int      @default(0, map: "DF__puuns__status__0E8B74FD") @db.TinyInt
  invest     Int      @default(0, map: "DF__puuns__invest__0F7F9936") @db.TinyInt
  extranote  String?  @db.VarChar(60)
  costfactor Decimal  @default(1, map: "DF__puuns__costfacto__1073BD6F") @db.Decimal(5, 4)
  hglu       Int      @default(0, map: "DF__puuns__hglu__1167E1A8") @db.TinyInt
  timestamp  String   @db.Char(10)
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkpuunskeycmobj")
  cmvat      cmvat?   @relation(fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkpuunskeycmvat ")
  puagr      puagr?   @relation(fields: [keypuagr], references: [keypuagr], onUpdate: NoAction, map: "fkpuunskeypuagr")
  puatg      puatg    @relation(fields: [keypuatg], references: [keypuatg], onUpdate: NoAction, map: "fkpuunskeypuatg ")
  puund      puund?   @relation(fields: [keypuund], references: [keypuund], onDelete: NoAction, onUpdate: NoAction, map: "fkpuunskeypuund ")
  puunv      puunv    @relation(fields: [keypuunv], references: [keypuunv], onDelete: Cascade, onUpdate: NoAction, map: "fkpuunskeypuunv ")

  @@index([keycmobj], map: "fkpuunscmobj")
  @@index([keycmvat], map: "fkpuunscmvat")
  @@index([keypuatg], map: "fkpuunskeypuatg")
  @@index([keypuagr], map: "fkpuunspuagr")
  @@index([keypuatg], map: "fkpuunspuatg")
  @@index([keypuund], map: "fkpuunspuund")
  @@index([keypuunv], map: "fkpuunspuunv")
}

model puunv {
  keypuunv  String  @id(map: "pkpuunv") @db.Char(15)
  keysyusr  String  @db.Char(15)
  caption   String  @unique(map: "akpuunv1") @db.VarChar(30)
  note      String? @db.VarChar(2000)
  timestamp String  @db.Char(10)
  puuns     puuns[]

  @@index([keysyusr], map: "fkpuunvsyusr")
}

model reauh {
  keyreauh  String  @id(map: "PK__reauh__022916C2") @db.Char(15)
  proid     Int     @db.TinyInt
  year      Int     @db.SmallInt
  partno    Int     @db.TinyInt
  part      String? @db.Char(10)
  show      Int     @db.TinyInt
  fillblank Int     @db.TinyInt
  switch    Int     @db.TinyInt
  runorder  Int     @db.TinyInt
  timestamp String  @db.Char(10)
}

model reauk {
  keyreauk  String @id(map: "PK__reauk__0F824689") @db.Char(15)
  keyrevrt  String @db.Char(15)
  type      Int
  keycode   String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycode], map: "fkreaukcode")
  @@index([keyrevrt], map: "fkreaukrevrt")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model reauktmp {
  keyreauk  String  @db.Char(15)
  keyrevrt  String  @db.Char(15)
  type      Int
  keycode   String  @db.Char(15)
  timestamp String? @db.Char(10)

  @@ignore
}

model reaul {
  keyreaul  String @id(map: "pkreaul") @db.Char(15)
  keydbtbl  String @db.Char(15)
  parent    String @db.Char(15)
  child     String @db.Char(15)
  type      Int    @db.SmallInt
  timestamp String @db.Char(10)

  @@index([child], map: "fkreaulchild")
  @@index([keydbtbl], map: "fkreauldbtbl")
  @@index([parent], map: "fkreaulparent")
  @@index([type, child, keyreaul, parent], map: "inreaul_3GR0PNKJM")
  @@index([child], map: "inreaul_3GR0PNKN8")
  @@index([parent], map: "inreaul_3GR0PNKRW")
  @@index([type, child, keyreaul, parent], map: "inreaul_childparent")
}

model reaum {
  keyreaum  String  @id(map: "PK__reaum__5F54DBD1") @db.Char(15)
  year      Int     @db.SmallInt
  partno    Int     @db.TinyInt
  part      String? @db.Char(10)
  keyrevrt  String? @db.Char(15)
  amount    Float?  @db.Money
  p1        String  @db.Char(10)
  p2        String  @db.Char(10)
  p3        String  @db.Char(10)
  p4        String  @db.Char(10)
  p5        String  @db.Char(10)
  p6        String  @db.Char(10)
  p7        String  @db.Char(10)
  p8        String  @db.Char(10)
  p9        String  @db.Char(10)
  p10       String  @db.Char(10)
  timestamp String  @db.Char(10)

  @@index([keyrevrt], map: "fkreaumrevrt")
  @@index([year, partno, part], map: "inreaum_21D0SF4Q2")
}

model reaup {
  keyreaup  String @id(map: "PK__reaup__613D2443") @db.Char(15)
  proid     Int
  year      Int    @db.SmallInt
  p1        String @db.Char(10)
  p2        String @db.Char(10)
  p3        String @db.Char(10)
  p4        String @db.Char(10)
  p5        String @db.Char(10)
  p6        String @db.Char(10)
  p7        String @db.Char(10)
  p8        String @db.Char(10)
  p9        String @db.Char(10)
  p10       String @db.Char(10)
  timestamp String @db.Char(10)
}

model reaur {
  keyreaur  String @id(map: "PK__reaur__63256CB5") @db.Char(15)
  keycode   String @db.Char(15)
  dbcrtype  Int
  amount    Float  @db.Money
  prcnt     Float  @db.SmallMoney
  fillblank Int?   @db.TinyInt
  p1        String @db.Char(10)
  p2        String @db.Char(10)
  p3        String @db.Char(10)
  p4        String @db.Char(10)
  p5        String @db.Char(10)
  p6        String @db.Char(10)
  p7        String @db.Char(10)
  p8        String @db.Char(10)
  p9        String @db.Char(10)
  p10       String @db.Char(10)
  timestamp String @db.Char(10)

  @@index([keycode], map: "fkreaurcode")
}

model rebfd {
  keyrebfd  String    @id(map: "pkrebfd") @db.Char(15)
  keycmcmp  String    @db.Char(15)
  year      Int       @db.SmallInt
  startdate DateTime  @db.DateTime
  enddate   DateTime  @db.DateTime
  closedate DateTime? @db.DateTime
  closed    Int       @db.TinyInt
  endperiod Int       @default(0, map: "DF__rebfd__endperiod__560993B4") @db.TinyInt
  timestamp String    @db.Char(10)

  @@index([keycmcmp], map: "fkrebfdcmcmp")
  @@index([year, enddate, startdate], map: "inrebfd_3RD0SBKUB")
  @@index([year, enddate, startdate], map: "inrebfd_createcoding")
}

model rebud {
  keyrebud  String @id(map: "PK__rebud__2C9451DA") @db.Char(15)
  keysymdl  String @db.Char(15)
  name      String @db.Char(30)
  bucode    String @db.Char(6)
  buclosed  Int    @default(0, map: "DF__rebud__buclosed__2D887613") @db.SmallInt
  timestamp String @db.Char(10)

  @@index([keysymdl], map: "fkrebudsymdl")
}

model rebuh {
  keyrebuh  String @id(map: "pkrebuh") @db.Char(15)
  keycmcmp  String @db.Char(15)
  keyrebud  String @db.Char(15)
  year      Int    @db.SmallInt
  bu        Float  @db.Money
  orgbu     Float  @db.Money
  p1        String @db.Char(10)
  p2        String @db.Char(10)
  p3        String @db.Char(10)
  p4        String @db.Char(10)
  p5        String @db.Char(10)
  p6        String @db.Char(10)
  p7        String @db.Char(10)
  p8        String @db.Char(10)
  p9        String @db.Char(10)
  p10       String @db.Char(10)
  timestamp String @db.Char(10)

  @@index([keycmcmp], map: "fkrebuhcmcmp")
  @@index([keyrebud], map: "fkrebuhrebud")
}

model rebur {
  keyrebur  String  @id(map: "PK__rebur__66F5FD99") @db.Char(15)
  keyrebuh  String  @db.Char(15)
  year      Int     @db.SmallInt
  period    Int     @db.TinyInt
  bu        Float   @db.Money
  p1        String  @db.Char(10)
  p2        String  @db.Char(10)
  p3        String  @db.Char(10)
  p4        String  @db.Char(10)
  p5        String  @db.Char(10)
  p6        String  @db.Char(10)
  p7        String  @db.Char(10)
  p8        String  @db.Char(10)
  p9        String  @db.Char(10)
  p10       String  @db.Char(10)
  timestamp String  @db.Char(10)
  buplr     buplr[]

  @@unique([keyrebuh, year, period, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10], map: "akrebur1")
  @@index([keyrebuh], map: "fkreburrebuh")
}

model rebut {
  keyrebut  String  @id(map: "pkrebut") @db.Char(15)
  keyrebur  String  @db.Char(15)
  type      Int     @default(0, map: "DF__rebut__type__702E5ACB") @db.TinyInt
  verid     String? @db.VarChar(30)
  text      String? @db.VarChar(40)
  amount    Float   @db.Money
  orgamount Float   @db.Money
  timestamp String  @db.Char(10)

  @@index([keyrebur], map: "fkrebutrebur")
}

model reccc {
  keyreccc   String @id(map: "pkreccc") @db.Char(15)
  keyrecch   String @db.Char(15)
  keycmcmp   String @db.Char(15)
  year       Int    @db.SmallInt
  ctrlpartno Int    @db.TinyInt
  fromcode   String @db.Char(10)
  tocode     String @db.Char(10)
  timestamp  String @db.Char(10)

  @@index([keycmcmp], map: "fkreccccmcmp")
  @@index([keyrecch], map: "fkrecccrecch")
}

model recch {
  keyrecch  String @id(map: "PK__recch__18178C8A") @db.Char(15)
  type      Int
  name      String @db.Char(30)
  timestamp String @db.Char(10)
}

model recck {
  keyrecck  String  @id(map: "pkrecck") @db.Char(15)
  keyrevrt  String  @db.Char(15)
  keyrecch  String? @db.Char(15)
  type      Int     @db.TinyInt
  timestamp String  @db.Char(10)

  @@index([keyrecch], map: "fkrecckrecch")
  @@index([keyrevrt], map: "fkrecckrevrt")
}

model reccr {
  keyreccr   String  @id(map: "pkreccr") @db.Char(15)
  keyrecch   String  @db.Char(15)
  year       Int     @db.SmallInt
  partno     Int     @db.TinyInt
  part       String? @db.Char(10)
  ctrlpartno Int     @db.TinyInt
  fromcode   String  @db.Char(10)
  tocode     String  @db.Char(10)
  timestamp  String  @db.Char(10)

  @@index([keyrecch], map: "fkreccrrecch")
  @@index([year, part, partno, keyrecch], map: "inreccr_uppdaterahuvudbok")
}

model reccu {
  keyreccu   String @id(map: "pkreccu") @db.Char(15)
  keysyusr   String @db.Char(15)
  keyrecch   String @db.Char(15)
  year       Int    @db.SmallInt
  ctrlpartno Int    @db.TinyInt
  fromcode   String @db.Char(10)
  tocode     String @db.Char(10)
  timestamp  String @db.Char(10)

  @@index([keyrecch], map: "fkreccurecch")
  @@index([keysyusr], map: "fkreccusyusr")
}

model refnh {
  keyrefnh  String  @id(map: "pkrefnh") @db.Char(15)
  keysyusr  String? @db.Char(15)
  type      Int     @db.SmallInt
  year      Int?    @db.SmallInt
  name      String  @db.Char(30)
  fncode    String  @db.Char(10)
  timestamp String  @db.Char(10)

  @@index([keysyusr], map: "fkrefnhsyusr")
}

model refnk {
  keyrefnk  String @id(map: "PK__refnk__7D4F530C") @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  keyrefnh  String @db.Char(15)
  type      Int    @default(0, map: "DF__refnk__type__7E437745") @db.SmallInt
  timestamp String @db.Char(10)

  @@index([keycode], map: "fkrefnkcode")
  @@index([keydbtbl], map: "fkrefnkdbtbl")
  @@index([keycode], map: "fkrefnkkeycode")
  @@index([keydbtbl], map: "fkrefnkkeydbtbl")
  @@index([keyrefnh], map: "fkrefnkrefnh")
}

model refnr {
  keyrefnr  String @id(map: "PK__refnr__1CDC41A7") @db.Char(15)
  keyrefnh  String @db.Char(15)
  period    Int
  amount    Float  @db.Money
  perc      Float  @db.SmallMoney
  timestamp String @db.Char(10)

  @@index([keyrefnh], map: "fkrefnrrefnh")
}

model refsh {
  keyrefsh  String @id(map: "pkrefsh") @db.Char(15)
  keyrevrh  String @db.Char(15)
  keycode   String @db.Char(15)
  keydbtbl  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycode], map: "fkrefshcode")
  @@index([keydbtbl], map: "fkrefshdbtbl")
  @@index([keyrevrh], map: "fkrefshrevrh")
}

model refsl {
  keyrefsl  String  @id(map: "pkrefsl") @db.Char(15)
  keyrevrh  String  @db.Char(15)
  keyrevrr  String  @db.Char(15)
  keyrevrt  String  @db.Char(15)
  keyrektk  String? @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keydbtbl2 String? @db.Char(15)
  keycode2  String? @db.Char(15)
  keydbtbl3 String? @db.Char(15)
  keycode3  String? @db.Char(15)
  timestamp String  @db.Char(10)
  rektk     rektk?  @relation(fields: [keyrektk], references: [keyrektk], onDelete: NoAction, onUpdate: NoAction, map: "fkrefslkeyrektk")
  revrh     revrh   @relation(fields: [keyrevrh], references: [keyrevrh], onUpdate: NoAction, map: "fkrefslkeyrevrh")
  revrr     revrr   @relation(fields: [keyrevrr], references: [keyrevrr], onUpdate: NoAction, map: "fkrefslkeyrevrr")
  revrt     revrt   @relation(fields: [keyrevrt], references: [keyrevrt], onUpdate: NoAction, map: "fkrefslkeyrevrt")

  @@index([keycode], map: "fkrefslcode")
  @@index([keycode2], map: "fkrefslcode2")
  @@index([keycode3], map: "fkrefslcode3")
  @@index([keydbtbl], map: "fkrefsldbtbl")
  @@index([keydbtbl2], map: "fkrefsldbtbl2")
  @@index([keydbtbl3], map: "fkrefsldbtbl3")
  @@index([keyrektk], map: "fkrefslrektk")
  @@index([keyrevrh], map: "fkrefslrevrh")
  @@index([keyrevrr], map: "fkrefslrevrr")
  @@index([keyrevrt], map: "fkrefslrevrt")
  @@index([keydbtbl, keycode, keydbtbl2, keyrevrh], map: "inrefsl_21D0VWGFY")
  @@index([keydbtbl2, keycode2, keyrektk, keyrevrh, keyrevrr, keycode], map: "inrefsl_21D0VWGJF")
  @@index([keycode, keyrevrt, keydbtbl], map: "inrefsl_21D0VWGSJ")
  @@index([keycode, keyrevrt, keydbtbl, keyrektk], map: "inrefsl_35010MA0A")
  @@index([keydbtbl, keyrektk, keyrevrt], map: "inrefsl_35010MA2N")
  @@index([keydbtbl, keycode, keyrektk], map: "inrefsl_ocr")
  @@index([keydbtbl3, keycode3], map: "ix_refsl_keydbtbl3_keycode3")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model refsl_MH {
  keyrefsl  String  @db.Char(15)
  keyrevrh  String  @db.Char(15)
  keyrevrr  String  @db.Char(15)
  keyrevrt  String  @db.Char(15)
  keyrektk  String  @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  keydbtbl2 String? @db.Char(15)
  keycode2  String? @db.Char(15)
  keydbtbl3 String? @db.Char(15)
  keycode3  String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@ignore
}

model reibl {
  keyreibl  String @id(map: "PK__reibl__6CAED6EF") @db.Char(15)
  keycmcmp  String @db.Char(15)
  year      Int    @db.SmallInt
  p1        String @db.Char(10)
  p2        String @db.Char(10)
  p3        String @db.Char(10)
  p4        String @db.Char(10)
  p5        String @db.Char(10)
  p6        String @db.Char(10)
  p7        String @db.Char(10)
  p8        String @db.Char(10)
  p9        String @db.Char(10)
  p10       String @db.Char(10)
  ib        Float  @db.Money
  timestamp String @db.Char(10)

  @@index([keycmcmp], map: "fkreiblcmcmp")
}

model rekpc {
  keyrekpc  String @id(map: "pkrekpc") @db.Char(15)
  keyrekpg  String @db.Char(15)
  keycmcmp  String @db.Char(15)
  timestamp String @db.Char(10)
}

model rekpd {
  keyrekpd   String @id(map: "PK__rekpd__6438C128") @db.Char(15)
  partno     Int    @db.TinyInt
  name       String @db.Char(30)
  partlength Int    @db.TinyInt
  force      Int    @db.TinyInt
  regaccess  Int    @db.TinyInt
  prio       Int    @db.SmallInt
  timestamp  String @db.Char(10)
}

model rekpe {
  keyrekpe  String @id(map: "PK__rekpe__21A0F6C4") @db.Char(15)
  icaption  String @db.Char(40)
  keysytxc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keysytxc], map: "fkrekpesytxc")
}

model rekpf {
  keyrekpf  String @id(map: "PK__rekpf__22951AFD") @db.Char(15)
  keyrekpy  String @db.Char(15)
  partno    Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keyrekpy], map: "fkrekpfrekpy")
}

model rekpg {
  keyrekpg  String  @id(map: "pkrekpg") @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(40)
  timestamp String  @db.Char(10)
  rekpl     rekpl[]
}

model rekpk {
  keyrekpk  String @id(map: "PK__rekpk__23893F36") @db.Char(15)
  keyrekpe  String @db.Char(15)
  keyrekpd  String @db.Char(15)
  frompart  String @db.Char(10)
  topart    String @db.Char(10)
  timestamp String @db.Char(10)

  @@index([keyrekpd], map: "fkrekpkrekpd")
  @@index([keyrekpe], map: "fkrekpkrekpe")
}

model rekpl {
  keyrekpl  String    @id(map: "pkrekpl") @db.Char(15)
  keyrekpg  String?   @db.Char(15)
  keycmobj  String?   @db.Char(15)
  keyatway  String?   @db.Char(15)
  year      Int       @db.SmallInt
  keysyusr  String?   @db.Char(15)
  keysyusr2 String?   @db.Char(15)
  partno    Int       @db.TinyInt
  part      String?   @db.Char(10)
  name      String?   @db.Char(40)
  closed    Int       @db.TinyInt
  closedate DateTime? @db.DateTime
  fromdate  DateTime? @db.DateTime
  todate    DateTime? @db.DateTime
  prcnt     Decimal?  @db.Decimal(13, 10)
  timestamp String    @db.Char(10)
  atway     atway?    @relation(fields: [keyatway], references: [keyatway], onUpdate: NoAction, map: "fkrekplkeyatway")
  cmobj     cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkrekplkeycmobj")
  rekpg     rekpg?    @relation(fields: [keyrekpg], references: [keyrekpg], onUpdate: NoAction, map: "fkrekplkeyrekpg ")

  @@unique([year, partno, part], map: "akrekpl1")
  @@index([keyatway], map: "fkrekplatway")
  @@index([keycmobj], map: "fkrekplcmobj")
  @@index([keyrekpg], map: "fkrekplrekpg")
  @@index([keysyusr], map: "fkrekplsyusr")
  @@index([keysyusr2], map: "fkrekplsyusr2")
  @@index([partno, part, year, keyrekpl, fromdate, todate], map: "inrekpl_uppdaterahuvudbok")
}

model rekpt {
  keyrekpt  String @id(map: "PK__rekpt__257187A8") @db.Char(15)
  keyrekpl  String @db.Char(15)
  keyrekpy  String @db.Char(15)
  prcnt     Float  @db.SmallMoney
  timestamp String @db.Char(10)

  @@index([keyrekpl], map: "fkrekptrekpl")
  @@index([keyrekpy], map: "fkrekptrekpy")
  @@index([keyrekpy, keyrekpt, keyrekpl], map: "inrekpt_uppdaterahuvudbok")
}

model rekpy {
  keyrekpy  String  @id(map: "pkrekpy") @db.Char(15)
  keyrektk  String? @db.Char(15)
  year      Int     @db.SmallInt
  type      Int     @db.SmallInt
  name      String  @db.VarChar(50)
  prcnt     Decimal @db.Decimal(13, 10)
  prio      Int?    @db.SmallInt
  repabkod  Int     @default(0, map: "DF__rekpy__repabkod__4D306568") @db.TinyInt
  timestamp String  @db.Char(10)
  cmbac     cmbac[]
  cmdby     cmdby[]
  krpir     krpir[]
  rektk     rektk?  @relation(fields: [keyrektk], references: [keyrektk], onDelete: NoAction, onUpdate: NoAction, map: "fkrekpykeyrektk ")
  revrr     revrr[]

  @@unique([type, year], map: "akrekpy")
  @@index([keyrektk], map: "fkrekpyrektk")
}

model rektk {
  keyrektk  String  @id(map: "PK__rektk__2759D01A") @db.Char(15)
  typeid    Int
  name      String  @db.Char(30)
  timestamp String  @db.Char(10)
  burac     burac[]
  refsl     refsl[]
  rekpy     rekpy[]
  repsk     repsk[]
}

model remac {
  keyremac  String @id(map: "pkremac") @db.Char(15)
  keyremat  String @db.Char(15)
  keyrevrr  String @db.Char(15)
  timestamp String @db.Char(10)
  remat     remat  @relation(fields: [keyremat], references: [keyremat], onDelete: Cascade, onUpdate: NoAction, map: "fkremackeyremat")
  revrr     revrr  @relation(fields: [keyrevrr], references: [keyrevrr], onDelete: Cascade, onUpdate: NoAction, map: "fkremackeyrevrr")

  @@index([keyremat], map: "fkremacremat")
  @@index([keyrevrr], map: "fkremacrevrr")
}

model remat {
  keyremat  String   @id(map: "pkremat") @db.Char(15)
  keysyusr  String   @db.Char(15)
  code      String   @db.VarChar(10)
  caption   String?  @db.VarChar(40)
  status    Int      @db.TinyInt
  regdate   DateTime @db.DateTime
  timestamp String   @db.Char(10)
  remac     remac[]

  @@index([keysyusr], map: "fkrematsyusr")
}

model remsh {
  keyremsh  String @id(map: "PK__remsh__284DF453") @db.Char(15)
  keyrepph  String @db.Char(15)
  keyrevrh  String @db.Char(15)
  year      Int    @db.SmallInt
  period    Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keyrepph], map: "fkremshrepph")
  @@index([keyrevrh], map: "fkremshrevrh")
}

model remsr {
  keyremsr  String  @id(map: "pkremsr") @db.Char(15)
  keyremsh  String  @db.Char(15)
  keyrekpy  String  @db.Char(15)
  year      Int     @db.SmallInt
  accperiod Int     @db.SmallInt
  prcnt     Decimal @db.Decimal(13, 10)
  amount    Float   @db.Money
  timestamp String  @db.Char(10)

  @@index([keyrekpy], map: "fkremsrrekpy")
  @@index([keyremsh], map: "fkremsrremsh")
}

model repor {
  keyrepor   String  @id(map: "PK__repor__2A363CC5") @db.Char(15)
  keyrektk   String  @db.Char(15)
  keyrevrt   String  @db.Char(15)
  keyrepro   String  @db.Char(15)
  procorder  Int?
  partno     Int     @db.TinyInt
  bundledbcr Int     @db.TinyInt
  text       String? @db.Char(40)
  timestamp  String  @db.Char(10)

  @@index([keyrektk], map: "fkreporrektk")
  @@index([keyrepro], map: "fkreporrepro")
  @@index([keyrevrt], map: "fkreporrevrt")
}

model repph {
  keyrepph  String @id(map: "PK__repph__08D61451") @db.Char(15)
  keycmcmp  String @db.Char(15)
  keyrevrt  String @db.Char(15)
  keyrekpy  String @db.Char(15)
  year      Int    @db.SmallInt
  keyrepro  String @db.Char(15)
  startyear Int    @db.SmallInt
  caption   String @db.Char(21)
  groupby   Int    @db.SmallInt
  startper  Int    @db.TinyInt
  active    Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keycmcmp], map: "fkrepphcmcmp")
  @@index([keyrekpy], map: "fkrepphrekpy")
  @@index([keyrepro], map: "fkrepphrepro")
  @@index([keyrevrt], map: "fkrepphrevrt")
}

model reppl {
  keyreppl  String @id(map: "PK__reppl__0ABE5CC3") @db.Char(15)
  keyrepro  String @db.Char(15)
  keycmcmp  String @db.Char(15)
  year      Int    @db.SmallInt
  period    Int    @db.TinyInt
  runorder  Int    @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keycmcmp], map: "fkrepplcmcmp")
  @@index([keyrepro], map: "fkrepplrepro")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model reppl_am_18_19292 {
  keyreppl  String  @db.Char(15)
  keyrepro  String  @db.Char(15)
  keycmcmp  String  @db.Char(15)
  year      Int     @db.SmallInt
  period    Int     @db.TinyInt
  runorder  Int     @db.TinyInt
  timestamp String? @db.Char(10)

  @@ignore
}

model reppr {
  keyreppr  String @id(map: "PK__reppr__0CA6A535") @db.Char(15)
  keyrepph  String @db.Char(15)
  keyrekpy  String @db.Char(15)
  accperiod Int    @db.SmallInt
  timestamp String @db.Char(10)

  @@index([keyrekpy], map: "fkrepprrekpy")
  @@index([keyrepph], map: "fkrepprrepph")
}

model repro {
  keyrepro  String @id(map: "PK__repro__2E06CDA9") @db.Char(15)
  proid     Int?   @unique(map: "akrepro1") @db.SmallInt
  keysytxc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keysytxc], map: "fkreprosytxc")
}

model reprp {
  keyreprp  String @id(map: "PK__reprp__0E8EEDA7") @db.Char(15)
  keyrepor  String @db.Char(15)
  keyrekpy  String @db.Char(15)
  year      Int    @db.SmallInt
  timestamp String @db.Char(10)

  @@index([keyrekpy], map: "fkreprprekpy")
  @@index([keyrepor], map: "fkreprprepor")
}

model repsh {
  keyrepsh  String @id(map: "pkrepsh") @db.Char(15)
  keyrepsp  String @db.Char(15)
  keyrektk  String @db.Char(15)
  p1        Int    @default(0, map: "DF__repsh__p1__2170D1B2") @db.TinyInt
  p2        Int    @default(0, map: "DF__repsh__p2__2264F5EB") @db.TinyInt
  p3        Int    @default(0, map: "DF__repsh__p3__23591A24") @db.TinyInt
  p4        Int    @default(0, map: "DF__repsh__p4__244D3E5D") @db.TinyInt
  p5        Int    @default(0, map: "DF__repsh__p5__25416296") @db.TinyInt
  p6        Int    @default(0, map: "DF__repsh__p6__263586CF") @db.TinyInt
  p7        Int    @default(0, map: "DF__repsh__p7__2729AB08") @db.TinyInt
  p8        Int    @default(0, map: "DF__repsh__p8__281DCF41") @db.TinyInt
  p9        Int    @default(0, map: "DF__repsh__p9__2911F37A") @db.TinyInt
  p10       Int    @default(0, map: "DF__repsh__p10__2A0617B3") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keyrektk], map: "fkrepshrektk")
  @@index([keyrepsp], map: "fkrepshrepsp")
}

model repsk {
  keyrepsk  String  @id(map: "pkrepsk") @db.Char(15)
  keyrekpg  String? @db.Char(15)
  year      Int     @db.SmallInt
  keyrepsr  String? @db.Char(15)
  keyrekpy  String? @db.Char(15)
  keyrektk  String  @db.Char(15)
  keydbtbl  String  @db.Char(15)
  keycode   String  @db.Char(15)
  p1        String  @db.VarChar(10)
  p2        String  @db.VarChar(10)
  p3        String  @db.VarChar(10)
  p4        String  @db.VarChar(10)
  p5        String  @db.VarChar(10)
  p6        String  @db.VarChar(10)
  p7        String  @db.VarChar(10)
  p8        String  @db.VarChar(10)
  p9        String  @db.VarChar(10)
  p10       String  @db.VarChar(10)
  timestamp String  @db.Char(10)
  rektk     rektk   @relation(fields: [keyrektk], references: [keyrektk], onUpdate: NoAction, map: "fkrepskkeyrektk ")

  @@unique([keyrepsr, keyrektk, keydbtbl, keycode, year], map: "akrepsk")
  @@index([keycode], map: "fkrepskcode")
  @@index([keydbtbl], map: "fkrepskdbtbl")
  @@index([keyrekpg], map: "fkrepskrekpg")
  @@index([keyrekpy], map: "fkrepskrekpy")
  @@index([keyrektk], map: "fkrepskrektk")
  @@index([keyrepsr], map: "fkrepskrepsr")
  @@index([keycode, keyrektk, keyrepsr, year, keydbtbl], map: "inrepsk_2120SI6GA")
}

model repsp {
  keyrepsp  String @id(map: "pkrepsp") @db.Char(15)
  keyrepsy  String @db.Char(15)
  keydbtbl  String @db.Char(15)
  prio      Int    @db.SmallInt
  accable   Int    @default(0, map: "DF__repsp__accable__669AFF7C") @db.TinyInt
  fillblank Int    @default(0, map: "DF__repsp__fillblank__678F23B5") @db.TinyInt
  vatcalc   Int    @default(0, map: "DF__repsp__vatcalc__688347EE") @db.TinyInt
  timestamp String @db.Char(10)

  @@index([keydbtbl], map: "fkrepspdbtbl")
  @@index([keyrepsy], map: "fkrepsprepsy")
  @@index([keyrepsy, keydbtbl], map: "inrepsp_createcoding")
}

model repsr {
  keyrepsr   String @id(map: "pkrepsr") @db.Char(15)
  sourcetype Int    @default(0, map: "DF__repsr__sourcetyp__53080C38") @db.TinyInt
  year       Int    @db.SmallInt
  keycode    String @db.Char(15)
  timestamp  String @db.Char(10)

  @@unique([year, keycode], map: "inrepsr_year_keycode")
  @@index([keycode], map: "fkrepsrkeycode")
  @@index([year, keycode], map: "inrepsr_2AU0J5C6T")
  @@index([keycode, keyrepsr, year], map: "inrepsr_3RD0SDCGL")
  @@index([year, keycode], map: "inrepsr_3RD0SDCHM")
  @@index([keycode, keyrepsr, year], map: "inrepsr_createcoding")
}

model repst {
  keyrepst  String @id(map: "PK__repst__33BFA6FF") @db.Char(15)
  type      Int
  name      String @db.Char(30)
  keydbtbl  String @db.Char(15)
  keysytxc  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keydbtbl], map: "fkrepstdbtbl")
  @@index([keysytxc], map: "fkrepstsytxc")
}

model repsy {
  keyrepsy   String @id(map: "pkrepsy") @db.Char(15)
  keyrepsr   String @db.Char(15)
  keyrektk   String @db.Char(15)
  ktkorder   Int    @db.TinyInt
  exterpsk   Int
  calc       Int    @db.TinyInt
  ctrlpartno Int    @db.TinyInt
  keyrekpy   String @db.Char(15)
  credit     Int    @db.TinyInt
  bundle     Int    @db.TinyInt
  bundledbcr Int    @db.TinyInt
  daeb       Int    @default(0, map: "DF__repsy__daeb__4E26D725") @db.TinyInt
  timestamp  String @db.Char(10)

  @@index([keyrekpy], map: "fkrepsyrekpy")
  @@index([keyrektk], map: "fkrepsyrektk")
  @@index([keyrepsr], map: "fkrepsyrepsr")
}

model rescc {
  keyrescc  String @id(map: "pkrescc") @db.Char(15)
  keyrescp  String @db.Char(15)
  kplcode   String @db.VarChar(10)
  timestamp String @db.Char(10)
  rescp     rescp  @relation(fields: [keyrescp], references: [keyrescp], onUpdate: NoAction, map: "fkrescckeyrescp")

  @@unique([keyrescp, kplcode], map: "akrescc")
  @@index([keyrescp], map: "fkresccrescp")
}

model rescp {
  keyrescp  String  @id(map: "pkrescp") @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(120)
  timestamp String  @db.Char(10)
  rescc     rescc[]
}

model reshb {
  keyreshb  String @id(map: "PK__reshb__707F67D3") @db.Char(15)
  keycmcmp  String @db.Char(15)
  year      Int    @db.SmallInt
  period    Int    @db.TinyInt
  p1        String @db.Char(10)
  p2        String @db.Char(10)
  p3        String @db.Char(10)
  p4        String @db.Char(10)
  p5        String @db.Char(10)
  p6        String @db.Char(10)
  p7        String @db.Char(10)
  p8        String @db.Char(10)
  p9        String @db.Char(10)
  p10       String @db.Char(10)
  db        Float  @db.Money
  cr        Float  @db.Money
  timestamp String @db.Char(10)

  @@unique([p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, year, keycmcmp, period], map: "akreshb1")
}

model revrh {
  keyrevrh   String   @id(map: "pkrevrh") @db.Char(15)
  keycmcmp   String   @db.Char(15)
  keyrevrt   String   @db.Char(15)
  keyrekpy   String?  @db.Char(15)
  keysyusr   String   @db.Char(15)
  delflag    Int      @db.TinyInt
  closed     Int      @db.TinyInt
  status     Int      @db.SmallInt
  procstatus Int      @db.SmallInt
  pbstatus   Int      @db.SmallInt
  year       Int      @db.SmallInt
  period     Int      @db.TinyInt
  verid      String   @db.VarChar(30)
  text       String   @db.VarChar(40)
  accdate    DateTime @db.DateTime
  regdate    DateTime @db.DateTime
  timestamp  String   @db.Char(10)
  cmbtt      cmbtt[]
  refsl      refsl[]
  revrr      revrr[]

  @@index([keyrekpy], map: "fkrevrhrekpy")
  @@index([keyrevrt], map: "fkrevrhrevrt")
  @@index([keysyusr], map: "fkrevrhsyusr")
  @@index([keyrevrh, keycmcmp, delflag, status, keysyusr], map: "inrevrh_1RA0VIAWM")
  @@index([verid], map: "inrevrh_1RA0VIB65")
  @@index([accdate], map: "inrevrh_1RA0VIBBT")
  @@index([keyrevrh, status, pbstatus, delflag, accdate], map: "inrevrh_1RA0VIBHH")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model revrh_am_18_19292 {
  keyrevrh   String   @db.Char(15)
  keycmcmp   String   @db.Char(15)
  keyrevrt   String   @db.Char(15)
  keyrekpy   String?  @db.Char(15)
  keysyusr   String   @db.Char(15)
  delflag    Int      @db.TinyInt
  closed     Int      @db.TinyInt
  status     Int      @db.SmallInt
  procstatus Int      @db.SmallInt
  pbstatus   Int      @db.SmallInt
  year       Int      @db.SmallInt
  period     Int      @db.TinyInt
  verid      String   @db.Char(30)
  text       String   @db.Char(40)
  accdate    DateTime @db.DateTime
  regdate    DateTime @db.DateTime
  timestamp  String?  @db.Char(10)

  @@ignore
}

model revrr {
  keyrevrr  String  @id(map: "pkrevrr") @db.Char(15)
  keyrevrh  String  @db.Char(15)
  keyrekpy  String? @db.Char(15)
  keycmuni  String? @db.Char(15)
  keycmcuh  String? @db.Char(15)
  text      String  @db.Char(30)
  year      Int     @db.SmallInt
  period    Int     @db.TinyInt
  volume    Float   @db.Money
  unit      String? @db.Char(10)
  omf       Int     @db.TinyInt
  vattype   Int     @default(0, map: "DF__revrr__vattype__68FAC8F2") @db.TinyInt
  db        Float   @db.Money
  cr        Float   @db.Money
  status    Int     @db.TinyInt
  atstatus  Int     @default(0, map: "DF__revrr__atstatus__69EEED2B") @db.TinyInt
  delflag   Int     @db.TinyInt
  p1        String  @db.Char(10)
  p2        String  @db.Char(10)
  p3        String  @db.Char(10)
  p4        String  @db.Char(10)
  p5        String  @db.Char(10)
  p6        String  @db.Char(10)
  p7        String  @db.Char(10)
  p8        String  @db.Char(10)
  p9        String  @db.Char(10)
  p10       String  @db.Char(10)
  timestamp String  @db.Char(10)
  prmtr     prmtr[]
  refsl     refsl[]
  remac     remac[]
  cmcuh     cmcuh?  @relation(fields: [keycmcuh], references: [keycmcuh], onDelete: NoAction, onUpdate: NoAction, map: "fkrevrrkeycmcuh ")
  cmuni     cmuni?  @relation(fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkrevrrkeycmuni ")
  rekpy     rekpy?  @relation(fields: [keyrekpy], references: [keyrekpy], onDelete: NoAction, onUpdate: NoAction, map: "fkrevrrkeyrekpy")
  revrh     revrh   @relation(fields: [keyrevrh], references: [keyrevrh], onDelete: Cascade, onUpdate: NoAction, map: "fkrevrrkeyrevrh")

  @@index([keyrekpy], map: "fkrevrrrekpy")
  @@index([keyrevrh], map: "fkrevrrrevrh")
  @@index([year, period, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10], map: "inrevrr_23D0SGMH6")
  @@index([keyrevrr, keyrevrh, delflag, db], map: "inrevrr_23D0SGMXO")
  @@index([delflag, p1, p2, p3, p4, p5, keyrevrh], map: "inrevrr_23D0SGNEL")
  @@index([keyrevrh, keyrevrr, p2, delflag], map: "inrevrr_momsrapport")
  @@index([p1], map: "inrevrr_p1")
}

model revrt {
  keyrevrt  String  @id(map: "pkrevrt") @db.Char(15)
  keysymdl  String  @db.Char(15)
  keycmrtn  String? @db.Char(15)
  keyatway  String? @db.Char(15)
  typeid    Int     @unique(map: "akrevrt1") @db.SmallInt
  name      String? @db.VarChar(30)
  forcectrl Int     @db.TinyInt
  setverid  Int     @db.SmallInt
  connctrl  Int     @db.TinyInt
  accctrl   Int     @db.TinyInt
  accctrl2  Int     @db.TinyInt
  fadbtqty  Int     @db.SmallInt
  dirupdacc Int     @db.TinyInt
  bundlevrr Int     @default(0, map: "DF__revrt__bundlevrr__43144BD5") @db.TinyInt
  vrtused   Int     @db.TinyInt
  repabkod  Int     @db.TinyInt
  timestamp String  @db.Char(10)
  burac     burac[]
  burad     burad[]
  faprn     faprn[]
  kragk     kragk[]
  kramp     kramp[]
  krfkh     krfkh[]
  krpir     krpir[]
  lnvrt     lnvrt[]
  refsl     refsl[]
  atway     atway?  @relation(fields: [keyatway], references: [keyatway], onUpdate: NoAction, map: "fkrevrtkeyatway")
  cmrtn     cmrtn?  @relation(fields: [keycmrtn], references: [keycmrtn], onDelete: NoAction, onUpdate: NoAction, map: "fkrevrtkeycmrtn ")

  @@index([keyatway], map: "fkrevrtatway")
  @@index([keycmrtn], map: "fkrevrtcmrtn")
  @@index([keysymdl], map: "fkrevrtsymdl")
  @@index([keyrevrt, name, typeid], map: "inrevrt_2CL0W1RQI")
}

model revrx {
  keyrevrx  String @id(map: "PK__revrx__3A6CA48E") @db.Char(15)
  text      String @db.Char(40)
  timestamp String @db.Char(10)
}

model scane {
  keyscane  String @id(map: "pkscane") @db.Char(15)
  keyfbanp  String @db.Char(15)
  keysceft  String @db.Char(15)
  timestamp String @db.Char(10)
  fbanp     fbanp  @relation(fields: [keyfbanp], references: [keyfbanp], onDelete: Cascade, onUpdate: NoAction, map: "fkscanekeyfbanp ")
  sceft     sceft  @relation(fields: [keysceft], references: [keysceft], onDelete: Cascade, onUpdate: NoAction, map: "fkscanekeysceft ")

  @@unique([keyfbanp, keysceft], map: "akscane")
}

model scchr {
  keyscchr   String    @id(map: "pkscchr") @db.Char(15)
  keysccht   String    @db.Char(15)
  keysceft   String?   @db.Char(15)
  keyfbbes   String    @db.Char(15)
  keyfbanp   String?   @db.Char(15)
  code       String    @db.VarChar(10)
  caption    String?   @db.VarChar(100)
  chgdate    DateTime? @db.Date
  note       String?   @db.VarChar(Max)
  status     Int?      @db.TinyInt
  effect     Int       @default(0, map: "DF__scchr__effect__510343D0") @db.TinyInt
  remcost    Float     @default(0, map: "DF__scchr__remcost__51F76809") @db.Money
  fixdate    DateTime? @db.Date
  generatepu Int       @default(0, map: "DF__scchr__generatep__52EB8C42") @db.TinyInt
  timestamp  String    @db.Char(10)
  fbanp      fbanp?    @relation(fields: [keyfbanp], references: [keyfbanp], onUpdate: NoAction, map: "fkscchrkeyfbanp")
  fbbes      fbbes     @relation(fields: [keyfbbes], references: [keyfbbes], onDelete: Cascade, onUpdate: NoAction, map: "fkscchrkeyfbbes")
  sccht      sccht     @relation(fields: [keysccht], references: [keysccht], onUpdate: NoAction, map: "fkscchrkeysccht ")
  sceft      sceft?    @relation(fields: [keysceft], references: [keysceft], onUpdate: NoAction, map: "fkscchrkeysceft ")

  @@index([keyfbanp], map: "fkscchrfbanp")
  @@index([keyfbbes], map: "fkscchrfbbes")
  @@index([keysccht], map: "fkscchrsccht")
  @@index([keysceft], map: "fkscchrsceft")
}

model sccht {
  keysccht  String  @id(map: "pksccht") @db.Char(15)
  caption   String  @unique(map: "aksccht1") @db.VarChar(60)
  sysstd    Int     @default(0, map: "DF__sccht__sysstd__4E361870") @db.TinyInt
  timestamp String  @db.Char(10)
  scchr     scchr[]
}

model sccsv {
  keysccsv   String   @id(map: "pksccsv") @db.Char(15)
  keyfbbes   String   @unique(map: "aksccsv") @db.Char(15)
  statustech Decimal? @db.Decimal(3, 2)
  statusclim Decimal? @db.Decimal(3, 2)
  statusfunc Decimal? @db.Decimal(3, 2)
  timestamp  String   @db.Char(10)
  fbbes      fbbes    @relation(fields: [keyfbbes], references: [keyfbbes], onDelete: Cascade, onUpdate: NoAction, map: "fksccsvkeyfbbes ")
}

model sceft {
  keysceft  String  @id(map: "pksceft") @db.Char(15)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  fbanm     fbanm[]
  scane     scane[]
  scchr     scchr[]
}

model skafa {
  keyskafa  String  @id(map: "pkskafa") @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(120)
  repabkod  Int     @default(0, map: "DF__skafa__repabkod__0806056A") @db.TinyInt
  timestamp String  @db.Char(10)
  aopsa     aopsa[]
  aoupp     aoupp[]
  skatg     skatg[]
}

model skafb {
  keyskafb  String  @id(map: "pkskafb") @db.Char(15)
  keyskafa  String  @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(120)
  repabkod  Int     @default(0, map: "DF__skafb__repabkod__0AE27215") @db.TinyInt
  timestamp String  @db.Char(10)
  aobsb     aobsb[]
  aoupp     aoupp[]
  prmtr     prmtr[]
  skatg     skatg[]

  @@index([keyskafa], map: "fkskafbskafa")
}

model skafc {
  keyskafc  String  @id(map: "pkskafc") @db.Char(15)
  keyskafb  String  @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String  @db.VarChar(120)
  repabkod  Int     @default(0, map: "DF__skafc__repabkod__0DBEDEC0") @db.TinyInt
  timestamp String  @db.Char(10)
  aodsc     aodsc[]
  aofsc     aofsc[]
  aoupp     aoupp[]
  skatg     skatg[]

  @@index([keyskafb], map: "fkskafcskafb")
}

model skaok {
  keyskaok  String   @id(map: "pkskaok") @db.Char(15)
  keyskund  String   @db.Char(15)
  keyaoupr  String   @db.Char(15)
  atgdate   DateTime @db.DateTime
  timestamp String   @db.Char(10)
  aoupr     aoupr    @relation(fields: [keyaoupr], references: [keyaoupr], onDelete: Cascade, onUpdate: NoAction, map: "fkskaokkeyaoupr ")
  skund     skund    @relation(fields: [keyskund], references: [keyskund], onDelete: Cascade, onUpdate: NoAction, map: "fkskaokkeyskund")

  @@index([keyaoupr], map: "fkskaokaoupr")
  @@index([keyskund, atgdate], map: "inskaok1")
}

model skatc {
  keyskatc  String  @id(map: "pkskatc") @db.Char(15)
  keyskatg  String  @db.Char(15)
  keyskatt  String? @db.Char(15)
  keycmobj  String? @db.Char(15)
  keyhyobj  String? @db.Char(15)
  text      String? @db.VarChar(200)
  liability Int     @default(0, map: "DF__skatc__liability__7EFAB89E") @db.TinyInt
  timestamp String  @db.Char(10)
  cmobj     cmobj?  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkskatckeycmobj")
  hyobj     hyobj?  @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkskatckeyhyobj")
  skatg     skatg   @relation(fields: [keyskatg], references: [keyskatg], onUpdate: NoAction, map: "fkskatckeyskatg")
  skatt     skatt?  @relation(fields: [keyskatt], references: [keyskatt], onDelete: Cascade, onUpdate: NoAction, map: "fkskatckeyskatt")

  @@index([keycmobj], map: "fkskatccmobj")
  @@index([keyhyobj], map: "fkskatchyobj")
  @@index([keyskatg], map: "fkskatcskatg")
  @@index([keyskatt], map: "fkskatcskatt")
}

model skatg {
  keyskatg                     String   @id(map: "pkskatg") @db.Char(15)
  keyskgrp                     String   @db.Char(15)
  keyskyrk                     String   @db.Char(15)
  keyskegr                     String?  @db.Char(15)
  keycmuni                     String?  @db.Char(15)
  keyskdmv                     String?  @db.Char(15)
  keyskdmd                     String?  @db.Char(15)
  keyskdmv2                    String?  @db.Char(15)
  keyskdmd2                    String?  @db.Char(15)
  keyskafa                     String?  @db.Char(15)
  keyskafb                     String?  @db.Char(15)
  keyskafc                     String?  @db.Char(15)
  keyskpri                     String?  @db.Char(15)
  atgard                       String   @db.Char(30)
  text1                        String?  @db.Char(40)
  text2                        String?  @db.Char(40)
  klartext                     String?  @db.Char(40)
  tidovriga                    Decimal? @db.Decimal(9, 3)
  faktor                       Decimal? @db.Decimal(4, 2)
  timedec                      Decimal  @default(0, map: "DF__skatg__timedec__260DF8D3") @db.Decimal(4, 2)
  mtrlpris                     Float?   @db.Money
  pris                         Float?   @db.Money
  prioritet                    Int?     @db.TinyInt
  owntime                      Decimal? @db.Decimal(8, 2)
  boughttime                   Decimal? @db.Decimal(8, 2)
  extservice                   Float?   @db.Money
  skundused                    Int      @default(1, map: "DF__skatg__skundused__27021D0C") @db.TinyInt
  skunkused                    Int      @default(1, map: "DF__skatg__skunkused__27F64145") @db.TinyInt
  actiontype                   Int      @default(1, map: "DF__skatg__actiontyp__28EA657E") @db.TinyInt
  repabkod                     Int      @db.TinyInt
  timestamp                    String   @db.Char(10)
  skatc                        skatc[]
  cmuni                        cmuni?   @relation(fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeycmuni ")
  skafa                        skafa?   @relation(fields: [keyskafa], references: [keyskafa], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeyskafa ")
  skafb                        skafb?   @relation(fields: [keyskafb], references: [keyskafb], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeyskafb ")
  skafc                        skafc?   @relation(fields: [keyskafc], references: [keyskafc], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeyskafc ")
  skdmd_skatg_keyskdmdToskdmd  skdmd?   @relation("skatg_keyskdmdToskdmd", fields: [keyskdmd], references: [keyskdmd], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeyskdmd ")
  skdmd_skatg_keyskdmd2Toskdmd skdmd?   @relation("skatg_keyskdmd2Toskdmd", fields: [keyskdmd2], references: [keyskdmd], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeyskdmd2 ")
  skdmv_skatg_keyskdmvToskdmv  skdmv?   @relation("skatg_keyskdmvToskdmv", fields: [keyskdmv], references: [keyskdmv], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeyskdmv ")
  skdmv_skatg_keyskdmv2Toskdmv skdmv?   @relation("skatg_keyskdmv2Toskdmv", fields: [keyskdmv2], references: [keyskdmv], onUpdate: NoAction, map: "fkskatgkeyskdmv2 ")
  skegr                        skegr?   @relation(fields: [keyskegr], references: [keyskegr], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeyskegr ")
  skgrp                        skgrp    @relation(fields: [keyskgrp], references: [keyskgrp], onUpdate: NoAction, map: "fkskatgkeyskgrp ")
  skpri                        skpri?   @relation(fields: [keyskpri], references: [keyskpri], onDelete: NoAction, onUpdate: NoAction, map: "fkskatgkeyskpri ")
  skyrk                        skyrk    @relation(fields: [keyskyrk], references: [keyskyrk], onUpdate: NoAction, map: "fkskatgkeyskyrk ")
  skpin                        skpin[]
  skund                        skund[]
  skunk                        skunk[]
  stund                        stund[]

  @@index([keycmuni], map: "fkskatgcmuni")
  @@index([keyskafa], map: "fkskatgskafa")
  @@index([keyskafb], map: "fkskatgskafb")
  @@index([keyskafc], map: "fkskatgskafc")
  @@index([keyskdmd], map: "fkskatgskdmd")
  @@index([keyskdmd2], map: "fkskatgskdmd2")
  @@index([keyskdmv], map: "fkskatgskdmv")
  @@index([keyskdmv2], map: "fkskatgskdmv2")
  @@index([keyskegr], map: "fkskatgskegr")
  @@index([keyskgrp], map: "fkskatgskgrp")
  @@index([keyskpri], map: "fkskatgskpri")
  @@index([keyskyrk], map: "fkskatgskyrk")
}

model skatt {
  keyskatt  String  @id(map: "pkskatt") @db.Char(15)
  caption   String  @unique(map: "akskatt") @db.VarChar(100)
  sortorder Int     @default(0, map: "DF__skatt__sortorder__400B7474") @db.SmallInt
  timestamp String  @db.Char(10)
  skatc     skatc[]
}

model skbom {
  keyskbom  String   @id(map: "pkskbom") @db.Char(15)
  code      String   @db.VarChar(10)
  caption   String?  @db.VarChar(30)
  datum     DateTime @db.DateTime
  antal     Int      @default(0, map: "DF__skbom__antal__520189AA")
  timestamp String   @db.Char(10)
  skbor     skbor[]
}

model skbor {
  keyskbor  String @id(map: "pkskbor") @db.Char(15)
  keyskbom  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkskborkeycmobj")
  skbom     skbom  @relation(fields: [keyskbom], references: [keyskbom], onDelete: Cascade, onUpdate: NoAction, map: "fkskborkeyskbom ")

  @@index([keycmobj], map: "fkskborcmobj")
  @@index([keyskbom], map: "fkskborskbom")
}

model skdmd {
  keyskdmd                     String  @id(map: "pkskdmd") @db.Char(15)
  caption                      String  @unique(map: "akskdmd") @db.VarChar(60)
  d1                           Int     @default(0, map: "DF__skdmd__d1__54DDF655") @db.TinyInt
  d2                           Int     @default(0, map: "DF__skdmd__d2__55D21A8E") @db.TinyInt
  d3                           Int     @default(0, map: "DF__skdmd__d3__56C63EC7") @db.TinyInt
  d4                           Int     @default(0, map: "DF__skdmd__d4__57BA6300") @db.TinyInt
  d5                           Int     @default(0, map: "DF__skdmd__d5__58AE8739") @db.TinyInt
  d6                           Int     @default(0, map: "DF__skdmd__d6__59A2AB72") @db.TinyInt
  d7                           Int     @default(0, map: "DF__skdmd__d7__5A96CFAB") @db.TinyInt
  timestamp                    String  @db.Char(10)
  skatg_skatg_keyskdmdToskdmd  skatg[] @relation("skatg_keyskdmdToskdmd")
  skatg_skatg_keyskdmd2Toskdmd skatg[] @relation("skatg_keyskdmd2Toskdmd")
  skdmv                        skdmv[]
  skpin                        skpin[]
  skund                        skund[]
}

model skdmv {
  keyskdmv                     String  @id(map: "pkskdmv") @db.Char(15)
  keyskdmd                     String? @db.Char(15)
  caption                      String  @unique(map: "akskdmv") @db.VarChar(60)
  v1                           Int     @default(0, map: "DF__skdmv__v1__4BA991D6") @db.TinyInt
  v3                           Int     @default(0, map: "DF__skdmv__v3__4C9DB60F") @db.TinyInt
  v4                           Int     @default(0, map: "DF__skdmv__v4__4D91DA48") @db.TinyInt
  v5                           Int     @default(0, map: "DF__skdmv__v5__4E85FE81") @db.TinyInt
  v6                           Int     @default(0, map: "DF__skdmv__v6__4F7A22BA") @db.TinyInt
  v7                           Int     @default(0, map: "DF__skdmv__v7__506E46F3") @db.TinyInt
  v8                           Int     @default(0, map: "DF__skdmv__v8__51626B2C") @db.TinyInt
  v9                           Int     @default(0, map: "DF__skdmv__v9__52568F65") @db.TinyInt
  v10                          Int     @default(0, map: "DF__skdmv__v10__534AB39E") @db.TinyInt
  v11                          Int     @default(0, map: "DF__skdmv__v11__543ED7D7") @db.TinyInt
  v12                          Int     @default(0, map: "DF__skdmv__v12__5532FC10") @db.TinyInt
  v13                          Int     @default(0, map: "DF__skdmv__v13__56272049") @db.TinyInt
  v14                          Int     @default(0, map: "DF__skdmv__v14__571B4482") @db.TinyInt
  v2                           Int     @default(0, map: "DF__skdmv__v2__580F68BB") @db.TinyInt
  v15                          Int     @default(0, map: "DF__skdmv__v15__59038CF4") @db.TinyInt
  v16                          Int     @default(0, map: "DF__skdmv__v16__59F7B12D") @db.TinyInt
  v17                          Int     @default(0, map: "DF__skdmv__v17__5AEBD566") @db.TinyInt
  v18                          Int     @default(0, map: "DF__skdmv__v18__5BDFF99F") @db.TinyInt
  v19                          Int     @default(0, map: "DF__skdmv__v19__5CD41DD8") @db.TinyInt
  v20                          Int     @default(0, map: "DF__skdmv__v20__5DC84211") @db.TinyInt
  v21                          Int     @default(0, map: "DF__skdmv__v21__5EBC664A") @db.TinyInt
  v22                          Int     @default(0, map: "DF__skdmv__v22__5FB08A83") @db.TinyInt
  v23                          Int     @default(0, map: "DF__skdmv__v23__60A4AEBC") @db.TinyInt
  v24                          Int     @default(0, map: "DF__skdmv__v24__6198D2F5") @db.TinyInt
  v25                          Int     @default(0, map: "DF__skdmv__v25__628CF72E") @db.TinyInt
  v26                          Int     @default(0, map: "DF__skdmv__v26__63811B67") @db.TinyInt
  v27                          Int     @default(0, map: "DF__skdmv__v27__64753FA0") @db.TinyInt
  v28                          Int     @default(0, map: "DF__skdmv__v28__656963D9") @db.TinyInt
  v29                          Int     @default(0, map: "DF__skdmv__v29__665D8812") @db.TinyInt
  v30                          Int     @default(0, map: "DF__skdmv__v30__6751AC4B") @db.TinyInt
  v31                          Int     @default(0, map: "DF__skdmv__v31__6845D084") @db.TinyInt
  v32                          Int     @default(0, map: "DF__skdmv__v32__6939F4BD") @db.TinyInt
  v33                          Int     @default(0, map: "DF__skdmv__v33__6A2E18F6") @db.TinyInt
  v34                          Int     @default(0, map: "DF__skdmv__v34__6B223D2F") @db.TinyInt
  v35                          Int     @default(0, map: "DF__skdmv__v35__6C166168") @db.TinyInt
  v36                          Int     @default(0, map: "DF__skdmv__v36__6D0A85A1") @db.TinyInt
  v37                          Int     @default(0, map: "DF__skdmv__v37__6DFEA9DA") @db.TinyInt
  v38                          Int     @default(0, map: "DF__skdmv__v38__6EF2CE13") @db.TinyInt
  v39                          Int     @default(0, map: "DF__skdmv__v39__6FE6F24C") @db.TinyInt
  v40                          Int     @default(0, map: "DF__skdmv__v40__70DB1685") @db.TinyInt
  v41                          Int     @default(0, map: "DF__skdmv__v41__71CF3ABE") @db.TinyInt
  v42                          Int     @default(0, map: "DF__skdmv__v42__72C35EF7") @db.TinyInt
  v43                          Int     @default(0, map: "DF__skdmv__v43__73B78330") @db.TinyInt
  v44                          Int     @default(0, map: "DF__skdmv__v44__74ABA769") @db.TinyInt
  v45                          Int     @default(0, map: "DF__skdmv__v45__759FCBA2") @db.TinyInt
  v46                          Int     @default(0, map: "DF__skdmv__v46__7693EFDB") @db.TinyInt
  v47                          Int     @default(0, map: "DF__skdmv__v47__77881414") @db.TinyInt
  v48                          Int     @default(0, map: "DF__skdmv__v48__787C384D") @db.TinyInt
  v49                          Int     @default(0, map: "DF__skdmv__v49__79705C86") @db.TinyInt
  v50                          Int     @default(0, map: "DF__skdmv__v50__7A6480BF") @db.TinyInt
  v51                          Int     @default(0, map: "DF__skdmv__v51__7B58A4F8") @db.TinyInt
  v52                          Int     @default(0, map: "DF__skdmv__v52__7C4CC931") @db.TinyInt
  v53                          Int     @default(0, map: "DF__skdmv__v53__7D40ED6A") @db.TinyInt
  timestamp                    String  @db.Char(10)
  skatg_skatg_keyskdmvToskdmv  skatg[] @relation("skatg_keyskdmvToskdmv")
  skatg_skatg_keyskdmv2Toskdmv skatg[] @relation("skatg_keyskdmv2Toskdmv")
  skdmd                        skdmd?  @relation(fields: [keyskdmd], references: [keyskdmd], onDelete: NoAction, onUpdate: NoAction, map: "fkskdmvkeyskdmd ")
  skpin                        skpin[]
  skund                        skund[]

  @@index([keyskdmd], map: "fkskdmvskdmd")
}

model skegr {
  keyskegr  String  @id(map: "pkskegr") @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)
  skatg     skatg[]
  skund     skund[]
}

model skgrp {
  keyskgrp  String  @id(map: "pkskgrp") @db.Char(15)
  keybaret  String  @db.Char(15)
  caption   String  @unique(map: "akskgrp") @db.VarChar(30)
  stundused Int     @default(0, map: "DF__skgrp__stundused__01117E4E") @db.TinyInt
  repabkod  Int     @default(0, map: "DF__skgrp__repabkod__0205A287") @db.TinyInt
  timestamp String  @db.Char(10)
  skatg     skatg[]
  baret     baret   @relation(fields: [keybaret], references: [keybaret], onUpdate: NoAction, map: "fkskgrpkeybaret")
  skund     skund[]

  @@index([keybaret], map: "fkskgrpbaret")
}

model skkal {
  keyskkal   String   @id(map: "pkskkal") @db.Char(15)
  keysyusr   String?  @db.Char(15)
  keycmobj   String   @db.Char(15)
  keycmctc   String?  @db.Char(15)
  keycmvat   String   @db.Char(15)
  code       String   @unique(map: "akskkal") @db.VarChar(10)
  caption    String?  @db.VarChar(60)
  tenderdate DateTime @db.DateTime
  tenderto   DateTime @db.DateTime
  accr       Int      @default(0, map: "DF__skkal__accr__05D6336B") @db.TinyInt
  accw       Int      @default(0, map: "DF__skkal__accw__06CA57A4") @db.TinyInt
  status     Int      @default(0, map: "DF__skkal__status__07BE7BDD") @db.TinyInt
  timestamp  String   @db.Char(10)
  cmctc      cmctc?   @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkskkalkeycmctc")
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkskkalkeycmobj")
  cmvat      cmvat    @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkskkalkeycmvat ")
  skkav      skkav[]

  @@index([keycmctc], map: "fkskkalcmctc")
  @@index([keycmobj], map: "fkskkalcmobj")
  @@index([keycmvat], map: "fkskkalcmvat")
  @@index([keysyusr], map: "fkskkalsyusr")
}

model skkav {
  keyskkav  String  @id(map: "pkskkav") @db.Char(15)
  keyskkal  String  @db.Char(15)
  keysyusr  String? @db.Char(15)
  keycmvat  String  @db.Char(15)
  code      String  @db.VarChar(10)
  caption   String? @db.VarChar(60)
  status    Int     @default(0, map: "DF__skkav__status__0D775533") @db.TinyInt
  timestamp String  @db.Char(10)
  cmvat     cmvat   @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkskkavkeycmvat ")
  skkal     skkal   @relation(fields: [keyskkal], references: [keyskkal], onDelete: Cascade, onUpdate: NoAction, map: "fkskkavkeyskkal ")
  skkos     skkos[]
  skpas     skpas[]
  skunk     skunk[]
  skykk     skykk[]

  @@unique([keyskkal, code], map: "akskkav")
  @@index([keycmvat], map: "fkskkavcmvat")
  @@index([keysyusr], map: "fkskkavsyusr")
}

model skkos {
  keyskkos  String   @id(map: "pkskkos") @db.Char(15)
  keyskkav  String   @db.Char(15)
  keyskkot  String   @db.Char(15)
  antal     Decimal? @db.Decimal(9, 1)
  apris     Float?   @db.Money
  summa     Float?   @db.Money
  text      String?  @db.VarChar(60)
  sortorder Int      @default(0, map: "DF__skkos__sortorder__373884D5") @db.TinyInt
  timestamp String   @db.Char(10)
  skkav     skkav    @relation(fields: [keyskkav], references: [keyskkav], onDelete: Cascade, onUpdate: NoAction, map: "fkskkoskeyskkav ")
  skkot     skkot    @relation(fields: [keyskkot], references: [keyskkot], onUpdate: NoAction, map: "fkskkoskeyskkot ")

  @@index([keyskkav], map: "fkskkosskkav")
  @@index([keyskkot], map: "fkskkosskkot")
}

model skkot {
  keyskkot  String  @id(map: "pkskkot") @db.Char(15)
  keycmuni  String? @db.Char(15)
  code      String  @unique(map: "akskkot") @db.VarChar(10)
  caption   String? @db.VarChar(30)
  apris     Float?  @db.Money
  timestamp String  @db.Char(10)
  skkos     skkos[]
  cmuni     cmuni?  @relation(fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkskkotkeycmuni ")
  stkos     stkos[]

  @@index([keycmuni], map: "fkskkotcmuni")
}

model skpas {
  keyskpas  String  @id(map: "pkskpas") @db.Char(15)
  keyskpat  String  @db.Char(15)
  keyskkav  String  @db.Char(15)
  paslag    Decimal @db.Decimal(6, 2)
  text      String? @db.VarChar(60)
  sortorder Int     @default(0, map: "DF__skpas__sortorder__151876FB") @db.TinyInt
  timestamp String  @db.Char(10)
  skkav     skkav   @relation(fields: [keyskkav], references: [keyskkav], onDelete: Cascade, onUpdate: NoAction, map: "fkskpaskeyskkav ")
  skpat     skpat   @relation(fields: [keyskpat], references: [keyskpat], onUpdate: NoAction, map: "fkskpaskeyskpat ")

  @@index([keyskkav], map: "fkskpasskkav")
  @@index([keyskpat], map: "fkskpasskpat")
}

model skpat {
  keyskpat   String   @id(map: "pkskpat") @db.Char(15)
  code       String   @unique(map: "akskpat") @db.VarChar(10)
  caption    String   @db.VarChar(30)
  paslag     Decimal? @db.Decimal(6, 2)
  anvandning Int      @db.TinyInt
  ackumulera Int?     @db.TinyInt
  timestamp  String   @db.Char(10)
  skpas      skpas[]
  stpas      stpas[]
}

model skpin {
  keyskpin  String  @id(map: "pkskpin") @db.Char(15)
  keyskpkt  String  @db.Char(15)
  keyskatg  String  @db.Char(15)
  keyskyrk  String? @db.Char(15)
  keyskdmv  String? @db.Char(15)
  keyskdmd  String? @db.Char(15)
  keycmvat  String? @db.Char(15)
  mangd     Decimal @db.Decimal(9, 1)
  prioritet Int     @default(0, map: "DF__skpin__prioritet__3BFD39F2") @db.TinyInt
  timestamp String  @db.Char(10)
  cmvat     cmvat?  @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkskpinkeycmvat ")
  skatg     skatg   @relation(fields: [keyskatg], references: [keyskatg], onUpdate: NoAction, map: "fkskpinkeyskatg ")
  skdmd     skdmd?  @relation(fields: [keyskdmd], references: [keyskdmd], onDelete: NoAction, onUpdate: NoAction, map: "fkskpinkeyskdmd ")
  skdmv     skdmv?  @relation(fields: [keyskdmv], references: [keyskdmv], onDelete: NoAction, onUpdate: NoAction, map: "fkskpinkeyskdmv ")
  skpkt     skpkt   @relation(fields: [keyskpkt], references: [keyskpkt], onDelete: Cascade, onUpdate: NoAction, map: "fkskpinkeyskpkt ")
  skyrk     skyrk?  @relation(fields: [keyskyrk], references: [keyskyrk], onDelete: NoAction, onUpdate: NoAction, map: "fkskpinkeyskyrk")

  @@index([keycmvat], map: "fkskpincmvat")
  @@index([keyskatg], map: "fkskpinskatg")
  @@index([keyskdmd], map: "fkskpinskdmd")
  @@index([keyskdmv], map: "fkskpinskdmv")
  @@index([keyskpkt], map: "fkskpinskpkt")
  @@index([keyskyrk], map: "fkskpinskyrk")
}

model skpkt {
  keyskpkt  String  @id(map: "pkskpkt") @db.Char(15)
  code      String  @unique(map: "akskpkt") @db.VarChar(30)
  caption   String? @db.VarChar(50)
  timestamp String  @db.Char(10)
  skpin     skpin[]
}

model skpri {
  keyskpri  String  @id(map: "pkskpri") @db.Char(15)
  code      String  @unique(map: "akskpri") @db.VarChar(10)
  caption   String  @db.VarChar(30)
  timestamp String  @db.Char(10)
  skatg     skatg[]
  skund     skund[]
}

model skund {
  keyskund   String    @id(map: "pkskund") @db.Char(15)
  keyskatg   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keyskgrp   String    @db.Char(15)
  keyskyrk   String?   @db.Char(15)
  keyskdmv   String?   @db.Char(15)
  keyskdmd   String?   @db.Char(15)
  keycmvat   String?   @db.Char(15)
  keyskegr   String?   @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keycmrgr   String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyskpri   String?   @db.Char(15)
  mangd      Decimal?  @db.Decimal(9, 1)
  prioritet  Int?      @db.TinyInt
  svarighet  Decimal?  @db.Decimal(4, 2)
  text       String?   @db.VarChar(30)
  timeunit   Int       @default(0, map: "DF__skund__timeunit__76478994") @db.SmallInt
  period     Int?      @db.TinyInt
  fdate      DateTime? @db.DateTime
  tdate      DateTime? @db.DateTime
  owntime    Decimal?  @db.Decimal(8, 2)
  boughttime Decimal?  @db.Decimal(8, 2)
  extservice Float?    @db.Money
  mtrlpris   Float?    @db.Money
  v1         Int       @db.TinyInt
  v2         Int       @db.TinyInt
  v3         Int       @db.TinyInt
  v4         Int       @db.TinyInt
  v5         Int       @db.TinyInt
  v6         Int       @db.TinyInt
  v7         Int       @db.TinyInt
  v8         Int       @db.TinyInt
  v9         Int       @db.TinyInt
  v10        Int       @db.TinyInt
  v11        Int       @db.TinyInt
  v12        Int       @db.TinyInt
  v13        Int       @db.TinyInt
  v14        Int       @db.TinyInt
  v15        Int       @db.TinyInt
  v16        Int       @db.TinyInt
  v17        Int       @db.TinyInt
  v18        Int       @db.TinyInt
  v19        Int       @db.TinyInt
  v20        Int       @db.TinyInt
  v21        Int       @db.TinyInt
  v22        Int       @db.TinyInt
  v23        Int       @db.TinyInt
  v24        Int       @db.TinyInt
  v25        Int       @db.TinyInt
  v26        Int       @db.TinyInt
  v27        Int       @db.TinyInt
  v28        Int       @db.TinyInt
  v29        Int       @db.TinyInt
  v30        Int       @db.TinyInt
  v31        Int       @db.TinyInt
  v32        Int       @db.TinyInt
  v33        Int       @db.TinyInt
  v34        Int       @db.TinyInt
  v35        Int       @db.TinyInt
  v36        Int       @db.TinyInt
  v37        Int       @db.TinyInt
  v38        Int       @db.TinyInt
  v39        Int       @db.TinyInt
  v40        Int       @db.TinyInt
  v41        Int       @db.TinyInt
  v42        Int       @db.TinyInt
  v43        Int       @db.TinyInt
  v44        Int       @db.TinyInt
  v45        Int       @db.TinyInt
  v46        Int       @db.TinyInt
  v47        Int       @db.TinyInt
  v48        Int       @db.TinyInt
  v49        Int       @db.TinyInt
  v50        Int       @db.TinyInt
  v51        Int       @db.TinyInt
  v52        Int       @db.TinyInt
  v53        Int       @db.TinyInt
  d1         Int       @db.TinyInt
  d2         Int       @db.TinyInt
  d3         Int       @db.TinyInt
  d4         Int       @db.TinyInt
  d5         Int       @db.TinyInt
  d6         Int       @db.TinyInt
  d7         Int       @db.TinyInt
  timestamp  String    @db.Char(10)
  skaok      skaok[]
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkskundkeycmctc")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkskundkeycmobj ")
  cmrgr      cmrgr?    @relation(fields: [keycmrgr], references: [keycmrgr], onDelete: NoAction, onUpdate: NoAction, map: "fkskundkeycmrgr ")
  cmvat      cmvat?    @relation(fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkskundkeycmvat ")
  hyobj      hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkskundkeyhyobj")
  skatg      skatg     @relation(fields: [keyskatg], references: [keyskatg], onUpdate: NoAction, map: "fkskundkeyskatg ")
  skdmd      skdmd?    @relation(fields: [keyskdmd], references: [keyskdmd], onDelete: NoAction, onUpdate: NoAction, map: "fkskundkeyskdmd ")
  skdmv      skdmv?    @relation(fields: [keyskdmv], references: [keyskdmv], onDelete: NoAction, onUpdate: NoAction, map: "fkskundkeyskdmv ")
  skegr      skegr?    @relation(fields: [keyskegr], references: [keyskegr], onDelete: NoAction, onUpdate: NoAction, map: "fkskundkeyskegr ")
  skgrp      skgrp     @relation(fields: [keyskgrp], references: [keyskgrp], onUpdate: NoAction, map: "fkskundkeyskgrp ")
  skpri      skpri?    @relation(fields: [keyskpri], references: [keyskpri], onDelete: NoAction, onUpdate: NoAction, map: "fkskundkeyskpri ")
  skyrk      skyrk?    @relation(fields: [keyskyrk], references: [keyskyrk], onDelete: NoAction, onUpdate: NoAction, map: "fkskundkeyskyrk ")

  @@index([keycmctc], map: "fkskundcmctc")
  @@index([keycmobj], map: "fkskundcmobj")
  @@index([keycmrgr], map: "fkskundcmrgr")
  @@index([keycmvat], map: "fkskundcmvat")
  @@index([keyhyobj], map: "fkskundhyobj")
  @@index([keyskatg], map: "fkskundskatg")
  @@index([keyskdmd], map: "fkskundskdmd")
  @@index([keyskdmv], map: "fkskundskdmv")
  @@index([keyskegr], map: "fkskundskegr")
  @@index([keyskgrp], map: "fkskundskgrp")
  @@index([keyskpri], map: "fkskundskpri")
  @@index([keyskyrk], map: "fkskundskyrk")
}

model skunk {
  keyskunk  String   @id(map: "pkskunk") @db.Char(15)
  keyskyrk  String   @db.Char(15)
  keyskkav  String   @db.Char(15)
  keyskatg  String   @db.Char(15)
  keycmobj  String?  @db.Char(15)
  keycmvat  String?  @db.Char(15)
  mangd     Decimal? @db.Decimal(9, 1)
  svarighet Decimal? @db.Decimal(6, 2)
  text      String?  @db.VarChar(30)
  timeother Decimal? @db.Decimal(9, 3)
  factor    Decimal? @db.Decimal(4, 2)
  liability Int      @default(0, map: "DF__skunk__liability__50F856D8") @db.TinyInt
  totaltime Decimal? @db.Decimal(9, 3)
  v1        Int      @default(0, map: "DF__skunk__v1__51EC7B11") @db.TinyInt
  v2        Int      @default(0, map: "DF__skunk__v2__52E09F4A") @db.TinyInt
  v3        Int      @default(0, map: "DF__skunk__v3__53D4C383") @db.TinyInt
  v4        Int      @default(0, map: "DF__skunk__v4__54C8E7BC") @db.TinyInt
  v5        Int      @default(0, map: "DF__skunk__v5__55BD0BF5") @db.TinyInt
  v6        Int      @default(0, map: "DF__skunk__v6__56B1302E") @db.TinyInt
  v7        Int      @default(0, map: "DF__skunk__v7__57A55467") @db.TinyInt
  v8        Int      @default(0, map: "DF__skunk__v8__589978A0") @db.TinyInt
  v9        Int      @default(0, map: "DF__skunk__v9__598D9CD9") @db.TinyInt
  v10       Int      @default(0, map: "DF__skunk__v10__5A81C112") @db.TinyInt
  v11       Int      @default(0, map: "DF__skunk__v11__5B75E54B") @db.TinyInt
  v12       Int      @default(0, map: "DF__skunk__v12__5C6A0984") @db.TinyInt
  v13       Int      @default(0, map: "DF__skunk__v13__5D5E2DBD") @db.TinyInt
  v14       Int      @default(0, map: "DF__skunk__v14__5E5251F6") @db.TinyInt
  v15       Int      @default(0, map: "DF__skunk__v15__5F46762F") @db.TinyInt
  v16       Int      @default(0, map: "DF__skunk__v16__603A9A68") @db.TinyInt
  v17       Int      @default(0, map: "DF__skunk__v17__612EBEA1") @db.TinyInt
  v18       Int      @default(0, map: "DF__skunk__v18__6222E2DA") @db.TinyInt
  v19       Int      @default(0, map: "DF__skunk__v19__63170713") @db.TinyInt
  v20       Int      @default(0, map: "DF__skunk__v20__640B2B4C") @db.TinyInt
  v21       Int      @default(0, map: "DF__skunk__v21__64FF4F85") @db.TinyInt
  v22       Int      @default(0, map: "DF__skunk__v22__65F373BE") @db.TinyInt
  v23       Int      @default(0, map: "DF__skunk__v23__66E797F7") @db.TinyInt
  v24       Int      @default(0, map: "DF__skunk__v24__67DBBC30") @db.TinyInt
  v25       Int      @default(0, map: "DF__skunk__v25__68CFE069") @db.TinyInt
  v26       Int      @default(0, map: "DF__skunk__v26__69C404A2") @db.TinyInt
  v27       Int      @default(0, map: "DF__skunk__v27__6AB828DB") @db.TinyInt
  v28       Int      @default(0, map: "DF__skunk__v28__6BAC4D14") @db.TinyInt
  v29       Int      @default(0, map: "DF__skunk__v29__6CA0714D") @db.TinyInt
  v30       Int      @default(0, map: "DF__skunk__v30__6D949586") @db.TinyInt
  v31       Int      @default(0, map: "DF__skunk__v31__6E88B9BF") @db.TinyInt
  v32       Int      @default(0, map: "DF__skunk__v32__6F7CDDF8") @db.TinyInt
  v33       Int      @default(0, map: "DF__skunk__v33__70710231") @db.TinyInt
  v34       Int      @default(0, map: "DF__skunk__v34__7165266A") @db.TinyInt
  v35       Int      @default(0, map: "DF__skunk__v35__72594AA3") @db.TinyInt
  v36       Int      @default(0, map: "DF__skunk__v36__734D6EDC") @db.TinyInt
  v37       Int      @default(0, map: "DF__skunk__v37__74419315") @db.TinyInt
  v38       Int      @default(0, map: "DF__skunk__v38__7535B74E") @db.TinyInt
  v39       Int      @default(0, map: "DF__skunk__v39__7629DB87") @db.TinyInt
  v40       Int      @default(0, map: "DF__skunk__v40__771DFFC0") @db.TinyInt
  v41       Int      @default(0, map: "DF__skunk__v41__781223F9") @db.TinyInt
  v42       Int      @default(0, map: "DF__skunk__v42__79064832") @db.TinyInt
  v43       Int      @default(0, map: "DF__skunk__v43__79FA6C6B") @db.TinyInt
  v44       Int      @default(0, map: "DF__skunk__v44__7AEE90A4") @db.TinyInt
  v45       Int      @default(0, map: "DF__skunk__v45__7BE2B4DD") @db.TinyInt
  v46       Int      @default(0, map: "DF__skunk__v46__7CD6D916") @db.TinyInt
  v47       Int      @default(0, map: "DF__skunk__v47__7DCAFD4F") @db.TinyInt
  v48       Int      @default(0, map: "DF__skunk__v48__7EBF2188") @db.TinyInt
  v49       Int      @default(0, map: "DF__skunk__v49__7FB345C1") @db.TinyInt
  v50       Int      @default(0, map: "DF__skunk__v50__00A769FA") @db.TinyInt
  v51       Int      @default(0, map: "DF__skunk__v51__019B8E33") @db.TinyInt
  v52       Int      @default(0, map: "DF__skunk__v52__028FB26C") @db.TinyInt
  v53       Int      @default(0, map: "DF__skunk__v53__0383D6A5") @db.TinyInt
  d1        Int      @default(0, map: "DF__skunk__d1__0477FADE") @db.TinyInt
  d2        Int      @default(0, map: "DF__skunk__d2__056C1F17") @db.TinyInt
  d3        Int      @default(0, map: "DF__skunk__d3__06604350") @db.TinyInt
  d4        Int      @default(0, map: "DF__skunk__d4__07546789") @db.TinyInt
  d5        Int      @default(0, map: "DF__skunk__d5__08488BC2") @db.TinyInt
  d6        Int      @default(0, map: "DF__skunk__d6__093CAFFB") @db.TinyInt
  d7        Int      @default(0, map: "DF__skunk__d7__0A30D434") @db.TinyInt
  timestamp String   @db.Char(10)
  cmobj     cmobj?   @relation(fields: [keycmobj], references: [keycmobj], onDelete: NoAction, onUpdate: NoAction, map: "fkskunkkeycmobj")
  cmvat     cmvat?   @relation(fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkskunkkeycmvat ")
  skatg     skatg    @relation(fields: [keyskatg], references: [keyskatg], onUpdate: NoAction, map: "fkskunkkeyskatg ")
  skkav     skkav    @relation(fields: [keyskkav], references: [keyskkav], onDelete: Cascade, onUpdate: NoAction, map: "fkskunkkeyskkav ")
  skyrk     skyrk    @relation(fields: [keyskyrk], references: [keyskyrk], onUpdate: NoAction, map: "fkskunkkeyskyrk ")

  @@index([keycmobj], map: "fkskunkcmobj")
  @@index([keycmvat], map: "fkskunkcmvat")
  @@index([keyskatg], map: "fkskunkskatg")
  @@index([keyskkav], map: "fkskunkskkav")
  @@index([keyskyrk], map: "fkskunkskyrk")
}

model skykk {
  keyskykk  String @id(map: "pkskykk") @db.Char(15)
  keyskkav  String @db.Char(15)
  keyskyrk  String @db.Char(15)
  amount    Float  @db.Money
  timestamp String @db.Char(10)
  skkav     skkav  @relation(fields: [keyskkav], references: [keyskkav], onDelete: Cascade, onUpdate: NoAction, map: "fkskykkkeyskkav ")
  skyrk     skyrk  @relation(fields: [keyskyrk], references: [keyskyrk], onDelete: Cascade, onUpdate: NoAction, map: "fkskykkkeyskyrk ")

  @@unique([keyskkav, keyskyrk], map: "akskykk1")
  @@index([keyskkav], map: "fkskykkskkav")
  @@index([keyskyrk], map: "fkskykkskyrk")
}

model skyrk {
  keyskyrk  String  @id(map: "pkskyrk") @db.Char(15)
  caption   String  @db.Char(30)
  amount    Float   @default(0, map: "DF__skyrk__amount__65145E1E") @db.Money
  ubtimecat Int     @default(0, map: "DF__skyrk__ubtimecat__66088257") @db.TinyInt
  repabkod  Int     @default(0, map: "DF__skyrk__repabkod__66FCA690") @db.TinyInt
  timestamp String  @db.Char(10)
  cmres     cmres[]
  skatg     skatg[]
  skpin     skpin[]
  skund     skund[]
  skunk     skunk[]
  skykk     skykk[]
  stund     stund[]
}

model staoc {
  keystaoc  String   @id(map: "pkstaoc") @db.Char(15)
  keystund  String   @db.Char(15)
  keyaoupr  String   @db.Char(15)
  atgdate   DateTime @db.Date
  timestamp String   @db.Char(10)

  @@index([keyaoupr], map: "fkstaocaoupr")
  @@index([keystund], map: "fkstaocstund")
}

model staok {
  keystaok  String   @id(map: "pkstaok") @db.Char(15)
  keystund  String   @db.Char(15)
  keyaoupr  String   @db.Char(15)
  atgdate   DateTime @db.DateTime
  timestamp String   @db.Char(10)
  aoupr     aoupr    @relation(fields: [keyaoupr], references: [keyaoupr], onDelete: Cascade, onUpdate: NoAction, map: "fkstaokkeyaoupr")
  stund     stund    @relation(fields: [keystund], references: [keystund], onDelete: Cascade, onUpdate: NoAction, map: "fkstaokkeystund")

  @@index([keyaoupr], map: "fkstaokaoupr")
  @@index([keystund], map: "fkstaokstund")
}

model stcth {
  keystcth  String    @id(map: "pkstcth") @db.Char(15)
  keystupd  String    @db.Char(15)
  keycmctc  String?   @db.Char(15)
  code      String    @unique(map: "akstcth") @db.VarChar(10)
  note      String?   @db.VarChar(100)
  cthstatus Int       @default(0, map: "DF__stcth__cthstatus__1D68C3E3") @db.TinyInt
  cthdate   DateTime? @db.DateTime
  timestamp String    @db.Char(10)
  cmctc     cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkstcthkeycmctc")
  stupd     stupd     @relation(fields: [keystupd], references: [keystupd], onUpdate: NoAction, map: "fkstcthkeystupd")
  stctr     stctr[]

  @@index([keycmctc], map: "fkstcthcmctc")
  @@index([keystupd], map: "fkstcthstupd")
}

model stctr {
  keystctr   String    @id(map: "pkstctr") @db.Char(15)
  keystcth   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  note       String?   @db.VarChar(100)
  remark     String?   @db.VarChar(250)
  inspected  Int       @default(0, map: "DF__stctr__inspected__0495A8EB") @db.TinyInt
  inspreslt  Int       @default(0, map: "DF__stctr__inspreslt__0589CD24") @db.TinyInt
  inspdate   DateTime? @db.DateTime
  area       Float     @default(0, map: "DF__stctr__area__067DF15D") @db.Money
  invdireasy Int       @default(0, map: "DF__stctr__invdireas__07721596") @db.TinyInt
  invdirdiff Int       @default(0, map: "DF__stctr__invdirdif__086639CF") @db.TinyInt
  invduseasy Int       @default(0, map: "DF__stctr__invduseas__095A5E08") @db.TinyInt
  invdusdiff Int       @default(0, map: "DF__stctr__invdusdif__0A4E8241") @db.TinyInt
  invstaeasy Int       @default(0, map: "DF__stctr__invstaeas__0B42A67A") @db.TinyInt
  invstadiff Int       @default(0, map: "DF__stctr__invstadif__0C36CAB3") @db.TinyInt
  invsureasy Int       @default(0, map: "DF__stctr__invsureas__0D2AEEEC") @db.TinyInt
  invsurdiff Int       @default(0, map: "DF__stctr__invsurdif__0E1F1325") @db.TinyInt
  waldireasy Int       @default(0, map: "DF__stctr__waldireas__0F13375E") @db.TinyInt
  waldirdiff Int       @default(0, map: "DF__stctr__waldirdif__10075B97") @db.TinyInt
  walduseasy Int       @default(0, map: "DF__stctr__walduseas__10FB7FD0") @db.TinyInt
  waldusdiff Int       @default(0, map: "DF__stctr__waldusdif__11EFA409") @db.TinyInt
  walstaeasy Int       @default(0, map: "DF__stctr__walstaeas__12E3C842") @db.TinyInt
  walstadiff Int       @default(0, map: "DF__stctr__walstadif__13D7EC7B") @db.TinyInt
  walsureasy Int       @default(0, map: "DF__stctr__walsureas__14CC10B4") @db.TinyInt
  walsurdiff Int       @default(0, map: "DF__stctr__walsurdif__15C034ED") @db.TinyInt
  flodireasy Int       @default(0, map: "DF__stctr__flodireas__16B45926") @db.TinyInt
  flodirdiff Int       @default(0, map: "DF__stctr__flodirdif__17A87D5F") @db.TinyInt
  floduseasy Int       @default(0, map: "DF__stctr__floduseas__189CA198") @db.TinyInt
  flodusdiff Int       @default(0, map: "DF__stctr__flodusdif__1990C5D1") @db.TinyInt
  flostaeasy Int       @default(0, map: "DF__stctr__flostaeas__1A84EA0A") @db.TinyInt
  flostadiff Int       @default(0, map: "DF__stctr__flostadif__1B790E43") @db.TinyInt
  flosureasy Int       @default(0, map: "DF__stctr__flosureas__1C6D327C") @db.TinyInt
  flosurdiff Int       @default(0, map: "DF__stctr__flosurdif__1D6156B5") @db.TinyInt
  ceidirdiff Int       @default(0, map: "DF__stctr__ceidirdif__1E557AEE") @db.TinyInt
  ceidusdiff Int       @default(0, map: "DF__stctr__ceidusdif__1F499F27") @db.TinyInt
  ceistadiff Int       @default(0, map: "DF__stctr__ceistadif__203DC360") @db.TinyInt
  ceisurdiff Int       @default(0, map: "DF__stctr__ceisurdif__2131E799") @db.TinyInt
  timestamp  String    @db.Char(10)
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkstctrkeycmobj ")
  stcth      stcth     @relation(fields: [keystcth], references: [keystcth], onDelete: Cascade, onUpdate: NoAction, map: "fkstctrkeystcth ")

  @@index([keycmobj], map: "fkstctrcmobj")
  @@index([keystcth], map: "fkstctrstcth")
}

model stexc {
  keystexc  String @id(map: "pkstexc") @db.Char(15)
  keystext  String @db.Char(15)
  keysture  String @db.Char(15)
  timestamp String @db.Char(10)
  stext     stext  @relation(fields: [keystext], references: [keystext], onDelete: Cascade, onUpdate: NoAction, map: "fkstexckeystext ")
  sture     sture  @relation(fields: [keysture], references: [keysture], onDelete: Cascade, onUpdate: NoAction, map: "fkstexckeysture ")

  @@unique([keystext, keysture], map: "akstexc")
}

model stext {
  keystext                     String   @id(map: "pkstext") @db.Char(15)
  keycmart                     String?  @db.Char(15)
  keycmart2                    String?  @db.Char(15)
  caption                      String   @unique(map: "akstext") @db.VarChar(30)
  ftime                        DateTime @db.Time
  ttime                        DateTime @db.Time
  timestamp                    String   @db.Char(10)
  stexc                        stexc[]
  cmart_stext_keycmartTocmart  cmart?   @relation("stext_keycmartTocmart", fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkstextkeycmart")
  cmart_stext_keycmart2Tocmart cmart?   @relation("stext_keycmart2Tocmart", fields: [keycmart2], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fkstextkeycmart2")
  stund                        stund[]
  stupd                        stupd[]

  @@index([keycmart], map: "fkstextcmart")
  @@index([keycmart2], map: "fkstextcmart2")
}

model stfnh {
  keystfnh  String  @id(map: "pkstfnh") @db.Char(15)
  caption   String  @unique(map: "akstfnh1") @db.VarChar(30)
  timestamp String  @db.Char(10)
  stfnr     stfnr[]
  stund     stund[]
  stupd     stupd[]
}

model stfnr {
  keystfnr   String @id(map: "pkstfnr") @db.Char(15)
  keystfnh   String @db.Char(15)
  noofexec   Int    @default(1, map: "DF__stfnr__noofexec__2D284D67") @db.TinyInt
  execperiod Int    @default(1, map: "DF__stfnr__execperio__2E1C71A0") @db.TinyInt
  periodunit Int    @default(5, map: "DF__stfnr__perioduni__2F1095D9") @db.SmallInt
  fullperiod Int    @default(0, map: "DF__stfnr__fullperio__3004BA12") @db.TinyInt
  d1         Int    @default(0, map: "DF__stfnr__d1__30F8DE4B") @db.TinyInt
  d2         Int    @default(0, map: "DF__stfnr__d2__31ED0284") @db.TinyInt
  d3         Int    @default(0, map: "DF__stfnr__d3__32E126BD") @db.TinyInt
  d4         Int    @default(0, map: "DF__stfnr__d4__33D54AF6") @db.TinyInt
  d5         Int    @default(0, map: "DF__stfnr__d5__34C96F2F") @db.TinyInt
  d6         Int    @default(0, map: "DF__stfnr__d6__35BD9368") @db.TinyInt
  d7         Int    @default(0, map: "DF__stfnr__d7__36B1B7A1") @db.TinyInt
  usewktempl Int    @default(0, map: "DF__stfnr__usewktemp__37A5DBDA") @db.TinyInt
  w01        Int    @default(0, map: "DF__stfnr__w01__389A0013") @db.TinyInt
  w02        Int    @default(0, map: "DF__stfnr__w02__398E244C") @db.TinyInt
  w03        Int    @default(0, map: "DF__stfnr__w03__3A824885") @db.TinyInt
  w04        Int    @default(0, map: "DF__stfnr__w04__3B766CBE") @db.TinyInt
  w05        Int    @default(0, map: "DF__stfnr__w05__3C6A90F7") @db.TinyInt
  w06        Int    @default(0, map: "DF__stfnr__w06__3D5EB530") @db.TinyInt
  w07        Int    @default(0, map: "DF__stfnr__w07__3E52D969") @db.TinyInt
  w08        Int    @default(0, map: "DF__stfnr__w08__3F46FDA2") @db.TinyInt
  w09        Int    @default(0, map: "DF__stfnr__w09__403B21DB") @db.TinyInt
  w10        Int    @default(0, map: "DF__stfnr__w10__412F4614") @db.TinyInt
  w11        Int    @default(0, map: "DF__stfnr__w11__42236A4D") @db.TinyInt
  w12        Int    @default(0, map: "DF__stfnr__w12__43178E86") @db.TinyInt
  w13        Int    @default(0, map: "DF__stfnr__w13__440BB2BF") @db.TinyInt
  w14        Int    @default(0, map: "DF__stfnr__w14__44FFD6F8") @db.TinyInt
  w15        Int    @default(0, map: "DF__stfnr__w15__45F3FB31") @db.TinyInt
  w16        Int    @default(0, map: "DF__stfnr__w16__46E81F6A") @db.TinyInt
  w17        Int    @default(0, map: "DF__stfnr__w17__47DC43A3") @db.TinyInt
  w18        Int    @default(0, map: "DF__stfnr__w18__48D067DC") @db.TinyInt
  w19        Int    @default(0, map: "DF__stfnr__w19__49C48C15") @db.TinyInt
  w20        Int    @default(0, map: "DF__stfnr__w20__4AB8B04E") @db.TinyInt
  w21        Int    @default(0, map: "DF__stfnr__w21__4BACD487") @db.TinyInt
  w22        Int    @default(0, map: "DF__stfnr__w22__4CA0F8C0") @db.TinyInt
  w23        Int    @default(0, map: "DF__stfnr__w23__4D951CF9") @db.TinyInt
  w24        Int    @default(0, map: "DF__stfnr__w24__4E894132") @db.TinyInt
  w25        Int    @default(0, map: "DF__stfnr__w25__4F7D656B") @db.TinyInt
  w26        Int    @default(0, map: "DF__stfnr__w26__507189A4") @db.TinyInt
  w27        Int    @default(0, map: "DF__stfnr__w27__5165ADDD") @db.TinyInt
  w28        Int    @default(0, map: "DF__stfnr__w28__5259D216") @db.TinyInt
  w29        Int    @default(0, map: "DF__stfnr__w29__534DF64F") @db.TinyInt
  w30        Int    @default(0, map: "DF__stfnr__w30__54421A88") @db.TinyInt
  w31        Int    @default(0, map: "DF__stfnr__w31__55363EC1") @db.TinyInt
  w32        Int    @default(0, map: "DF__stfnr__w32__562A62FA") @db.TinyInt
  w33        Int    @default(0, map: "DF__stfnr__w33__571E8733") @db.TinyInt
  w34        Int    @default(0, map: "DF__stfnr__w34__5812AB6C") @db.TinyInt
  w35        Int    @default(0, map: "DF__stfnr__w35__5906CFA5") @db.TinyInt
  w36        Int    @default(0, map: "DF__stfnr__w36__59FAF3DE") @db.TinyInt
  w37        Int    @default(0, map: "DF__stfnr__w37__5AEF1817") @db.TinyInt
  w38        Int    @default(0, map: "DF__stfnr__w38__5BE33C50") @db.TinyInt
  w39        Int    @default(0, map: "DF__stfnr__w39__5CD76089") @db.TinyInt
  w40        Int    @default(0, map: "DF__stfnr__w40__5DCB84C2") @db.TinyInt
  w41        Int    @default(0, map: "DF__stfnr__w41__5EBFA8FB") @db.TinyInt
  w42        Int    @default(0, map: "DF__stfnr__w42__5FB3CD34") @db.TinyInt
  w43        Int    @default(0, map: "DF__stfnr__w43__60A7F16D") @db.TinyInt
  w44        Int    @default(0, map: "DF__stfnr__w44__619C15A6") @db.TinyInt
  w45        Int    @default(0, map: "DF__stfnr__w45__629039DF") @db.TinyInt
  w46        Int    @default(0, map: "DF__stfnr__w46__63845E18") @db.TinyInt
  w47        Int    @default(0, map: "DF__stfnr__w47__64788251") @db.TinyInt
  w48        Int    @default(0, map: "DF__stfnr__w48__656CA68A") @db.TinyInt
  w49        Int    @default(0, map: "DF__stfnr__w49__6660CAC3") @db.TinyInt
  w50        Int    @default(0, map: "DF__stfnr__w50__6754EEFC") @db.TinyInt
  w51        Int    @default(0, map: "DF__stfnr__w51__68491335") @db.TinyInt
  w52        Int    @default(0, map: "DF__stfnr__w52__693D376E") @db.TinyInt
  w53        Int    @default(0, map: "DF__stfnr__w53__6A315BA7") @db.TinyInt
  timestamp  String @db.Char(10)
  stfnh      stfnh  @relation(fields: [keystfnh], references: [keystfnh], onDelete: Cascade, onUpdate: NoAction, map: "fkstfnrkeystfnh")

  @@unique([keystfnh, noofexec, execperiod, periodunit, fullperiod], map: "akstfnr")
  @@index([keystfnh], map: "fkstfnrstfnh")
}

model stkal {
  keystkal  String  @id(map: "pkstkal") @db.Char(15)
  keysyusr  String? @db.Char(15)
  keycmctc  String? @db.Char(15)
  keystupt  String? @db.Char(15)
  keycmobj  String  @db.Char(15)
  code      String  @unique(map: "akstkal1") @db.VarChar(10)
  caption   String  @db.VarChar(50)
  accr      Int     @default(0, map: "DF__stkal__accr__620629FA") @db.TinyInt
  accw      Int     @default(0, map: "DF__stkal__accw__62FA4E33") @db.TinyInt
  status    Int     @default(0, map: "DF__stkal__status__63EE726C") @db.TinyInt
  timestamp String  @db.Char(10)
  stupd     stupd[]

  @@index([keycmctc], map: "fkstkalcmctc")
  @@index([keycmobj], map: "fkstkalcmobj")
  @@index([keystupt], map: "fkstkalstupt")
  @@index([keysyusr], map: "fkstkalsyusr")
}

model stkav {
  keystkav   String   @id(map: "pkstkav") @db.Char(15)
  keystkal   String   @db.Char(15)
  keysyusr   String?  @db.Char(15)
  code       String   @db.VarChar(10)
  caption    String   @db.VarChar(50)
  tenderdate DateTime @db.Date
  tenderto   DateTime @db.Date
  status     Int      @default(0, map: "DF__stkav__status__66CADF17") @db.TinyInt
  timestamp  String   @db.Char(10)
  stkos      stkos[]
  stpas      stpas[]

  @@unique([keystkal, code], map: "akstkav1")
  @@index([keystkal], map: "fkstkavstkal")
  @@index([keysyusr], map: "fkstkavsyusr")
}

model stkos {
  keystkos  String   @id(map: "pkstkos") @db.Char(15)
  keystkav  String?  @db.Char(15)
  keystupd  String?  @db.Char(15)
  keyskkot  String   @db.Char(15)
  quantity  Decimal? @db.Decimal(9, 1)
  price     Float?   @db.Money
  amount    Float?   @db.Money
  kostext   String   @db.VarChar(60)
  sortorder Int      @default(0, map: "DF__stkos__sortorder__1C54A419")
  timestamp String   @db.Char(10)
  skkot     skkot    @relation(fields: [keyskkot], references: [keyskkot], onUpdate: NoAction, map: "fkstkoskeyskkot")
  stkav     stkav?   @relation(fields: [keystkav], references: [keystkav], onDelete: Cascade, onUpdate: NoAction, map: "fkstkoskeystkav ")

  @@index([keyskkot], map: "fkstkosskkot")
  @@index([keystkav], map: "fkstkosstkav")
  @@index([keystupd], map: "fkstkosstupd")
}

model stkph {
  keystkph  String  @id(map: "pkstkph") @db.Char(15)
  caption   String  @unique(map: "akstkph") @db.VarChar(30)
  aql       Decimal @default(4, map: "DF__stkph__aql__69D9133B") @db.Decimal(3, 1)
  timestamp String  @db.Char(10)
  stupd     stupd[]
}

model stkvd {
  keystkvd   String   @id(map: "pkstkvd") @db.Char(15)
  keystkvr   String   @db.Char(15)
  keyskatg   String?  @db.Char(15)
  mangd      Decimal? @db.Decimal(7, 1)
  quantity   Int?     @db.SmallInt
  noofexec   Int      @default(1, map: "DF__stkvd__noofexec__245DFD3C") @db.TinyInt
  execperiod Int      @default(1, map: "DF__stkvd__execperio__25522175") @db.TinyInt
  periodunit Int?     @db.SmallInt
  fullperiod Int      @default(0, map: "DF__stkvd__fullperio__264645AE") @db.TinyInt
  noofweeks  Int?     @db.TinyInt
  unittime   Decimal? @db.Decimal(9, 3)
  difficulty Decimal  @default(1, map: "DF__stkvd__difficult__273A69E7") @db.Decimal(3, 2)
  profcost   Float?   @db.Money
  totaltime  Decimal? @db.Decimal(9, 3)
  amount     Float    @db.Money
  plaintext  String?  @db.VarChar(60)
  expstatus  Int      @default(0, map: "DF__stkvd__expstatus__282E8E20") @db.TinyInt
  timestamp  String   @db.Char(10)

  @@index([keyskatg], map: "fkstkvdskatg")
  @@index([keystkvr], map: "fkstkvdstkvr")
}

model stkvk {
  keystkvk  String  @id(map: "pkstkvk") @db.Char(15)
  keystkvp  String  @db.Char(15)
  keybarut  String? @db.Char(15)
  keybalot  String? @db.Char(15)
  timestamp String  @db.Char(10)
  balot     balot?  @relation(fields: [keybalot], references: [keybalot], onDelete: NoAction, onUpdate: NoAction, map: "fkstkvkkeybalot ")
  barut     barut?  @relation(fields: [keybarut], references: [keybarut], onDelete: NoAction, onUpdate: NoAction, map: "fkstkvkkeybarut")
  stkvp     stkvp   @relation(fields: [keystkvp], references: [keystkvp], onDelete: Cascade, onUpdate: NoAction, map: "fkstkvkkeystkvp ")

  @@unique([keystkvp, keybarut, keybalot], map: "akstkvk1")
  @@index([keybalot], map: "fkstkvkbalot")
  @@index([keybarut], map: "fkstkvkbarut")
  @@index([keystkvp], map: "fkstkvkstkvp")
}

model stkvn {
  keystkvn  String @id(map: "pkstkvn") @db.Char(15)
  keystkph  String @db.Char(15)
  code      Int    @db.TinyInt
  easyacc1  Int    @db.SmallInt
  diffacc1  Int    @db.SmallInt
  easyacc2  Int    @db.SmallInt
  diffacc2  Int    @db.SmallInt
  easyacc3  Int    @db.SmallInt
  diffacc3  Int    @db.SmallInt
  easyacc4  Int    @db.SmallInt
  diffacc4  Int    @db.SmallInt
  easyacc5  Int    @db.SmallInt
  diffacc5  Int    @db.SmallInt
  timestamp String @db.Char(10)

  @@unique([keystkph, code], map: "akstkvn1")
  @@index([keystkph], map: "fkstkvnstkph")
}

model stkvp {
  keystkvp  String  @id(map: "pkstkvp") @db.Char(15)
  keystkph  String  @db.Char(15)
  code      String  @db.VarChar(30)
  ordning   Int     @default(0, map: "DF__stkvp__ordning__787F7AFE") @db.TinyInt
  invsurf   Int     @db.TinyInt
  invdust   Int     @db.TinyInt
  wallsurf  Int     @db.TinyInt
  walldust  Int     @db.TinyInt
  floorsurf Int     @db.TinyInt
  floordust Int     @db.TinyInt
  ceilsurf  Int     @db.TinyInt
  ceildust  Int     @db.TinyInt
  aql       Decimal @default(4, map: "DF__stkvp__aql__79739F37") @db.Decimal(3, 1)
  timestamp String  @db.Char(10)
  stkvk     stkvk[]
  stobj     stobj[]

  @@unique([keystkph, code], map: "akstkvp1")
  @@unique([keystkph, ordning], map: "akstkvp2")
  @@index([keystkph], map: "fkstkvpstkph")
}

model stkvr {
  keystkvr  String  @id(map: "pkstkvr") @db.Char(15)
  keystkav  String  @db.Char(15)
  keycmobj  String? @db.Char(15)
  keydbtbl  String? @db.Char(15)
  keycode   String? @db.Char(15)
  quantity  Int?    @db.SmallInt
  timestamp String  @db.Char(10)

  @@index([keycmobj], map: "fkstkvrcmobj")
  @@index([keycode], map: "fkstkvrcode")
  @@index([keydbtbl], map: "fkstkvrdbtbl")
  @@index([keystkav], map: "fkstkvrstkav")
}

model stkvu {
  keystkvu  String @id(map: "pkstkvu") @db.Char(15)
  keystkvp  String @db.Char(15)
  keybarum  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keystkvp, keybarum], map: "akstkvu1")
  @@index([keybarum], map: "fkstkvubarum")
  @@index([keystkvp], map: "fkstkvustkvp")
}

model stobj {
  keystobj  String  @id(map: "pkstobj") @db.Char(15)
  keystupd  String  @db.Char(15)
  keycmobj  String  @db.Char(15)
  keystkvp  String? @db.Char(15)
  timestamp String  @db.Char(10)
  cmobj     cmobj   @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkstobjkeycmobj")
  stkvp     stkvp?  @relation(fields: [keystkvp], references: [keystkvp], onUpdate: NoAction, map: "fkstobjkeystkvp ")
  stupd     stupd   @relation(fields: [keystupd], references: [keystupd], onDelete: Cascade, onUpdate: NoAction, map: "fkstobjkeystupd")

  @@unique([keystupd, keycmobj], map: "akstobj1")
  @@index([keycmobj], map: "fkstobjcmobj")
  @@index([keystkvp], map: "fkstobjstkvp")
  @@index([keystupd], map: "fkstobjstupd")
}

model stocc {
  keystocc  String   @id(map: "pkstocc") @db.Char(15)
  keystund  String   @db.Char(15)
  keycmctc  String?  @db.Char(15)
  occdate   DateTime @db.Date
  occtime   DateTime @db.Time
  timestamp String   @db.Char(10)

  @@index([keycmctc], map: "fkstocccmctc")
  @@index([keystund], map: "fkstoccstund")
}

model stpas {
  keystpas  String  @id(map: "pkstpas") @db.Char(15)
  keystkav  String? @db.Char(15)
  keystupd  String? @db.Char(15)
  keyskpat  String  @db.Char(15)
  increase  Decimal @db.Decimal(4, 2)
  pastext   String  @db.VarChar(60)
  sortorder Int     @default(0, map: "DF__stpas__sortorder__21195936")
  timestamp String  @db.Char(10)
  skpat     skpat   @relation(fields: [keyskpat], references: [keyskpat], onUpdate: NoAction, map: "fkstpaskeyskpat")
  stkav     stkav?  @relation(fields: [keystkav], references: [keystkav], onDelete: Cascade, onUpdate: NoAction, map: "fkstpaskeystkav ")

  @@index([keyskpat], map: "fkstpasskpat")
  @@index([keystkav], map: "fkstpasstkav")
  @@index([keystupd], map: "fkstpasstupd")
}

model stpin {
  keystpin   String   @id(map: "pkstpin") @db.Char(15)
  keystpkk   String   @db.Char(15)
  keyskatg   String   @db.Char(15)
  keyskyrk   String?  @db.Char(15)
  keycmvat   String?  @db.Char(15)
  noofexec   Int      @default(1, map: "DF__stpin__noofexec__2B0AFACB") @db.TinyInt
  execperiod Int      @default(1, map: "DF__stpin__execperio__2BFF1F04") @db.TinyInt
  periodunit Int      @default(5, map: "DF__stpin__perioduni__2CF3433D") @db.SmallInt
  fullperiod Int      @default(0, map: "DF__stpin__fullperio__2DE76776") @db.TinyInt
  noofweeks  Int?     @db.TinyInt
  mangd      Decimal? @db.Decimal(7, 1)
  timestamp  String   @db.Char(10)

  @@index([keycmvat], map: "fkstpincmvat")
  @@index([keyskatg], map: "fkstpinskatg")
  @@index([keyskyrk], map: "fkstpinskyrk")
  @@index([keystpkk], map: "fkstpinstpkk")
}

model stpkk {
  keystpkk  String @id(map: "pkstpkk") @db.Char(15)
  keystpkt  String @db.Char(15)
  keystupt  String @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keystupt, keydbtbl, keycode], map: "akstpkk1")
  @@index([keycode], map: "fkstpkkcode")
  @@index([keydbtbl], map: "fkstpkkdbtbl")
  @@index([keystpkt], map: "fkstpkkstpkt")
  @@index([keystupt], map: "fkstpkkstupt")
}

model stpkt {
  keystpkt  String  @id(map: "pkstpkt") @db.Char(15)
  code      String  @unique(map: "akstpkt1") @db.VarChar(10)
  caption   String? @db.VarChar(50)
  timestamp String  @db.Char(10)
}

model stund {
  keystund   String    @id(map: "pkstund") @db.Char(15)
  keystupd   String    @db.Char(15)
  keyskatg   String    @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctc   String?   @db.Char(15)
  keyskyrk   String?   @db.Char(15)
  keycmvat   String?   @db.Char(15)
  keystext   String?   @db.Char(15)
  keystfnh   String?   @db.Char(15)
  mangd      Decimal?  @db.Decimal(7, 1)
  noofexec   Int       @default(1, map: "DF__stund__noofexec__15CD6F69") @db.TinyInt
  execperiod Int       @default(1, map: "DF__stund__execperio__16C193A2") @db.TinyInt
  periodunit Int       @default(5, map: "DF__stund__perioduni__17B5B7DB") @db.SmallInt
  fullperiod Int       @default(0, map: "DF__stund__fullperio__18A9DC14") @db.TinyInt
  noofweeks  Int?      @db.TinyInt
  difficulty Decimal   @default(1, map: "DF__stund__difficult__199E004D") @db.Decimal(3, 2)
  undtext    String?   @db.VarChar(60)
  ismanual   Int       @default(0, map: "DF__stund__ismanual__1A922486") @db.TinyInt
  changedate DateTime  @db.Date
  gendateocc DateTime? @db.Date
  tdate      DateTime? @db.Date
  timestamp  String    @db.Char(10)
  staok      staok[]
  cmctc      cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkstundkeycmctc")
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkstundkeycmobj ")
  cmvat      cmvat?    @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkstundkeycmvat ")
  skatg      skatg     @relation(fields: [keyskatg], references: [keyskatg], onUpdate: NoAction, map: "fkstundkeyskatg ")
  skyrk      skyrk?    @relation(fields: [keyskyrk], references: [keyskyrk], onUpdate: NoAction, map: "fkstundkeyskyrk ")
  stext      stext?    @relation(fields: [keystext], references: [keystext], onDelete: NoAction, onUpdate: NoAction, map: "fkstundkeystext ")
  stfnh      stfnh?    @relation(fields: [keystfnh], references: [keystfnh], onUpdate: NoAction, map: "fkstundkeystfnh ")
  stupd      stupd     @relation(fields: [keystupd], references: [keystupd], onDelete: Cascade, onUpdate: NoAction, map: "fkstundkeystupd ")

  @@index([keycmctc], map: "fkstundcmctc")
  @@index([keycmobj], map: "fkstundcmobj")
  @@index([keycmvat], map: "fkstundcmvat")
  @@index([keyskatg], map: "fkstundskatg")
  @@index([keyskyrk], map: "fkstundskyrk")
  @@index([keystext], map: "fkstundstext")
  @@index([keystfnh], map: "fkstundstfnh")
  @@index([keystupd], map: "fkstundstupd")
}

model stupd {
  keystupd                     String    @id(map: "pkstupd") @db.Char(15)
  keystkph                     String?   @db.Char(15)
  keystkal                     String?   @db.Char(15)
  keycmctc                     String    @db.Char(15)
  keycmctc2                    String    @db.Char(15)
  keystupt                     String    @db.Char(15)
  keycmobj                     String    @db.Char(15)
  keystfnh                     String?   @db.Char(15)
  keyhyobj                     String?   @db.Char(15)
  keystext                     String?   @db.Char(15)
  code                         String    @unique(map: "akstupd1") @db.VarChar(10)
  caption                      String    @db.VarChar(50)
  fdate                        DateTime  @db.Date
  tdate                        DateTime? @db.Date
  status                       Int       @default(0, map: "DF__stupd__status__6658861B") @db.TinyInt
  apprdate                     DateTime? @db.Date
  apprsign                     String?   @db.VarChar(80)
  termdate                     DateTime? @db.Date
  termsign                     String?   @db.VarChar(80)
  timestamp                    String    @db.Char(10)
  stcth                        stcth[]
  stobj                        stobj[]
  stund                        stund[]
  cmctc_stupd_keycmctcTocmctc  cmctc     @relation("stupd_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkstupdkeycmctc")
  cmctc_stupd_keycmctc2Tocmctc cmctc     @relation("stupd_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onUpdate: NoAction, map: "fkstupdkeycmctc2")
  cmobj                        cmobj     @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkstupdkeycmobj")
  hyobj                        hyobj?    @relation(fields: [keyhyobj], references: [keyhyobj], onUpdate: NoAction, map: "fkstupdkeyhyobj")
  stext                        stext?    @relation(fields: [keystext], references: [keystext], onDelete: NoAction, onUpdate: NoAction, map: "fkstupdkeystext")
  stfnh                        stfnh?    @relation(fields: [keystfnh], references: [keystfnh], onUpdate: NoAction, map: "fkstupdkeystfnh ")
  stkal                        stkal?    @relation(fields: [keystkal], references: [keystkal], onUpdate: NoAction, map: "fkstupdkeystkal ")
  stkph                        stkph?    @relation(fields: [keystkph], references: [keystkph], onUpdate: NoAction, map: "fkstupdkeystkph")
  stupt                        stupt     @relation(fields: [keystupt], references: [keystupt], onUpdate: NoAction, map: "fkstupdkeystupt ")

  @@index([keycmctc], map: "fkstupdcmctc")
  @@index([keycmctc2], map: "fkstupdcmctc2")
  @@index([keycmobj], map: "fkstupdcmobj")
  @@index([keyhyobj], map: "fkstupdhyobj")
  @@index([keystext], map: "fkstupdstext")
  @@index([keystfnh], map: "fkstupdstfnh")
  @@index([keystkal], map: "fkstupdstkal")
  @@index([keystkph], map: "fkstupdstkph")
  @@index([keystupt], map: "fkstupdstupt")
}

model stupt {
  keystupt   String  @id(map: "pkstupt") @db.Char(15)
  keyhyhav   String? @db.Char(15)
  keyhyobt   String? @db.Char(15)
  caption    String  @db.VarChar(30)
  fakturaper Int?    @default(1, map: "DF__stupt__fakturape__21E3603D") @db.TinyInt
  timestamp  String  @db.Char(10)
  stupd      stupd[]
  hyhav      hyhav?  @relation(fields: [keyhyhav], references: [keyhyhav], onDelete: NoAction, onUpdate: NoAction, map: "fkstuptkeyhyhav")
  hyobt      hyobt?  @relation(fields: [keyhyobt], references: [keyhyobt], onDelete: NoAction, onUpdate: NoAction, map: "fkstuptkeyhyobt ")

  @@index([keyhyhav], map: "fkstupthyhav")
  @@index([keyhyobt], map: "fkstupthyobt")
}

model sture {
  keysture  String  @id(map: "pksture") @db.Char(15)
  keystupd  String  @db.Char(15)
  keycmrgr  String? @db.Char(15)
  keycmctc  String? @db.Char(15)
  timestamp String  @db.Char(10)
  stexc     stexc[]

  @@unique([keystupd, keycmrgr, keycmctc], map: "aksture1")
  @@index([keycmctc], map: "fksturecmctc")
  @@index([keycmrgr], map: "fksturecmrgr")
  @@index([keystupd], map: "fksturestupd")
}

model stykk {
  keystykk  String @id(map: "pkstykk") @db.Char(15)
  keystkav  String @db.Char(15)
  keyskyrk  String @db.Char(15)
  amount    Float  @db.Money
  timestamp String @db.Char(10)

  @@unique([keystkav, keyskyrk], map: "akstykk1")
  @@index([keyskyrk], map: "fkstykkskyrk")
  @@index([keystkav], map: "fkstykkstkav")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tmp1 {
  CMCTCKOD String @db.VarChar(11)

  @@ignore
}

model trabp {
  keytrabp  String @id(map: "pktrabp") @db.Char(15)
  keytrare  String @db.Char(15)
  keycmart  String @db.Char(15)
  perlength Int
  startyear Int
  sqmprice  Float  @db.Money
  timestamp String @db.Char(10)
  cmart     cmart  @relation(fields: [keycmart], references: [keycmart], onUpdate: NoAction, map: "fktrabpkeycmart")
  trare     trare  @relation(fields: [keytrare], references: [keytrare], onUpdate: NoAction, map: "fktrabpkeytrare ")

  @@index([keycmart], map: "fktrabpcmart")
  @@index([keytrare], map: "fktrabptrare")
}

model trare {
  keytrare  String  @id(map: "pktrare") @db.Char(15)
  caption   String  @unique(map: "aktrare1") @db.VarChar(100)
  timestamp String  @db.Char(10)
  hyobj     hyobj[]
  trabp     trabp[]
}

model trars {
  keytrars  String  @id(map: "pktrars") @db.Char(15)
  caption   String  @unique(map: "aktrars1") @db.VarChar(100)
  baserent  Float   @db.Money
  rent10yrs Float   @db.Money
  rent20yrs Float   @db.Money
  timestamp String  @db.Char(10)
  hyobj     hyobj[]
}

model trauf {
  keytrauf  String @id(map: "PK__trauf__69F19A7E") @db.Char(15)
  caption   String @unique(map: "aktrauf1") @db.Char(30)
  formula   String @db.Char(200)
  timestamp String @db.Char(10)
}

model trbta {
  keytrbta  String @id(map: "pktrbta") @db.Char(15)
  keytrare  String @db.Char(15)
  years     Int
  btaprice1 Float  @db.Money
  btaprice2 Float  @db.Money
  btaprice3 Float  @db.Money
  timestamp String @db.Char(10)

  @@index([keytrare], map: "fktrbtatrare")
}

model trcmr {
  keytrcmr  String  @id(map: "pktrcmr") @db.Char(15)
  keyhyobj  String  @db.Char(15)
  caption   String  @db.VarChar(60)
  usage     String? @db.VarChar(60)
  bta       Float?  @db.Money
  crownsbta Float?  @db.Money
  timestamp String  @db.Char(10)

  @@index([keyhyobj], map: "fktrcmrhyobj")
}

model trerb {
  keytrerb   String    @id(map: "PK__trerb__4F67C174") @db.Char(15)
  keycmobj   String    @db.Char(15)
  keycmctc   String    @db.Char(15)
  status     String?   @db.Char(1)
  erbjdatum  DateTime  @db.DateTime
  erbjsign   String    @db.Char(10)
  svarsenast DateTime  @db.DateTime
  svardat    DateTime? @db.DateTime
  svarsign   String?   @db.Char(10)
  frikoppris Float?    @db.Money
  timestamp  String    @db.Char(10)

  @@index([keycmctc], map: "fktrerbcmctc")
  @@index([keycmobj], map: "fktrerbcmobj")
}

model trfrm {
  keytrfrm   String  @id(map: "PK__trfrm__1BE8E8C5") @db.Char(15)
  trfrmkod   String? @db.Char(30)
  trfrmben   String? @db.Char(30)
  metod      String? @db.Char(1)
  utgangspkt String? @db.Char(1)
  vardestart String? @db.Char(1)
  inflatant  Float?  @db.Real
  kalkranta  Float?  @db.Real
  kalkperiod Int?    @db.SmallInt
  procent    Float?  @db.Real
  andamal    String? @db.Char(40)
  anvandej   Int?    @db.TinyInt
  maxfrikop  String? @db.Char(1)
  minfrikop  String? @db.Char(1)
  maxfrifakt Float?  @db.Real
  minfrifakt Float?  @db.Real
  roundoff   Int     @default(0, map: "DF__trfrm__roundoff__1CDD0CFE") @db.TinyInt
  accuracy   Int?
  timestamp  String  @db.Char(10)
}

model trfrp {
  keytrfrp   String  @id(map: "PK__trfrp__1EC55570") @db.Char(15)
  keytrfrm   String? @db.Char(15)
  keytrauf   String? @db.Char(15)
  keycmobj   String? @db.Char(15)
  ar         Int?    @db.SmallInt
  frikoppris Float?  @db.Money
  bokfvarde  Float?  @db.Money
  avgunderl  Float?  @db.Money
  timestamp  String  @db.Char(10)

  @@index([keycmobj], map: "fktrfrpcmobj")
  @@index([keytrauf], map: "fktrfrptrauf")
  @@index([keytrfrm], map: "fktrfrptrfrm")
}

model trkin {
  keytrkin  String  @id(map: "PK__trkin__20AD9DE2") @db.Char(15)
  keytrkup  String? @db.Char(15)
  keyhyinp  String  @db.Char(15)
  status    String? @db.Char(1)
  agdandelt Int?    @db.SmallInt
  agdandeln Int?    @db.SmallInt
  redandelt Int?    @db.SmallInt
  redandeln Int?    @db.SmallInt
  timestamp String  @db.Char(10)

  @@index([keyhyinp], map: "fktrkinhyinp")
  @@index([keytrkup], map: "fktrkintrkup")
}

model trkub {
  keytrkub  String    @id(map: "PK__trkub__2295E654") @db.Char(15)
  keyhyinp  String?   @db.Char(15)
  datum     DateTime? @db.DateTime
  inkomstar Int       @db.SmallInt
  amount    Float?    @db.Money
  timestamp String    @db.Char(10)

  @@index([keyhyinp], map: "fktrkubhyinp")
}

model trkup {
  keytrkup  String    @id(map: "pktrkup") @db.Char(15)
  keycmctc  String    @db.Char(15)
  inkomstar Int       @db.SmallInt
  code      String    @db.Char(30)
  status    Int?      @db.TinyInt
  expdate   DateTime? @db.DateTime
  corrdate  DateTime? @db.DateTime
  voiddate  DateTime? @db.DateTime
  timestamp String    @db.Char(10)

  @@index([keycmctc], map: "fktrkupcmctc")
}

model trlog {
  keytrlog  String    @id(map: "pktrlog") @db.Char(15)
  keysyusr  String?   @db.Char(15)
  keycode   String?   @db.Char(15)
  keycode1  String?   @db.Char(15)
  keycode2  String?   @db.Char(15)
  signatur  String?   @db.VarChar(80)
  logdate   DateTime? @db.DateTime
  loginfo   String?   @db.VarChar(100)
  logtype   Int?      @db.SmallInt
  logtext   String?   @db.VarChar(100)
  timestamp String    @db.Char(10)

  @@index([keycode], map: "fktrlogcode")
  @@index([keycode1], map: "fktrlogcode1")
  @@index([keycode2], map: "fktrlogcode2")
  @@index([keysyusr], map: "fktrlogsyusr")
}

model trval {
  keytrval  String   @id(map: "pktrval") @db.Char(15)
  keycmobj  String   @db.Char(15)
  keysyusr  String?  @db.Char(15)
  valdate   DateTime @db.Date
  timestamp String   @db.Char(10)
  cmobj     cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fktrvalkeycmobj")

  @@index([keycmobj], map: "fktrvalcmobj")
  @@index([keysyusr], map: "fktrvalsyusr")
}

model tvart {
  keytvart                     String    @id(map: "pktvart") @db.Char(15)
  keytvprd                     String    @db.Char(15)
  caption                      String?   @db.VarChar(30)
  suppartno                    String    @db.VarChar(30)
  rskno                        String?   @db.VarChar(10)
  fdate                        DateTime? @db.Date
  tdate                        DateTime? @db.Date
  timestamp                    String    @db.Char(10)
  bakmp                        bakmp[]
  tvprd                        tvprd     @relation(fields: [keytvprd], references: [keytvprd], onDelete: Cascade, onUpdate: NoAction, map: "fktvartkeytvprd")
  tvpin_tvpin_keytvartTotvart  tvpin[]   @relation("tvpin_keytvartTotvart")
  tvpin_tvpin_keytvart2Totvart tvpin[]   @relation("tvpin_keytvart2Totvart")
  tvscr                        tvscr[]

  @@unique([keytvprd, caption], map: "aktvart1")
  @@index([keytvprd], map: "fktvarttvprd")
}

model tvcln {
  keytvcln  String  @id(map: "pktvcln") @db.Char(15)
  caption   String  @unique(map: "aktvcln") @db.VarChar(30)
  sortorder Int     @default(0, map: "DF__tvcln__sortorder__6E9DC858") @db.SmallInt
  timestamp String  @db.Char(10)
  tvprd     tvprd[]
}

model tvobj {
  keytvobj  String    @id(map: "pktvobj") @db.Char(15)
  keycmobj  String    @db.Char(15)
  keytvart  String?   @db.Char(15)
  keytvpcc  String?   @db.Char(15)
  quantity  Float     @default(1, map: "DF__tvobj__quantity__599889D1") @db.Money
  amount    Float     @default(0, map: "DF__tvobj__amount__5A8CAE0A") @db.Money
  fdate     DateTime  @db.Date
  tdate     DateTime? @db.Date
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fktvobjkeycmobj")
}

model tvoff {
  keytvoff  String @id(map: "pktvoff") @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keycmobj], map: "fktvoffcmobj")
}

model tvopt {
  keytvopt   String  @id(map: "pktvopt") @db.Char(15)
  keytvpcc   String  @db.Char(15)
  caption    String  @db.VarChar(60)
  price      Float   @default(0, map: "DF__tvopt__price__25F69CB6") @db.Money
  deposit    Float   @default(0, map: "DF__tvopt__deposit__26EAC0EF") @db.Money
  monthlypay Float   @default(0, map: "DF__tvopt__monthlypa__27DEE528") @db.Money
  mandatory  Int     @default(0, map: "DF__tvopt__mandatory__28D30961") @db.TinyInt
  editqty    Int     @default(0, map: "DF__tvopt__editqty__29C72D9A") @db.TinyInt
  usededuct  Int     @default(0, map: "DF__tvopt__usededuct__2ABB51D3") @db.TinyInt
  publish    Int     @default(0, map: "DF__tvopt__publish__2BAF760C") @db.TinyInt
  timestamp  String  @db.Char(10)
  tvpcc      tvpcc   @relation(fields: [keytvpcc], references: [keytvpcc], onUpdate: NoAction, map: "fktvoptkeytvpcc ")
  tvsco      tvsco[]

  @@index([keytvpcc], map: "fktvopttvpcc")
}

model tvpac {
  keytvpac  String @id(map: "pktvpac") @db.Char(15)
  keytvpcc  String @db.Char(15)
  keypuatg  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keytvpcc, keypuatg], map: "aktvpac1")
  @@index([keypuatg], map: "fktvpacpuatg")
  @@index([keytvpcc], map: "fktvpactvpcc")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tvpacCopy {
  keytvpac      String    @db.Char(15)
  keytvpcc      String    @db.Char(15)
  keypuatg      String    @db.Char(15)
  timestamp     String    @db.Char(10)
  PCCkeytvpcc   String    @db.Char(15)
  PCCkeytvsze   String    @db.Char(15)
  PCCkeytvpca   String    @db.Char(15)
  PCCfdate      DateTime? @db.Date
  PCCtdate      DateTime? @db.Date
  PCCdeposit    Float     @db.Money
  PCCmonthlypay Float     @db.Money
  PCCprice      Float     @db.Money
  PCCtimestamp  String    @db.Char(10)
  SZEkeytvsze   String    @db.Char(15)
  SZEkeybarut   String?   @db.Char(15)
  SZEkeycmuni   String    @db.Char(15)
  SZEkeytvprd   String    @db.Char(15)
  SZEmininterv  Decimal   @db.Decimal(7, 2)
  SZEmaxinterv  Decimal   @db.Decimal(7, 2)
  SZEcaption    String?   @db.VarChar(30)
  SZEtimestamp  String    @db.Char(10)

  @@ignore
}

model tvpca {
  keytvpca   String  @id(map: "pktvpca") @db.Char(15)
  keycmuni   String? @db.Char(15)
  caption    String  @unique(map: "aktvpca") @db.VarChar(60)
  pcadura    Int     @default(0, map: "DF__tvpca__pcadura__2F8006F0") @db.SmallInt
  inrenorent Int     @default(0, map: "DF__tvpca__inrenoren__30742B29") @db.TinyInt
  timestamp  String  @db.Char(10)
  bakmp      bakmp[]
  cmuni      cmuni?  @relation(fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fktvpcakeycmuni ")
  tvvop      tvvop[]

  @@index([keycmuni], map: "fktvpcacmuni")
}

model tvpcc {
  keytvpcc   String    @id(map: "pktvpcc") @db.Char(15)
  keytvsze   String    @db.Char(15)
  keytvpca   String    @db.Char(15)
  fdate      DateTime? @db.Date
  tdate      DateTime? @db.Date
  deposit    Float     @default(0, map: "DF__tvpcc__deposit__64AD8C7B") @db.Money
  monthlypay Float     @default(0, map: "DF__tvpcc__monthlypa__65A1B0B4") @db.Money
  price      Float     @default(0, map: "DF__tvpcc__price__6695D4ED") @db.Money
  timestamp  String    @db.Char(10)
  tvopt      tvopt[]
  tvscr      tvscr[]

  @@index([keytvpca], map: "fktvpcctvpca")
  @@index([keytvsze], map: "fktvpcctvsze")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tvpccCopy {
  keytvpcc     String    @db.Char(15)
  keytvsze     String    @db.Char(15)
  keytvpca     String    @db.Char(15)
  fdate        DateTime? @db.Date
  tdate        DateTime? @db.Date
  deposit      Float     @db.Money
  monthlypay   Float     @db.Money
  price        Float     @db.Money
  timestamp    String    @db.Char(10)
  SZEkeytvsze  String    @db.Char(15)
  SZEkeybarut  String?   @db.Char(15)
  SZEkeycmuni  String    @db.Char(15)
  SZEkeytvprd  String    @db.Char(15)
  SZEmininterv Decimal   @db.Decimal(7, 2)
  SZEmaxinterv Decimal   @db.Decimal(7, 2)
  SZEcaption   String?   @db.VarChar(30)
  SZEtimestamp String    @db.Char(10)

  @@ignore
}

model tvpcd {
  keytvpcd  String @id(map: "pktvpcd") @db.Char(15)
  keytvpdg  String @db.Char(15)
  keytvpdg2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keytvpdg], map: "fktvpcdtvpdg")
  @@index([keytvpdg2], map: "fktvpcdtvpdg2")
}

model tvpci {
  keytvpci  String @id(map: "pktvpci") @db.Char(15)
  keytvprd  String @db.Char(15)
  keytvprd2 String @db.Char(15)
  timestamp String @db.Char(10)

  @@index([keytvprd], map: "fktvpcitvprd")
  @@index([keytvprd2], map: "fktvpcitvprd2")
}

model tvpdg {
  keytvpdg                     String  @id(map: "pktvpdg") @db.Char(15)
  keybakmt                     String? @db.Char(15)
  keycmart                     String? @db.Char(15)
  keycmart2                    String? @db.Char(15)
  keycmart3                    String? @db.Char(15)
  keytvpra                     String  @db.Char(15)
  keyaokat                     String? @db.Char(15)
  code                         String  @db.VarChar(10)
  caption                      String? @db.VarChar(30)
  sortorder                    Int     @default(0, map: "DF__tvpdg__sortorder__3444BC0D") @db.TinyInt
  allowmulti                   Int     @default(0, map: "DF__tvpdg__allowmult__3538E046") @db.TinyInt
  timestamp                    String  @db.Char(10)
  aokat                        aokat?  @relation(fields: [keyaokat], references: [keyaokat], onUpdate: NoAction, map: "fktvpdgkeyaokat")
  bakmt                        bakmt?  @relation(fields: [keybakmt], references: [keybakmt], onDelete: NoAction, onUpdate: NoAction, map: "fktvpdgkeybakmt ")
  cmart_tvpdg_keycmartTocmart  cmart?  @relation("tvpdg_keycmartTocmart", fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvpdgkeycmart")
  cmart_tvpdg_keycmart2Tocmart cmart?  @relation("tvpdg_keycmart2Tocmart", fields: [keycmart2], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvpdgkeycmart2")
  cmart_tvpdg_keycmart3Tocmart cmart?  @relation("tvpdg_keycmart3Tocmart", fields: [keycmart3], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvpdgkeycmart3")
  tvpra                        tvpra   @relation(fields: [keytvpra], references: [keytvpra], onUpdate: NoAction, map: "fktvpdgkeytvpra ")
  tvprd_tvprd_keytvpdgTotvpdg  tvprd[] @relation("tvprd_keytvpdgTotvpdg")
  tvprd_tvprd_keytvpdg2Totvpdg tvprd[] @relation("tvprd_keytvpdg2Totvpdg")

  @@unique([keytvpra, code], map: "aktvpdg")
  @@index([keyaokat], map: "fktvpdgaokat")
  @@index([keybakmt], map: "fktvpdgbakmt")
  @@index([keycmart], map: "fktvpdgcmart")
  @@index([keycmart2], map: "fktvpdgcmart2")
  @@index([keycmart3], map: "fktvpdgcmart3")
}

model tvpin {
  keytvpin                     String  @id(map: "pktvpin") @db.Char(15)
  keytvprd                     String? @db.Char(15)
  keytvprd2                    String? @db.Char(15)
  keytvart                     String? @db.Char(15)
  keytvart2                    String? @db.Char(15)
  sortorder                    Int     @default(0, map: "DF__tvpin__sortorder__71CA38C7") @db.TinyInt
  timestamp                    String  @db.Char(10)
  tvart_tvpin_keytvartTotvart  tvart?  @relation("tvpin_keytvartTotvart", fields: [keytvart], references: [keytvart], onDelete: NoAction, onUpdate: NoAction, map: "fktvpinkeytvart ")
  tvart_tvpin_keytvart2Totvart tvart?  @relation("tvpin_keytvart2Totvart", fields: [keytvart2], references: [keytvart], onDelete: NoAction, onUpdate: NoAction, map: "fktvpinkeytvart2 ")
  tvprd_tvpin_keytvprdTotvprd  tvprd?  @relation("tvpin_keytvprdTotvprd", fields: [keytvprd], references: [keytvprd], onDelete: Cascade, onUpdate: NoAction, map: "fktvpinkeytvprd")
  tvprd_tvpin_keytvprd2Totvprd tvprd?  @relation("tvpin_keytvprd2Totvprd", fields: [keytvprd2], references: [keytvprd], onDelete: NoAction, onUpdate: NoAction, map: "fktvpinkeytvprd2")

  @@index([keytvart], map: "fktvpintvart")
  @@index([keytvart2], map: "fktvpintvart2")
  @@index([keytvprd], map: "fktvpintvprd")
  @@index([keytvprd2], map: "fktvpintvprd2")
}

model tvpra {
  keytvpra  String  @id(map: "pktvpra") @db.Char(15)
  caption   String  @unique(map: "aktvpra") @db.VarChar(30)
  sortorder Int     @default(0, map: "DF__tvpra__sortorder__717A3503") @db.TinyInt
  contract  Int     @default(0, map: "DF__tvpra__contract__726E593C") @db.TinyInt
  service   Int     @default(0, map: "DF__tvpra__service__73627D75") @db.TinyInt
  timestamp String  @db.Char(10)
  tvpdg     tvpdg[]
}

model tvprd {
  keytvprd                     String  @id(map: "pktvprd") @db.Char(15)
  keycmart                     String? @db.Char(15)
  keycmart2                    String? @db.Char(15)
  keycmart3                    String? @db.Char(15)
  keycmart4                    String? @db.Char(15)
  keycmctc                     String? @db.Char(15)
  keytvpdg                     String  @db.Char(15)
  keytvpdg2                    String? @db.Char(15)
  keytvcln                     String? @db.Char(15)
  keyprdct                     String? @db.Char(15)
  code                         String  @unique(map: "aktvprd") @db.VarChar(30)
  caption                      String? @db.VarChar(30)
  extendinv                    Int     @default(0, map: "DF__tvprd__extendinv__3DCE2647") @db.TinyInt
  repaytime                    Int?    @db.SmallInt
  warrmonth                    Int?    @db.TinyInt
  prdoption                    Int     @default(0, map: "DF__tvprd__prdoption__3EC24A80") @db.TinyInt
  dispextent                   Int     @default(0, map: "DF__tvprd__dispexten__3FB66EB9") @db.TinyInt
  startprice                   Float?  @db.Money
  lowprice                     Float?  @db.Money
  dedusprice                   Float?  @db.Money
  inrenorent                   Int     @default(0, map: "DF__tvprd__inrenoren__40AA92F2") @db.TinyInt
  publish                      Int     @default(0, map: "DF__tvprd__publish__419EB72B") @db.TinyInt
  timestamp                    String  @db.Char(10)
  tvart                        tvart[]
  tvpin_tvpin_keytvprdTotvprd  tvpin[] @relation("tvpin_keytvprdTotvprd")
  tvpin_tvpin_keytvprd2Totvprd tvpin[] @relation("tvpin_keytvprd2Totvprd")
  cmart_tvprd_keycmartTocmart  cmart?  @relation("tvprd_keycmartTocmart", fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvprdkeycmart")
  cmart_tvprd_keycmart2Tocmart cmart?  @relation("tvprd_keycmart2Tocmart", fields: [keycmart2], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvprdkeycmart2")
  cmart_tvprd_keycmart3Tocmart cmart?  @relation("tvprd_keycmart3Tocmart", fields: [keycmart3], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvprdkeycmart3")
  cmart_tvprd_keycmart4Tocmart cmart?  @relation("tvprd_keycmart4Tocmart", fields: [keycmart4], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvprdkeycmart4")
  cmctc                        cmctc?  @relation(fields: [keycmctc], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fktvprdkeycmctc")
  prdct                        prdct?  @relation(fields: [keyprdct], references: [keyprdct], onUpdate: NoAction, map: "fktvprdkeyprdct ")
  tvcln                        tvcln?  @relation(fields: [keytvcln], references: [keytvcln], onDelete: NoAction, onUpdate: NoAction, map: "fktvprdkeytvcln ")
  tvpdg_tvprd_keytvpdgTotvpdg  tvpdg   @relation("tvprd_keytvpdgTotvpdg", fields: [keytvpdg], references: [keytvpdg], onUpdate: NoAction, map: "fktvprdkeytvpdg ")
  tvpdg_tvprd_keytvpdg2Totvpdg tvpdg?  @relation("tvprd_keytvpdg2Totvpdg", fields: [keytvpdg2], references: [keytvpdg], onDelete: NoAction, onUpdate: NoAction, map: "fktvprdkeytvpdg2 ")
  tvprl                        tvprl[]
  tvpro                        tvpro[]
  tvsta                        tvsta[]
  tvvop                        tvvop[]

  @@index([keycmart], map: "fktvprdcmart")
  @@index([keycmart2], map: "fktvprdcmart2")
  @@index([keycmart3], map: "fktvprdcmart3")
  @@index([keycmart4], map: "fktvprdcmart4")
  @@index([keycmctc], map: "fktvprdcmctc")
  @@index([keyprdct], map: "fktvprdprdct")
  @@index([keytvcln], map: "fktvprdtvcln")
  @@index([keytvpdg], map: "fktvprdtvpdg")
  @@index([keytvpdg2], map: "fktvprdtvpdg2")
}

model tvprl {
  keytvprl   String    @id(map: "pktvprl") @db.Char(15)
  keytvprd   String    @db.Char(15)
  keycmobj   String?   @db.Char(15)
  prdallowed Int       @default(1, map: "DF__tvprl__prdallowe__34021078") @db.TinyInt
  blockfdate DateTime? @db.DateTime
  blocktdate DateTime? @db.DateTime
  timestamp  String    @db.Char(10)
  cmobj      cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fktvprlkeycmobj")
  tvprd      tvprd     @relation(fields: [keytvprd], references: [keytvprd], onDelete: Cascade, onUpdate: NoAction, map: "fktvprlkeytvprd")

  @@unique([keytvprd, keycmobj], map: "aktvprl1")
  @@index([keycmobj], map: "fktvprlcmobj")
}

model tvpro {
  keytvpro  String    @id(map: "pktvpro") @db.Char(15)
  keytvprd  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  fdate     DateTime  @db.Date
  tdate     DateTime? @db.Date
  disperce  Decimal?  @db.Decimal(4, 1)
  prdoption Int       @default(0, map: "DF__tvpro__prdoption__498C3F3A") @db.TinyInt
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fktvprokeycmobj")
  tvprd     tvprd     @relation(fields: [keytvprd], references: [keytvprd], onDelete: Cascade, onUpdate: NoAction, map: "fktvprokeytvprd")

  @@unique([keytvprd, keycmobj], map: "aktvpro")
  @@index([keycmobj], map: "fktvprocmobj")
}

model tvrut {
  keytvrut  String @id(map: "pktvrut") @db.Char(15)
  keybarut  String @db.Char(15)
  keytvprd  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keybarut, keytvprd], map: "aktvrut1")
  @@index([keybarut], map: "fktvrutbarut")
  @@index([keytvprd], map: "fktvruttvprd")
}

model tvsch {
  keytvsch   String    @id(map: "pktvsch") @db.Char(15)
  keycmctc   String    @db.Char(15)
  keycmobj   String?   @db.Char(15)
  keysyusr   String?   @db.Char(15)
  keyhyobj   String?   @db.Char(15)
  keyaotlt   String?   @db.Char(15)
  caption    String    @unique(map: "aktvsch1") @db.VarChar(30)
  status     Int       @db.TinyInt
  rcostptime Int       @default(0, map: "DF__tvsch__rcostptim__33057208") @db.TinyInt
  orderdate  DateTime  @db.Date
  ordertime  DateTime  @db.Time
  apprdate   DateTime? @db.Date
  rejreason  String?   @db.VarChar(200)
  timestamp  String    @db.Char(10)
  tvscr      tvscr[]

  @@index([keyaotlt], map: "fktvschaotlt")
  @@index([keycmctc], map: "fktvschcmctc")
  @@index([keycmobj], map: "fktvschcmobj")
  @@index([keyhyobj], map: "fktvschhyobj")
  @@index([keysyusr], map: "fktvschsyusr")
}

model tvsco {
  keytvsco   String @id(map: "pktvsco") @db.Char(15)
  keytvscr   String @db.Char(15)
  keytvopt   String @db.Char(15)
  quantity   Float  @default(0, map: "DF__tvsco__quantity__3D991C1D") @db.Money
  isselected Int    @default(0, map: "DF__tvsco__isselecte__3E8D4056") @db.TinyInt
  timestamp  String @db.Char(10)
  tvopt      tvopt  @relation(fields: [keytvopt], references: [keytvopt], onUpdate: NoAction, map: "fktvscokeytvopt ")
  tvscr      tvscr  @relation(fields: [keytvscr], references: [keytvscr], onDelete: Cascade, onUpdate: NoAction, map: "fktvscokeytvscr ")

  @@unique([keytvscr, keytvopt], map: "aktvsco")
  @@index([keytvopt], map: "fktvscotvopt")
}

model tvscr {
  keytvscr  String  @id(map: "pktvscr") @db.Char(15)
  keytvsch  String  @db.Char(15)
  keytvpcc  String  @db.Char(15)
  keytvart  String? @db.Char(15)
  keycmobj  String? @db.Char(15)
  keycmobj2 String? @db.Char(15)
  keyprdct  String? @db.Char(15)
  status    Int     @default(0, map: "DF__tvscr__status__4D1069D7") @db.TinyInt
  invchoice Int     @default(0, map: "DF__tvscr__invchoice__4E048E10") @db.TinyInt
  invstatus Int     @default(0, map: "DF__tvscr__invstatus__4EF8B249") @db.TinyInt
  prdextra  Int     @default(0, map: "DF__tvscr__prdextra__4FECD682") @db.TinyInt
  quantity  Float   @default(1, map: "DF__tvscr__quantity__50E0FABB") @db.Money
  amount    Float   @default(0, map: "DF__tvscr__amount__51D51EF4") @db.Money
  timestamp String  @db.Char(10)
  tvsco     tvsco[]
  cmobj     cmobj?  @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fktvscrkeycmobj ")
  prdct     prdct?  @relation(fields: [keyprdct], references: [keyprdct], onUpdate: NoAction, map: "fktvscrkeyprdct ")
  tvart     tvart?  @relation(fields: [keytvart], references: [keytvart], onDelete: NoAction, onUpdate: NoAction, map: "fktvscrkeytvart ")
  tvpcc     tvpcc   @relation(fields: [keytvpcc], references: [keytvpcc], onUpdate: NoAction, map: "fktvscrkeytvpcc ")
  tvsch     tvsch   @relation(fields: [keytvsch], references: [keytvsch], onDelete: Cascade, onUpdate: NoAction, map: "fktvscrkeytvsch ")

  @@index([keycmobj], map: "fktvscrcmobj")
  @@index([keycmobj2], map: "fktvscrcmobj2")
  @@index([keyprdct], map: "fktvscrprdct")
  @@index([keytvart], map: "fktvscrtvart")
  @@index([keytvpcc], map: "fktvscrtvpcc")
  @@index([keytvsch], map: "fktvscrtvsch")
}

model tvsta {
  keytvsta  String    @id(map: "pktvsta") @db.Char(15)
  keytvprd  String    @db.Char(15)
  keycmobj  String?   @db.Char(15)
  keycmctc  String?   @db.Char(15)
  fdate     DateTime? @db.Date
  tdate     DateTime? @db.Date
  timestamp String    @db.Char(10)
  cmctc     cmctc?    @relation(fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fktvstakeycmctc")
  cmobj     cmobj?    @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fktvstakeycmobj")
  tvprd     tvprd     @relation(fields: [keytvprd], references: [keytvprd], onUpdate: NoAction, map: "fktvstakeytvprd")

  @@index([keycmctc], map: "fktvstacmctc")
  @@index([keycmobj], map: "fktvstacmobj")
  @@index([keytvprd], map: "fktvstatvprd")
}

model tvsze {
  keytvsze  String  @id(map: "pktvsze") @db.Char(15)
  keybarut  String? @db.Char(15)
  keycmuni  String  @db.Char(15)
  keytvprd  String  @db.Char(15)
  mininterv Decimal @db.Decimal(7, 2)
  maxinterv Decimal @db.Decimal(7, 2)
  caption   String? @db.VarChar(30)
  timestamp String  @db.Char(10)

  @@index([keybarut], map: "fktvszebarut")
  @@index([keycmuni], map: "fktvszecmuni")
  @@index([keytvprd], map: "fktvszetvprd")
}

model tvvoo {
  keytvvoo  String @id(map: "pktvvoo") @db.Char(15)
  keytvvou  String @db.Char(15)
  keycmobj  String @db.Char(15)
  timestamp String @db.Char(10)
  cmobj     cmobj  @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fktvvookeycmobj ")
  tvvou     tvvou  @relation(fields: [keytvvou], references: [keytvvou], onDelete: Cascade, onUpdate: NoAction, map: "fktvvookeytvvou")

  @@unique([keytvvou, keycmobj], map: "aktvvoo")
}

model tvvop {
  keytvvop  String  @id(map: "pktvvop") @db.Char(15)
  keytvvou  String  @db.Char(15)
  keytvprd  String  @db.Char(15)
  keytvpca  String? @db.Char(15)
  sizetext  String? @db.VarChar(60)
  isvalid   Int     @default(1, map: "DF__tvvop__isvalid__4351F573") @db.TinyInt
  timestamp String  @db.Char(10)
  tvpca     tvpca?  @relation(fields: [keytvpca], references: [keytvpca], onDelete: Cascade, onUpdate: NoAction, map: "fktvvopkeytvpca ")
  tvprd     tvprd   @relation(fields: [keytvprd], references: [keytvprd], onDelete: Cascade, onUpdate: NoAction, map: "fktvvopkeytvprd ")
  tvvou     tvvou   @relation(fields: [keytvvou], references: [keytvvou], onDelete: Cascade, onUpdate: NoAction, map: "fktvvopkeytvvou ")

  @@unique([keytvvop, keytvprd, keytvpca], map: "aktvvop")
}

model tvvos {
  keytvvos  String   @id(map: "pktvvos") @db.Char(15)
  keytvvou  String   @db.Char(15)
  keytvscr  String?  @db.Char(15)
  keycmctc  String   @db.Char(15)
  amount    Float    @default(0, map: "DF__tvvos__amount__490ACEC9") @db.Money
  sdate     DateTime @db.Date
  timestamp String   @db.Char(10)
  cmctc     cmctc    @relation(fields: [keycmctc], references: [keycmctc], onDelete: Cascade, onUpdate: NoAction, map: "fktvvoskeycmctc")
  tvvou     tvvou    @relation(fields: [keytvvou], references: [keytvvou], onDelete: Cascade, onUpdate: NoAction, map: "fktvvoskeytvvou ")

  @@index([keycmctc], map: "fktvvoscmctc")
  @@index([keytvscr], map: "fktvvostvscr")
  @@index([keytvvou], map: "fktvvostvvou")
}

model tvvou {
  keytvvou                     String    @id(map: "pktvvou") @db.Char(15)
  keycmart                     String?   @db.Char(15)
  keycmart2                    String?   @db.Char(15)
  keycmuni                     String?   @db.Char(15)
  caption                      String    @unique(map: "aktvvou") @db.VarChar(60)
  descript                     String    @db.VarChar(1000)
  voukind                      Int       @default(0, map: "DF__tvvou__voukind__597640BC") @db.TinyInt
  voustatus                    Int       @default(0, map: "DF__tvvou__voustatus__5A6A64F5") @db.TinyInt
  amount                       Float     @default(0, map: "DF__tvvou__amount__5B5E892E") @db.Money
  vouprcnt                     Decimal   @default(0, map: "DF__tvvou__vouprcnt__5C52AD67") @db.Decimal(5, 2)
  voudura                      Int       @default(0, map: "DF__tvvou__voudura__5D46D1A0") @db.SmallInt
  fdate                        DateTime? @db.Date
  tdate                        DateTime? @db.Date
  timestamp                    String    @db.Char(10)
  tvvoo                        tvvoo[]
  tvvop                        tvvop[]
  tvvos                        tvvos[]
  cmart_tvvou_keycmartTocmart  cmart?    @relation("tvvou_keycmartTocmart", fields: [keycmart], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvvoukeycmart")
  cmart_tvvou_keycmart2Tocmart cmart?    @relation("tvvou_keycmart2Tocmart", fields: [keycmart2], references: [keycmart], onDelete: NoAction, onUpdate: NoAction, map: "fktvvoukeycmart2")
  cmuni                        cmuni?    @relation(fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fktvvoukeycmuni ")

  @@index([keycmart], map: "fktvvoucmart")
  @@index([keycmart2], map: "fktvvoucmart2")
}

model ubagc {
  keyubagc  String @id(map: "pkubagc") @db.Char(15)
  keysylng  String @db.Char(15)
  keyubagp  String @db.Char(15)
  caption   String @db.VarChar(50)
  measure0  String @db.VarChar(50)
  measure9  String @db.VarChar(50)
  isactive  Int    @default(1, map: "DF__ubagc__isactive__66792397") @db.TinyInt
  timestamp String @db.Char(10)
  ubagp     ubagp  @relation(fields: [keyubagp], references: [keyubagp], onDelete: Cascade, onUpdate: NoAction, map: "fkubagckeyubagp ")

  @@unique([keysylng, keyubagp], map: "akubagc1")
  @@index([keysylng], map: "fkubagcsylng")
  @@index([keyubagp], map: "fkubagcubagp")
}

model ubagp {
  keyubagp  String  @id(map: "pkubagp") @db.Char(15)
  code      String  @unique(map: "akubagp1") @db.Char(1)
  timestamp String  @db.Char(10)
  ubagc     ubagc[]
  ubbdl     ubbdl[]
}

model ubakc {
  keyubakc  String  @id(map: "pkubakc") @db.Char(15)
  keysylng  String  @db.Char(15)
  keyubakt  String  @db.Char(15)
  keyskyrk  String? @db.Char(15)
  keycmind  String? @db.Char(15)
  keycminv  String? @db.Char(15)
  keycminv2 String? @db.Char(15)
  mtrlcost  Float   @db.Money
  timestamp String  @db.Char(10)

  @@unique([keysylng, keyubakt], map: "akubakc1")
  @@index([keycmind], map: "fkubakccmind")
  @@index([keycminv], map: "fkubakccminv")
  @@index([keyskyrk], map: "fkubakcskyrk")
  @@index([keysylng], map: "fkubakcsylng")
  @@index([keyubakt], map: "fkubakcubakt")
}

model ubakt {
  keyubakt                     String  @id(map: "pkubakt") @db.Char(15)
  keyubmea                     String  @db.Char(15)
  keyubmea2                    String? @db.Char(15)
  code                         String  @db.Char(1)
  unittime                     Decimal @default(0, map: "DF__ubakt__unittime__06B0E8FF") @db.Decimal(5, 2)
  inputquant                   Decimal @default(0, map: "DF__ubakt__inputquan__07A50D38") @db.Decimal(5, 2)
  timestamp                    String  @db.Char(10)
  ubmea_ubakt_keyubmeaToubmea  ubmea   @relation("ubakt_keyubmeaToubmea", fields: [keyubmea], references: [keyubmea], onDelete: Cascade, onUpdate: NoAction, map: "fkubaktkeyubmea ")
  ubmea_ubakt_keyubmea2Toubmea ubmea?  @relation("ubakt_keyubmea2Toubmea", fields: [keyubmea2], references: [keyubmea], onDelete: NoAction, onUpdate: NoAction, map: "fkubaktkeyubmea2 ")

  @@unique([keyubmea, code], map: "akubakt1")
  @@index([keyubmea], map: "fkubaktubmea")
  @@index([keyubmea2], map: "fkubaktubmea2")
}

model ubatc {
  keyubatc  String @id(map: "pkubatc") @db.Char(15)
  keysylng  String @db.Char(15)
  keyubatt  String @db.Char(15)
  caption   String @db.VarChar(50)
  note      String @db.VarChar(2000)
  pagebreak Int    @default(0, map: "DF__ubatc__pagebreak__0C69C255") @db.TinyInt
  timestamp String @db.Char(10)
  ubatt     ubatt  @relation(fields: [keyubatt], references: [keyubatt], onDelete: Cascade, onUpdate: NoAction, map: "fkubatckeyubatt ")

  @@unique([keysylng, keyubatt], map: "akubatc1")
  @@index([keysylng], map: "fkubatcsylng")
  @@index([keyubatt], map: "fkubatcubatt")
}

model ubatt {
  keyubatt  String  @id(map: "pkubatt") @db.Char(15)
  keyubhdt  String  @db.Char(15)
  code      String  @db.Char(1)
  timestamp String  @db.Char(10)
  ubatc     ubatc[]
  ubhdt     ubhdt   @relation(fields: [keyubhdt], references: [keyubhdt], onDelete: Cascade, onUpdate: NoAction, map: "fkubattkeyubhdt ")
  ubmea     ubmea[]

  @@unique([keyubhdt, code], map: "akubatt1")
  @@index([keyubhdt], map: "fkubattubhdt")
}

model ubbdc {
  keyubbdc  String @id(map: "pkubbdc") @db.Char(15)
  keysylng  String @db.Char(15)
  keyubbdl  String @db.Char(15)
  caption   String @db.VarChar(50)
  timestamp String @db.Char(10)

  @@unique([keysylng, keyubbdl], map: "akubbdc1")
  @@index([keysylng], map: "fkubbdcsylng")
  @@index([keyubbdl], map: "fkubbdcubbdl")
}

model ubbdl {
  keyubbdl  String  @id(map: "pkubbdl") @db.Char(15)
  keyubagp  String  @db.Char(15)
  code      String  @db.Char(1)
  timestamp String  @db.Char(10)
  ubagp     ubagp   @relation(fields: [keyubagp], references: [keyubagp], onDelete: Cascade, onUpdate: NoAction, map: "fkubbdlkeyubagp ")
  ubhdt     ubhdt[]

  @@unique([keyubagp, code], map: "akubbdl1")
  @@index([keyubagp], map: "fkubbdlubagp")
}

model ubhda {
  keyubhda  String @id(map: "pkubhda") @db.Char(15)
  keysylng  String @db.Char(15)
  keyubhdt  String @db.Char(15)
  code      String @db.Char(1)
  caption   String @db.VarChar(50)
  timestamp String @db.Char(10)
  ubhdt     ubhdt  @relation(fields: [keyubhdt], references: [keyubhdt], onDelete: Cascade, onUpdate: NoAction, map: "fkubhdakeyubhdt")

  @@unique([keysylng, keyubhdt, code], map: "akubhda1")
  @@index([keysylng], map: "fkubhdasylng")
  @@index([keyubhdt], map: "fkubhdaubhdt")
}

model ubhdc {
  keyubhdc  String @id(map: "pkubhdc") @db.Char(15)
  keysylng  String @db.Char(15)
  keyubhdt  String @db.Char(15)
  caption   String @db.VarChar(50)
  note      String @db.VarChar(2000)
  notecond  String @db.VarChar(2000)
  pagebreak Int    @default(0, map: "DF__ubhdc__pagebreak__4E6C8FDC") @db.TinyInt
  colbreak  Int    @default(0, map: "DF__ubhdc__colbreak__4F60B415") @db.TinyInt
  timestamp String @db.Char(10)
  ubhdt     ubhdt  @relation(fields: [keyubhdt], references: [keyubhdt], onDelete: Cascade, onUpdate: NoAction, map: "fkubhdckeyubhdt ")

  @@unique([keysylng, keyubhdt], map: "akubhdc1")
  @@index([keysylng], map: "fkubhdcsylng")
  @@index([keyubhdt], map: "fkubhdcubhdt")
}

model ubhdt {
  keyubhdt  String  @id(map: "pkubhdt") @db.Char(15)
  keyubbdl  String  @db.Char(15)
  code      String  @db.Char(1)
  timestamp String  @db.Char(10)
  ubatt     ubatt[]
  ubhda     ubhda[]
  ubhdc     ubhdc[]
  ubbdl     ubbdl   @relation(fields: [keyubbdl], references: [keyubbdl], onDelete: Cascade, onUpdate: NoAction, map: "fkubhdtkeyubbdl ")

  @@unique([keyubbdl, code], map: "akubhdt1")
  @@index([keyubbdl], map: "fkubhdtubbdl")
}

model ubmea {
  keyubmea                     String  @id(map: "pkubmea") @db.Char(15)
  keycmuni                     String  @db.Char(15)
  keyubatt                     String  @db.Char(15)
  keyubmtt                     String? @db.Char(15)
  code                         String  @db.Char(1)
  intexposed                   Int     @default(0, map: "DF__ubmea__intexpose__533144F9") @db.TinyInt
  intnormal                    Int     @default(0, map: "DF__ubmea__intnormal__54256932") @db.TinyInt
  intprotect                   Int     @default(0, map: "DF__ubmea__intprotec__55198D6B") @db.TinyInt
  intprogram                   Int     @default(0, map: "DF__ubmea__intprogra__560DB1A4") @db.TinyInt
  includeub                    Int     @default(1, map: "DF__ubmea__includeub__5701D5DD") @db.TinyInt
  includecl                    Int     @default(1, map: "DF__ubmea__includecl__57F5FA16") @db.TinyInt
  meatype                      Int     @default(1, map: "DF__ubmea__meatype__58EA1E4F") @db.TinyInt
  timestamp                    String  @db.Char(10)
  ubakt_ubakt_keyubmeaToubmea  ubakt[] @relation("ubakt_keyubmeaToubmea")
  ubakt_ubakt_keyubmea2Toubmea ubakt[] @relation("ubakt_keyubmea2Toubmea")
  cmuni                        cmuni   @relation(fields: [keycmuni], references: [keycmuni], onUpdate: NoAction, map: "fkubmeakeycmuni ")
  ubatt                        ubatt   @relation(fields: [keyubatt], references: [keyubatt], onDelete: Cascade, onUpdate: NoAction, map: "fkubmeakeyubatt ")
  ubmtt                        ubmtt?  @relation(fields: [keyubmtt], references: [keyubmtt], onDelete: NoAction, onUpdate: NoAction, map: "fkubmeakeyubmtt ")
  ubmec                        ubmec[]
  ubmeh                        ubmeh[]

  @@unique([keyubatt, code], map: "akubmea1")
  @@index([keycmuni], map: "fkubmeacmuni")
  @@index([keyubatt], map: "fkubmeaubatt")
  @@index([keyubmtt], map: "fkubmeaubmtt")
}

model ubmec {
  keyubmec  String  @id(map: "pkubmec") @db.Char(15)
  keysylng  String  @db.Char(15)
  keyubmea  String  @db.Char(15)
  keycmvat  String? @db.Char(15)
  code      String  @db.VarChar(10)
  caption2  String  @db.VarChar(40)
  textplain String  @db.VarChar(40)
  comment   String  @db.VarChar(36)
  timestamp String  @db.Char(10)
  cmvat     cmvat?  @relation(fields: [keycmvat], references: [keycmvat], onUpdate: NoAction, map: "fkubmeckeycmvat")
  ubmea     ubmea   @relation(fields: [keyubmea], references: [keyubmea], onDelete: Cascade, onUpdate: NoAction, map: "fkubmeckeyubmea ")

  @@unique([keysylng, keyubmea], map: "akubmec1")
  @@index([keycmvat], map: "fkubmeccmvat")
  @@index([keysylng], map: "fkubmecsylng")
  @@index([keyubmea], map: "fkubmecubmea")
}

model ubmeh {
  keyubmeh   String   @id(map: "pkubmeh") @db.Char(15)
  keysylng   String   @db.Char(15)
  keyubmea   String?  @db.Char(15)
  changedate DateTime @db.Date
  generation Int      @default(0, map: "DF__ubmeh__generatio__62738889")
  prevcode   String   @db.Char(10)
  newcode    String?  @db.Char(10)
  factor     Decimal  @default(0, map: "DF__ubmeh__factor__6367ACC2") @db.Decimal(7, 2)
  status     Int      @default(1, map: "DF__ubmeh__status__645BD0FB") @db.TinyInt
  timestamp  String   @db.Char(10)
  ubmea      ubmea?   @relation(fields: [keyubmea], references: [keyubmea], onUpdate: NoAction, map: "fkubmehkeyubmea ")

  @@index([keysylng], map: "fkubmehsylng")
  @@index([keyubmea], map: "fkubmehubmea")
}

model ubmtc {
  keyubmtc  String @id(map: "pkubmtc") @db.Char(15)
  keyubmtt  String @db.Char(15)
  keysylng  String @db.Char(15)
  caption   String @db.VarChar(100)
  timestamp String @db.Char(10)
  ubmtt     ubmtt  @relation(fields: [keyubmtt], references: [keyubmtt], onDelete: Cascade, onUpdate: NoAction, map: "fkubmtckeyubmtt ")

  @@index([keysylng], map: "fkubmtcsylng")
  @@index([keyubmtt], map: "fkubmtcubmtt")
}

model ubmtt {
  keyubmtt  String  @id(map: "pkubmtt") @db.Char(15)
  code      String  @db.VarChar(10)
  timestamp String  @db.Char(10)
  ubmea     ubmea[]
  ubmtc     ubmtc[]
}

model ubnsk {
  keyubnsk  String @id(map: "pkubnsk") @db.Char(15)
  code      String @unique(map: "akubnsk1") @db.Char(5)
  caption   String @db.VarChar(100)
  timestamp String @db.Char(10)
}

model ubprd {
  keyubprd   String  @id(map: "pkubprd") @db.Char(15)
  keysylng   String  @db.Char(15)
  keydorev   String  @db.Char(15)
  exporttype Int     @db.TinyInt
  nsfilepath String? @db.VarChar(500)
  timestamp  String  @db.Char(10)
  dorev      dorev   @relation(fields: [keydorev], references: [keydorev], onUpdate: NoAction, map: "fkubprdkeydorev")

  @@unique([keysylng, keydorev, exporttype], map: "akubprd1")
  @@index([keydorev], map: "fkubprddorev")
  @@index([keysylng], map: "fkubprdsylng")
}

model vcacl {
  keyvcacl   String  @id(map: "pkvcacl") @db.Char(15)
  caption    String  @unique(map: "akvcacl") @db.VarChar(60)
  inclvatadj Int     @default(0, map: "DF__vcacl__inclvatad__7AB738F6") @db.TinyInt
  inclvatdeg Int     @default(0, map: "DF__vcacl__inclvatde__7BAB5D2F") @db.TinyInt
  timestamp  String  @db.Char(10)
  babps      babps[]
  bahyr      bahyr[]
  balgh      balgh[]
  balok      balok[]
  bauhe      bauhe[]
}

model vcbgr {
  keyvcbgr  String  @id(map: "pkvcbgr") @db.Char(15)
  code      String  @unique(map: "akvcbgr1") @db.VarChar(15)
  caption   String  @db.VarChar(60)
  timestamp String  @db.Char(10)
  vcoiv     vcoiv[]
}

model vcfet {
  keyvcfet  String  @id(map: "pkvcfet") @db.Char(15)
  caption   String  @unique(map: "akvcfet") @db.VarChar(60)
  fetprcnt  Decimal @default(0, map: "DF__vcfet__fetprcnt__71701362") @db.Decimal(8, 3)
  timestamp String  @db.Char(10)
}

model vcman {
  keyvcman   String    @id(map: "pkvcman") @db.Char(15)
  keyvcprc   String    @db.Char(15)
  manvatprct Decimal?  @db.Decimal(10, 2)
  fdate      DateTime? @db.Date
  tdate      DateTime? @db.Date
  timestamp  String    @db.Char(10)
  vcprc      vcprc     @relation(fields: [keyvcprc], references: [keyvcprc], onDelete: Cascade, onUpdate: NoAction, map: "fkvcmankeyvcprc ")

  @@index([keyvcprc], map: "fkvcmanvcprc")
}

model vcoiv {
  keyvcoiv   String    @id(map: "pkvcoiv") @db.Char(15)
  keyvcprj   String    @db.Char(15)
  keyvcbgr   String    @db.Char(15)
  code       String?   @db.VarChar(30)
  caption    String?   @db.VarChar(60)
  compdate   DateTime? @db.Date
  fdate      DateTime? @db.Date
  regdate    DateTime? @db.Date
  tdate      DateTime? @db.Date
  netamount  Float     @default(0, map: "DF__vcoiv__netamount__4E66CE47") @db.Money
  groamount  Float     @default(0, map: "DF__vcoiv__groamount__4F5AF280") @db.Money
  dedvat     Float     @default(0, map: "DF__vcoiv__dedvat__504F16B9") @db.Money
  invamount  Float     @default(0, map: "DF__vcoiv__invamount__51433AF2") @db.Money
  invvat     Float     @default(0, map: "DF__vcoiv__invvat__52375F2B") @db.Money
  invstatus  Int       @default(0, map: "DF__vcoiv__invstatus__532B8364") @db.TinyInt
  feetype    Int       @default(0, map: "DF__vcoiv__feetype__541FA79D") @db.TinyInt
  activation Int       @default(0, map: "DF__vcoiv__activatio__5513CBD6") @db.TinyInt
  changenote String?   @db.VarChar(100)
  exmoney1   Float     @default(0, map: "DF__vcoiv__exmoney1__5607F00F") @db.Money
  exmoney2   Float     @default(0, map: "DF__vcoiv__exmoney2__56FC1448") @db.Money
  exmoney3   Float     @default(0, map: "DF__vcoiv__exmoney3__57F03881") @db.Money
  extiny1    Int       @default(0, map: "DF__vcoiv__extiny1__58E45CBA") @db.TinyInt
  extiny2    Int       @default(0, map: "DF__vcoiv__extiny2__59D880F3") @db.TinyInt
  extiny3    Int       @default(0, map: "DF__vcoiv__extiny3__5ACCA52C") @db.TinyInt
  exdate1    DateTime? @db.Date
  exdate2    DateTime? @db.Date
  exdate3    DateTime? @db.Date
  exstring1  String?   @db.VarChar(90)
  exstring2  String?   @db.VarChar(90)
  exstring3  String?   @db.VarChar(90)
  timestamp  String    @db.Char(10)
  vcbgr      vcbgr     @relation(fields: [keyvcbgr], references: [keyvcbgr], onUpdate: NoAction, map: "fkvcoivkeyvcbgr ")
  vcprj      vcprj     @relation(fields: [keyvcprj], references: [keyvcprj], onUpdate: NoAction, map: "fkvcoivkeyvcprj ")

  @@index([keyvcbgr], map: "fkvcoivvcbgr")
  @@index([keyvcprj], map: "fkvcoivvcprj")
}

model vcprc {
  keyvcprc   String  @id(map: "pkvcprc") @db.Char(15)
  keyvcprj   String  @db.Char(15)
  keycmobj   String  @db.Char(15)
  dedprcnt   Decimal @default(0, map: "DF__vcprc__dedprcnt__5F915A49") @db.Decimal(8, 2)
  area       Decimal @default(0, map: "DF__vcprc__area__60857E82") @db.Decimal(8, 2)
  manprcnt   Decimal @default(0, map: "DF__vcprc__manprcnt__6179A2BB") @db.Decimal(10, 2)
  changenote String? @db.VarChar(100)
  timestamp  String  @db.Char(10)
  vcman      vcman[]
  cmobj      cmobj   @relation(fields: [keycmobj], references: [keycmobj], onUpdate: NoAction, map: "fkvcprckeycmobj ")
  vcprj      vcprj   @relation(fields: [keyvcprj], references: [keyvcprj], onDelete: Cascade, onUpdate: NoAction, map: "fkvcprckeyvcprj ")
  vcrpl      vcrpl[]

  @@index([keycmobj], map: "fkvcprccmobj")
  @@index([keyvcprj], map: "fkvcprcvcprj")
}

model vcprj {
  keyvcprj   String    @id(map: "pkvcprj") @db.Char(15)
  keycmobj   String    @db.Char(15)
  code       String    @unique(map: "akvcprj") @db.VarChar(15)
  caption    String    @db.VarChar(60)
  prjstatus  Int       @default(0, map: "DF__vcprj__prjstatus__457C828B") @db.TinyInt
  balance    Float     @default(0, map: "DF__vcprj__balance__4670A6C4") @db.Money
  tenantprj  Int       @default(0, map: "DF__vcprj__tenantprj__4764CAFD") @db.TinyInt
  extpart    Int       @default(0, map: "DF__vcprj__extpart__4858EF36") @db.TinyInt
  dedprcnt   Decimal   @default(0, map: "DF__vcprj__dedprcnt__494D136F") @db.Decimal(6, 2)
  actprcnt   Decimal   @default(0, map: "DF__vcprj__actprcnt__4A4137A8") @db.Decimal(6, 2)
  changenote String?   @db.VarChar(100)
  buildmes   String    @db.VarChar(600)
  regdate    DateTime? @db.Date
  fdate      DateTime? @db.Date
  tdate      DateTime? @db.Date
  timestamp  String    @db.Char(10)
  vcoiv      vcoiv[]
  vcprc      vcprc[]
  cmobj      cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkvcprjkeycmobj ")

  @@index([keycmobj], map: "fkvcprjcmobj")
}

model vcreg {
  keyvcreg    String    @id(map: "pkvcreg") @db.Char(15)
  keyhyobj    String    @db.Char(15)
  keyvcreg2   String?   @db.Char(15)
  fromdate    DateTime  @db.Date
  todate      DateTime  @db.Date
  registered  Int       @default(0, map: "DF__vcreg__registere__4E11C88C") @db.TinyInt
  municipal   Int       @default(0, map: "DF__vcreg__municipal__4F05ECC5") @db.TinyInt
  sublet      Int       @default(0, map: "DF__vcreg__sublet__4FFA10FE") @db.TinyInt
  auapproved  Int       @default(0, map: "DF__vcreg__auapprove__50EE3537") @db.TinyInt
  published   Int       @default(0, map: "DF__vcreg__published__51E25970") @db.TinyInt
  inprogress  Int       @default(0, map: "DF__vcreg__inprogres__52D67DA9") @db.TinyInt
  subletperc  Decimal?  @db.Decimal(5, 2)
  vatliaperc  Decimal?  @db.Decimal(5, 2)
  areaperc    Decimal?  @db.Decimal(5, 2)
  investment  Float     @db.Money
  usechanged  Int       @db.TinyInt
  changefrom  DateTime? @db.Date
  changetext  String?   @db.VarChar(Max)
  notetext    String?   @db.VarChar(Max)
  sendindate  DateTime? @db.DateTime
  lastrespon  DateTime? @db.DateTime
  approved    DateTime? @db.DateTime
  termdate    DateTime? @db.Date
  timestamp   String    @db.Char(10)
  hyobj       hyobj     @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: Cascade, onUpdate: NoAction, map: "fkvcregkeyhyobj")
  vcreg       vcreg?    @relation("vcregTovcreg", fields: [keyvcreg2], references: [keyvcreg], onDelete: NoAction, onUpdate: NoAction, map: "fkvcregkeyvcreg2 ")
  other_vcreg vcreg[]   @relation("vcregTovcreg")
  vcrse       vcrse[]
  vcvrr       vcvrr[]

  @@index([keyhyobj], map: "fkvcreghyobj")
  @@index([keyvcreg2], map: "fkvcregvcreg2")
}

model vcrpl {
  keyvcrpl  String    @id(map: "pkvcrpl") @db.Char(15)
  keyvcprc  String    @db.Char(15)
  keycmobj  String    @db.Char(15)
  area      Float     @default(0, map: "DF__vcrpl__area__663E57D8") @db.Money
  defarea   Float     @default(0, map: "DF__vcrpl__defarea__67327C11") @db.Money
  fdate     DateTime  @db.Date
  tdate     DateTime? @db.Date
  timestamp String    @db.Char(10)
  cmobj     cmobj     @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkvcrplkeycmobj ")
  vcprc     vcprc     @relation(fields: [keyvcprc], references: [keyvcprc], onUpdate: NoAction, map: "fkvcrplkeyvcprc ")

  @@unique([keyvcprc, keycmobj], map: "akvcrpl")
}

model vcrse {
  keyvcrse                     String  @id(map: "pkvcrse") @db.Char(15)
  keyvcreg                     String  @db.Char(15)
  keycmctc                     String  @db.Char(15)
  keycmctc2                    String? @db.Char(15)
  companynam                   String? @db.VarChar(100)
  organumber                   String? @db.VarChar(15)
  postaladre                   String? @db.VarChar(60)
  zipcode                      String? @db.VarChar(60)
  city                         String? @db.VarChar(60)
  contperson                   String? @db.VarChar(100)
  phone                        String? @db.VarChar(30)
  email                        String? @db.VarChar(80)
  timestamp                    String  @db.Char(10)
  cmctc_vcrse_keycmctcTocmctc  cmctc   @relation("vcrse_keycmctcTocmctc", fields: [keycmctc], references: [keycmctc], onUpdate: NoAction, map: "fkvcrsekeycmctc")
  cmctc_vcrse_keycmctc2Tocmctc cmctc?  @relation("vcrse_keycmctc2Tocmctc", fields: [keycmctc2], references: [keycmctc], onDelete: NoAction, onUpdate: NoAction, map: "fkvcrsekeycmctc2")
  vcreg                        vcreg   @relation(fields: [keyvcreg], references: [keyvcreg], onUpdate: NoAction, map: "fkvcrsekeyvcreg")

  @@index([keycmctc], map: "fkvcrsecmctc")
  @@index([keycmctc2], map: "fkvcrsecmctc2")
  @@index([keyvcreg], map: "fkvcrsehyobj")
}

model vcvdg {
  keyvcvdg   String   @id(map: "pkvcvdg") @db.Char(15)
  keycmobj   String   @db.Char(15)
  calcdate   DateTime @db.Date
  vatdegree  Decimal  @default(0, map: "DF__vcvdg__vatdegree__5C5FE7E3") @db.Decimal(7, 3)
  vatarea    Decimal  @default(0, map: "DF__vcvdg__vatarea__5D540C1C") @db.Decimal(9, 3)
  vtfreearea Decimal  @default(0, map: "DF__vcvdg__vtfreeare__5E483055") @db.Decimal(9, 3)
  freearea   Decimal  @default(0, map: "DF__vcvdg__freearea__5F3C548E") @db.Decimal(9, 3)
  timestamp  String   @db.Char(10)
  cmobj      cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkvcvdgkeycmobj ")

  @@index([keycmobj], map: "fkvcvdgcmobj")
}

model vcvob {
  keyvcvob   String    @id(map: "pkvcvob") @db.Char(15)
  keycmobj   String    @db.Char(15)
  vatoblprct Int       @default(0, map: "DF__vcvob__vatoblprc__744C800D") @db.TinyInt
  fdate      DateTime? @db.Date
  tdate      DateTime? @db.Date
  timestamp  String    @db.Char(10)

  @@index([keycmobj], map: "fkvcvobcmobj")
}

model vcvrr {
  keyvcvrr   String   @id(map: "pkvcvrr") @db.Char(15)
  keyvcreg   String   @db.Char(15)
  senddate   DateTime @db.DateTime
  lastrespon DateTime @db.DateTime
  remindtype Int      @default(0, map: "DF__vcvrr__remindtyp__13F46842") @db.TinyInt
  timestamp  String   @db.Char(10)
  vcreg      vcreg    @relation(fields: [keyvcreg], references: [keyvcreg], onDelete: Cascade, onUpdate: NoAction, map: "fkvcctkeyvcreg")

  @@index([keyvcreg], map: "fkvcvrrvcreg")
}

model vlutf {
  keyvlutf  String   @id(map: "pkvlutf") @db.Char(15)
  keycmobj  String   @db.Char(15)
  keyhyobj  String?  @db.Char(15)
  keyhyrad  String?  @db.Char(15)
  period    Int      @db.TinyInt
  interest  Decimal  @db.Decimal(4, 2)
  amount    Float    @default(0, map: "DF__vlutf__amount__5315A974") @db.Money
  fdate     DateTime @db.DateTime
  timestamp String   @db.Char(10)
  cmobj     cmobj    @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkvlutfkeycmobj")
  hyobj     hyobj?   @relation(fields: [keyhyobj], references: [keyhyobj], onDelete: NoAction, onUpdate: NoAction, map: "fkvlutfkeyhyobj")
  hyrad     hyrad?   @relation(fields: [keyhyrad], references: [keyhyrad], onDelete: Cascade, onUpdate: NoAction, map: "fkvlutfkeyhyrad")

  @@index([keycmobj], map: "fkvlutfcmobj")
  @@index([keyhyobj], map: "fkvlutfhyobj")
  @@index([keyhyrad], map: "fkvlutfhyrad")
}

model vwcol {
  keyvwcol  String @id(map: "pkvwcol") @db.Char(15)
  keydbtbl  String @db.Char(15)
  keycode   String @db.Char(15)
  colorhex  String @db.VarChar(20)
  islocked  Int    @default(0, map: "DF__vwcol__islocked__763EEA20") @db.TinyInt
  timestamp String @db.Char(10)

  @@unique([keydbtbl, keycode], map: "akvwcol")
  @@index([keydbtbl], map: "fkvwcoldbtbl")
  @@index([keycode], map: "fkvwcolkeycode")
}

model vwlay {
  keyvwlay   String @id(map: "pkvwlay") @db.Char(15)
  keydorev   String @db.Char(15)
  keysyusr   String @db.Char(15)
  layer      String @db.VarChar(600)
  layerstate Int    @default(1, map: "DF__vwlay__layerstat__630CE572") @db.TinyInt
  timestamp  String @db.Char(10)
  dorev      dorev  @relation(fields: [keydorev], references: [keydorev], onDelete: Cascade, onUpdate: NoAction, map: "fkvwlaykeydorev ")

  @@index([keydorev], map: "fkvwlaydorev")
  @@index([keysyusr], map: "fkvwlaysyusr")
}

model wabkk {
  keywabkk  String @id(map: "pkwabkk") @db.Char(15)
  keywaweb  String @db.Char(15)
  keybkkty  String @db.Char(15)
  timestamp String @db.Char(10)

  @@unique([keywaweb, keybkkty], map: "akwabkk1")
}

model waimc {
  keywaimc  String @id(map: "pkwaimc") @db.Char(15)
  id        Int    @unique(map: "akwaimc1") @default(0, map: "DF__waimc__id__2D6C7335")
  caption   String @db.Char(30)
  timestamp String @db.Char(10)
}

model waimg {
  keywaimg  String @id(map: "pkwaimg") @db.Char(15)
  keywaimc  String @db.Char(15)
  keysylng  String @db.Char(15)
  id        Int    @unique(map: "akwaimg1")
  imagedata String @db.Text
  extension String @db.Char(10)
  timestamp String @db.Char(10)

  @@index([keysylng], map: "fkwaimgsylng")
  @@index([keywaimc], map: "fkwaimgwaimc")
}

model wapag {
  keywapag  String  @id(map: "PK__wapag__44B5F42E") @db.Char(15)
  keywapag1 String? @db.Char(15)
  id        Int     @default(0, map: "DF__wapag__id__45AA1867")
  filename  String  @db.Char(100)
  caption   String  @db.Char(100)
  timestamp String  @db.Char(10)

  @@index([keywapag1], map: "fkwapagwapag1")
}

model watxc {
  keywatxc  String @id(map: "PK__watxc__57A8CD11") @db.Char(15)
  keywapag  String @db.Char(15)
  id        Int    @default(0, map: "DF__watxc__id__589CF14A")
  caption   String @db.Char(100)
  timestamp String @db.Char(10)

  @@index([keywapag], map: "fkwatxcwapag")
}

model watxt {
  keywatxt  String   @id(map: "pkwatxt") @db.Char(15)
  keywatxc  String   @db.Char(15)
  keycmcmp  String?  @db.Char(15)
  keysylng  String   @db.Char(15)
  keysyusr  String?  @db.Char(15)
  text      String   @db.Text
  textorg   String   @db.Text
  modified  DateTime @db.DateTime
  timestamp String   @db.Char(10)

  @@index([keycmcmp], map: "fkwatxtcmcmp")
  @@index([keysylng], map: "fkwatxtsylng")
  @@index([keysyusr], map: "fkwatxtsyusr")
  @@index([keywatxc], map: "fkwatxtwatxc")
}

model waunh {
  keywaunh  String  @id(map: "pkwaunh") @db.Char(15)
  keysytxc  String? @db.Char(15)
  unhid     Int     @unique(map: "akwaunf") @default(0, map: "DF__waunh__unhid__19AD4198")
  codealias String  @db.VarChar(60)
  timestamp String  @db.Char(10)
}

model waunr {
  keywaunr  String  @id(map: "pkwaunr") @db.Char(15)
  keywaunh  String  @db.Char(15)
  keycmunf  String  @db.Char(15)
  keycmctc  String? @db.Char(15)
  timestamp String  @db.Char(10)

  @@index([keycmctc], map: "fkwaunrcmctc")
  @@index([keycmunf], map: "fkwaunrcmunf")
  @@index([keywaunh], map: "fkwaunrwaunh")
}

model waweb {
  keywaweb  String  @id(map: "pkwaweb") @db.Char(15)
  keysyusr  String? @db.Char(15)
  caption   String  @db.VarChar(30)
  timestamp String  @db.Char(10)

  @@index([keysyusr], map: "fkwawebsyusr")
}
