model Contract {
  contractId            String   @id @map("keyhyobj") @db.Char(15)
  moduleId              String   @map("keysymdl") @db.Char(15)
  billingTypeId         String   @map("keyhyobt") @db.Char(15)
  billingTypeId2        String?  @map("keyhyobt2") @db.Char(15)
  companyId             String?  @map("keycmcmp") @db.Char(15)
  companyId2            String?  @map("keycmcmp2") @db.Char(15)
  masterContractId      String?  @map("keyhyobj2") @db.Char(15)
  contractTypeId        String   @map("keyhyhav") @db.Char(15)
  tenantUnitId          String   @map("keycmuni") @db.Char(15)
  landlordUnitId        String   @map("keycmuni2") @db.Char(15)
  extensionUnitId       String   @map("keycmuni3") @db.Char(15)
  invoiceSortingId      String?  @map("keyhysor") @db.Char(15)
  userId                String?  @map("keysyusr") @db.Char(15)
  handlerId             String?  @map("keysyusr2") @db.Char(15)
  orderMethodId         String?  @map("keyiksbg") @db.Char(15)
  deliveryMethodId      String?  @map("keyikslr") @db.Char(15)
  deductionTypeId       String?  @map("keyprdct") @db.Char(15)
  taxArticleId          String?  @map("keycmart") @db.Char(15)
  taxArticleId2         String?  @map("keycmart2") @db.Char(15)
  smallHouseAreaId      String?  @map("keytrars") @db.Char(15)
  multiFamilyAreaId     String?  @map("keytrare") @db.Char(15)
  conceptId             String?  @map("keycmcpt") @db.Char(15)
  industryId            String?  @map("keycmtrd") @db.Char(15)
  contractTemplateId    String?  @map("keyhycct") @db.Char(15)
  rentalRoundId         String?  @map("keyhyuto") @db.Char(15)

  contractNumber        String   @map("hyobjben") @db.VarChar(35)
  establishedPlace      String?  @map("avtalsort") @db.VarChar(30)
  agreementDate         DateTime?  @map("avtalsdat")
  leaseStart            DateTime?  @map("fdate")
  transferDate          DateTime?  @map("overlatdat")
  leaseEnd              DateTime?  @map("tdate")
  lastInvoiceDate       DateTime?  @map("sistadeb")
  contractPeriodFrom    DateTime?  @map("conperfrom") @db.Date
  contractPeriodTo      DateTime?  @map("conperto") @db.Date
  invoicePeriod         Int       @map("fakturaper") @db.TinyInt
  dueIndicator          String?   @map("forfaller") @db.Char(1)
  freeDueDays           Int       @default(0) @map("friforf") @db.TinyInt
  daysUntilExpire       Int?      @map("daysexpire") @db.SmallInt
  yearExpiry            String?   @map("yearexpdat") @db.Char(4)
  invoiceStop           Int       @default(0) @map("invstop") @db.TinyInt
  isDraft               Int       @default(0) @map("draft") @db.TinyInt
  skipClaimInvoice      Int       @default(0) @map("noclaim") @db.TinyInt
  printed               DateTime? @map("utskriven")
  isSigned              Int       @default(0) @map("waitsign") @db.TinyInt
  approvalDate          DateTime? @map("godkdatum")
  approvedBy            String?   @map("godksign") @db.VarChar(80)
  noPossessionRights    Int       @default(0) @map("ejbesittn") @db.TinyInt
  terminatedDate        DateTime? @map("uppsdatum")
  terminatedBy          String?   @map("uppssign") @db.VarChar(80)
  renegotiationNotice   DateTime? @map("uppsomfdat")
  canceledDate          DateTime? @map("makuldatum")
  canceledBy            String?   @map("makulsign") @db.Char(4)
  contractRent          Float?  @map("konthyra") @db.Money
  contractLabel         String?   @map("markning") @db.VarChar(50)
  noticeTimeTenant      Int?      @map("uppstidg") @db.TinyInt
  noticeTimeLandlord    Int?      @map("uppstidv") @db.TinyInt
  terminateAtEnd        Int       @default(0) @map("termatend") @db.TinyInt
  extensionPeriod       Int?      @map("forlangtid") @db.TinyInt
  accountingType        Int       @map("redovislok") @db.TinyInt
  desiredMoveOut        DateTime? @map("onskflytt")
  signedBy              String?   @map("avtalssign") @db.VarChar(80)
  usage                 String?   @map("anvsatt") @db.VarChar(200)
  terminatedByFlag      String?   @map("uppsagtav") @db.Char(1)
  terminationReason     String?   @map("termreason") @db.VarChar(200)
  personalGuarantee     Int?      @map("borgenkrav") @db.TinyInt
  accessFrom            DateTime? @map("tilltrade")
  groundRentPeriod      Int?      @map("avgperiod") @db.TinyInt
  includesVa            Int?      @map("va") @db.TinyInt
  tribunalRequired      Int       @default(0) @map("tentribun") @db.TinyInt
  noticeDate            DateTime? @map("noticedate")
  legislationYear       Int?      @map("legyear") @db.SmallInt
  manualCalculation     Int       @default(0) @map("manualcalc") @db.TinyInt
  awaitingReview        Int       @default(0) @map("pendreview") @db.TinyInt
  buildingPenalty       Float?  @map("conpen") @db.Money
  ongoingPenalty        Float?  @map("conpenong") @db.Money
  penaltyDate           DateTime? @map("conpenregd")
  commonAreaShare       Float?  @map("sharefacil") @db.Money
  latestAddendum        DateTime? @map("lataddagre")
  reference             String?   @map("referens") @db.VarChar(50)
  editable              Int?      @map("editeras") @db.TinyInt
  prelimTerminatedDate  DateTime? @map("preuppdat")
  prelimTerminatedBy    String?   @map("preuppsign") @db.VarChar(80)
  prelimLastDebit       DateTime? @map("prelastdeb") @db.Date
  prelimRequestedMove   DateTime? @map("prereqmove") @db.Date
  moveOutApproved       Int?      @map("avflgodk") @db.TinyInt
  moveOutApprovedDate   DateTime? @map("avgodkdat")
  movedIn               Int?      @map("movedin") @db.TinyInt
  movedOut              Int?      @map("movedout") @db.TinyInt
  arrivalDate           DateTime? @map("arrival")
  departureDate         DateTime? @map("departure")
  bailiffDate           DateTime? @map("bailiff")
  freeText              String?   @map("typ") @db.VarChar(50)
  vehicleNumber         String?   @map("vehicleno") @db.VarChar(30)
  storeName             String?   @map("storename") @db.VarChar(100)
  stairListName         String?   @map("stlistname") @db.VarChar(100)
  minimalInfo           Int       @map("miniinfo") @db.TinyInt
  standingOrder         Int?      @map("generateik") @db.TinyInt
  skipHffnd             Int       @default(0) @map("ejhffnd") @db.TinyInt
  skipHglu              Int       @default(0) @map("ejhglu") @db.TinyInt
  rentalParts           Int?      @map("hyprtcount") @db.TinyInt
  taxPercentage         Decimal?  @map("taxpercent") @db.Decimal(7,4)
  commonAreaPercentage  Decimal?  @map("shareareap") @db.Decimal(7,4)
  taxModel              Int       @default(1) @map("prtaxmodel") @db.TinyInt
  incomeIndicator       String?   @map("iindicator") @db.Char(1)
  incomeReceivers       Int?      @map("inumberof") @db.SmallInt
  campusCheck           Int       @default(0) @map("campcheck") @db.TinyInt
  vatObligation         Int       @default(0) @map("contracvat") @db.TinyInt
  turnoverOnly          Int       @default(0) @map("onlytrreg") @db.TinyInt
  doubleInspection      Int       @default(0) @map("twoinspect") @db.TinyInt
  paidInAdvance         Int       @default(0) @map("paidatonce") @db.TinyInt
  periodType            Int       @default(0) @map("extkind") @db.TinyInt
  turnoverReminder      Int       @default(0) @map("turnoverem") @db.TinyInt
  closingMonth          Int       @default(0) @map("finaccmnth") @db.TinyInt
  sharedAccounting      Int       @default(0) @map("sharedacc") @db.TinyInt
  vatDeclared           Int       @default(0) @map("vatdecl") @db.TinyInt
  deletedFlag           Int       @default(0) @map("deletemark") @db.TinyInt
  ocrNumber             String?   @map("ocr") @db.VarChar(25)
  distributionCode      Int       @default(0) @map("distrcd") @db.TinyInt
  inspectionNote        String?   @map("inspinfo") @db.VarChar(100)
  timestamp             String    @map("timestamp") @db.Char(10)

  // Relations (generated by Prisma GPT)
  
  // billingType        BillingType        @relation("Contract_billingType", fields: [billingTypeId], references: [billingTypeId])
  // billingType2       BillingType?       @relation("Contract_billingType2", fields: [billingTypeId2], references: [billingTypeId])
  // company            Company?           @relation("Contract_company", fields: [companyId], references: [companyId])
  // company2           Company?           @relation("Contract_company2", fields: [companyId2], references: [companyId])
  // masterContract     Contract?          @relation("Contract_master", fields: [masterContractId], references: [contractId])
  // contractType       ContractType       @relation(fields: [contractTypeId], references: [contractTypeId])
  // tenantUnit         Unit               @relation("Contract_tenantUnit", fields: [tenantUnitId], references: [unitId])
  // landlordUnit       Unit               @relation("Contract_landlordUnit", fields: [landlordUnitId], references: [unitId])
  // extensionUnit      Unit               @relation("Contract_extensionUnit", fields: [extensionUnitId], references: [unitId])
  // invoiceSorting     InvoiceSort?       @relation(fields: [invoiceSortingId], references: [invoiceSortingId])
  // user               User?              @relation("Contract_user", fields: [userId], references: [userId])
  // handler            User?              @relation("Contract_handler", fields: [handlerId], references: [userId])
  // orderMethod        OrderMethod?       @relation(fields: [orderMethodId], references: [orderMethodId])
  // deliveryMethod     DeliveryMethod?    @relation(fields: [deliveryMethodId], references: [deliveryMethodId])
  // taxArticle         Article?           @relation("Contract_taxArticle", fields: [taxArticleId], references: [articleId])
  // taxArticle2        Article?           @relation("Contract_taxArticle2", fields: [taxArticleId2], references: [articleId])
  // smallHouseArea     SmallHouseArea?    @relation(fields: [smallHouseAreaId], references: [areaId])
  // multiFamilyArea    MultiFamilyArea?   @relation(fields: [multiFamilyAreaId], references: [areaId])
  // concept            Concept?           @relation(fields: [conceptId], references: [conceptId])
  // industry           Industry?          @relation(fields: [industryId], references: [industryId])
  // contractTemplate   ContractTemplate?  @relation(fields: [contractTemplateId], references: [templateId])
  // rentalRound        RentalRound?       @relation(fields: [rentalRoundId], references: [rentalRoundId])

 @@map("hyobj") 
}