model RentalObjectInformation {
  @@map("hyinf")
  
  rentalObjectId String @id(map: "pkhyinf") @map("keyhyinf") @db.Char(15)
  objectId String @unique(map: "akhyinf1") @map("keycmobj") @db.Char(15)
  rentalObjectTypeId String @map("keyhyint") @db.Char(15)
  shownById String? @map("keybkvis") @db.Char(15) // TODO: Update with new model name when available
  indexSeriesId String? @map("keycmind") @db.Char(15)
  indexLevelId String? @map("keycminv") @db.Char(15) // Updated after backward pass with IndexValue model
  measurementTypeId String? @map("keycmvat") @db.Char(15)
  measurementTypeId2 String? @map("keycmvat2") @db.Char(15)
  measurementTypeId3 String? @map("keycmvat3") @db.Char(15)
  measurementTypeId4 String? @map("keycmvat4") @db.Char(15)
  vatRegionId String? @map("keyhyvaa") @db.Char(15) // TODO: Confirm the relationship in backward pass
  heatingId String? @map("keybahea") @db.Char(15)
  renovationExemptionId String? @map("keybarex") @db.Char(15) // TODO: Confirm the relationship in backward pass
  creditTemplateId String? @map("keycmcte") @db.Char(15)
  rentalContractId String? @map("hyresid") @db.VarChar(30)
  generation Int? @map("generation") @db.SmallInt
  startGeneration Int? @map("startgen") @db.TinyInt
  apartmentNumber String? @map("lmnr") @db.Char(5)
  residentialNumber String? @map("prynumber") @db.VarChar(30)
  shareNumber String? @map("shareno") @db.VarChar(60)
  formOfTenure Int? @map("upplform") @db.TinyInt
  currentFormOfTenure Int? @map("upplformnu") @db.TinyInt
  shortTermRental Int @map("shortstay") @db.TinyInt
  shareAmount Decimal? @map("andelstal") @db.Decimal(22, 7)
  distributionFactor Decimal? @map("aixrent") @db.Decimal(8, 7)
  shareValue Float? @map("sharevalue") @db.Money
  votingShare Int? @map("votecount") @db.TinyInt
  advancePayment Float? @map("insatspre") @db.Money
  deposit Float? @map("insatsfors") @db.Money
  investment Float? @map("insats") @db.Money
  investmentDate DateTime? @map("inputdate") @db.DateTime
  grantFee Float? @map("upplavg") @db.Money
  grantFeeDate DateTime? @map("letfeedate") @db.DateTime
  irretrievableCapitalContribution Float? @map("oaterkap") @db.Money
  originalAnnualFee Float? @map("planarsavg") @db.Money
  firstMoveInDate DateTime? @map("inflyttdat") @db.DateTime
  queueManagement Int? @map("direktuth") @db.TinyInt
  baseRent Float? @map("akthyratot") @db.Money
  baseContractRent Float? @map("konthyra") @db.Money
  draft Int @default(0, map: "DF__hyinf__draft__535320DE") @map("draft") @db.TinyInt
  excludeInvestment Int @map("ejbrinsats") @db.TinyInt
  excludeInnerFund Int @map("ejbrfnd") @db.TinyInt
  statisticsStartDate DateTime @map("statfrom") @db.DateTime
  statisticsEndDate DateTime @map("stattom") @db.DateTime
  rentLossStartDate DateTime? @map("lossfrom") @db.DateTime
  rentLossEndDate DateTime? @map("lossto") @db.DateTime
  salesStop Int @map("saljstopp") @db.TinyInt
  assessmentType Int @default(0, map: "DF__hyinf__pointtype__54474517") @map("pointtype") @db.TinyInt
  housingSupplement Int @default(0, map: "DF__hyinf__allowance__553B6950") @map("allowance") @db.TinyInt
  housingEnergyClass Int @default(0, map: "DF__hyinf__fohenergy__562F8D89") @map("fohenergyc") @db.TinyInt
  targetRentPercentage Decimal? @map("targetperc") @db.Decimal(4, 1)
  targetRentAmount Float? @map("targetrent") @db.Money
  assessmentPoints Int? @map("points") @db.SmallInt
  minimumPersons Int? @map("persmin") @db.TinyInt
  maximumPersons Int? @map("persmax") @db.TinyInt
  minimumAge Int? @map("persagemin") @db.TinyInt
  maximumAge Int? @map("persagemax") @db.TinyInt
  shortestResidenceTime Int? @map("tentimemin") @db.TinyInt
  minimumIncomeRentFactor Decimal? @map("increntmin") @db.Decimal(4, 2)
  additionalInfo String? @map("otherinfo") @db.VarChar(200)
  renovationExemptionComment String? @map("rexcomment") @db.VarChar(200)
  firstClassObject Int @default(0, map: "DF__hyinf__fcobject__5723B1C2") @map("fcobject") @db.TinyInt
  upgradeStandard Int @default(0, map: "DF__hyinf__fcstatus__5817D5FB") @map("fcstatus") @db.TinyInt
  upgradeNeed Int @default(0, map: "DF__hyinf__fcupgneed__590BFA34") @map("fcupgneed") @db.TinyInt
  lastUpgradeDate DateTime? @map("fcdate") @db.DateTime
  upgradeComment String? @map("fccomment") @db.VarChar(250)
  includedInBGU Int @default(0, map: "DF__hyinf__bguused__5A001E6D") @map("bguused") @db.TinyInt
  hasLakeView Int @default(0, map: "DF__hyinf__lakeview__5AF442A6") @map("lakeview") @db.TinyInt
  vatRate Decimal @default(0, map: "DF__hyinf__vatstat__5BE866DF") @map("vatstat") @db.Decimal(4, 2)
  purpose Int @default(1, map: "DF__hyinf__label__5CDC8B18") @map("label") @db.TinyInt
  renovation Int @default(0, map: "DF__hyinf__renovatio__5DD0AF51") @map("renovation") @db.TinyInt
  isDAEB Int @default(1, map: "DF__hyinf__daeb__5EC4D38A") @map("daeb") @db.TinyInt
  standardYearRent Float? @map("stdyrrent") @db.Money
  discountedFee Float @default(0, map: "DF__hyinf__discfee__5FB8F7C3") @map("discfee") @db.Money
  rentCalculationMethod Int @default(0, map: "DF__hyinf__rentcalcm__60AD1BFC") @map("rentcalcm") @db.TinyInt
  deleteMark Int @default(0, map: "DF__hyinf__deletemar__61A14035") @map("deletemark") @db.TinyInt
  timestamp String @map("timestamp") @db.Char(10) // TODO: change timestamp later when knowing more about its usage

  heating Heating? @relation(fields: [keybahea], references: [keybahea], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfbahea")
  creditTemplate CreditTemplate? @relation(fields: [keycmcte], references: [keycmcte], onUpdate: NoAction, map: "fkhyinfcmcte")
  index Index? @relation(fields: [keycmind], references: [keycmind], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmind")
  indexValue IndexValue? @relation(fields: [keycminv], references: [keycminv], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycminv")
  cmobj cmobj @relation(fields: [keycmobj], references: [keycmobj], onDelete: Cascade, onUpdate: NoAction, map: "fkhyinfkeycmobj")
  // TODO: Update these relations when model name becomes available
  // cmvat_hyinf_keycmvatTocmvat cmvat? @relation("hyinf_keycmvatTocmvat", fields: [keycmvat], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmvat")
  // cmvat_hyinf_keycmvat2Tocmvat cmvat? @relation("hyinf_keycmvat2Tocmvat", fields: [keycmvat2], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmvat2")
  // cmvat_hyinf_keycmvat3Tocmvat cmvat? @relation("hyinf_keycmvat3Tocmvat", fields: [keycmvat3], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmvat3")
  // cmvat_hyinf_keycmvat4Tocmvat cmvat? @relation("hyinf_keycmvat4Tocmvat", fields: [keycmvat4], references: [keycmvat], onDelete: NoAction, onUpdate: NoAction, map: "fkhyinfkeycmvat4")
  rentalObjectType RentalObjectType @relation(fields: [keyhyint], references: [keyhyint], onUpdate: NoAction, map: "fkhyinfkeyhyint")

  @@index([keybahea], map: "fkhyinfbahea")
  @@index([keybkvis], map: "fkhyinfbkvis")
  @@index([keycmcte], map: "fkhyinfcmcte")
  @@index([keycmind], map: "fkhyinfcmind")
  @@index([keycminv], map: "fkhyinfcminv")
  @@index([keycmvat], map: "fkhyinfcmvat")
  @@index([keycmvat2], map: "fkhyinfcmvat2")
  @@index([keycmvat3], map: "fkhyinfcmvat3")
  @@index([keycmvat4], map: "fkhyinfcmvat4")
  @@index([keyhyint], map: "fkhyinfhyint")
  @@index([rentalContractId], map: "inhyinf_2J70GWSR9")
}