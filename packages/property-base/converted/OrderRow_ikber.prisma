model OrderRow {
  @@map("ikber")

  orderRowId String @id(map: "pkikber") @map("keyikber") @db.Char(15)
  orderId String @map("keyikbeh") @db.Char(15)
  articleId String @map("keycmart") @db.Char(15)
  objectId String? @map("keycmobj") @db.Char(15)
  linkedOrderRowId String? @map("keyikber2") @db.Char(15) // represents related order rows
  storageLocationId String? @map("keyimial") @db.Char(15)
  nameCaption String @map("caption") @db.VarChar(500)
  supplierPartNumber String? @map("suppartno") @db.VarChar(30)
  quantityAmount Decimal? @map("amount") @db.Decimal(9, 2)
  unitPriceAmount Float? @map("price") @db.Money
  vatAmount Float? @map("vat") @db.Money
  nonDeductibleVatAmount Float? @map("vatnotded") @db.Money
  isSplitRow Int @default(0, map: "DF__ikber__split__08D01BEF") @map("split") @db.TinyInt
  isDelivered Int @default(0, map: "DF__ikber__delivered__09C44028") @map("delivered") @db.TinyInt
  plannedDeliveryDate DateTime? @map("pldeldate") @db.Date
  realDeliveryDate DateTime? @map("deldate") @db.Date
  isCancelled Int @default(0, map: "DF__ikber__cancelled__0AB86461") @map("cancelled") @db.TinyInt
  isBooked Int @default(0, map: "DF__ikber__booked__0BAC889A") @map("booked") @db.TinyInt
  approveStatus Int @default(0, map: "DF__ikber__aprstatus__0CA0ACD3") @map("aprstatus") @db.TinyInt
  distributionModel Int @default(0, map: "DF__ikber__distrmode__0D94D10C") @map("distrmodel") // TODO: Determine a better name later if possible
  rowTimestamp String @map("timestamp") @db.Char(10) // TODO: Determine usage for future renaming

  article cmart @relation(fields: [articleId], references: [keycmart], onUpdate: NoAction, map: "fkikberkeycmart")
  propertyObject PropertyObject? @relation(fields: [objectId], references: [propertyObjectId], onUpdate: NoAction, onDelete: NoAction, map: "fkikberkeycmobj") // Updated to reflect new model name
  order Order @relation(fields: [orderId], references: [orderId], onDelete: Cascade, onUpdate: NoAction, map: "fkikberkeyikbeh") // Rename to "Order" after determining the new model name
  linkedOrderRow OrderRow? @relation("ikberToikber", fields: [linkedOrderRowId], references: [orderRowId], onDelete: NoAction, onUpdate: NoAction, map: "fkikberkeyikber2 ") // Used consistent naming
  otherLinkedOrderRows OrderRow[] @relation("ikberToikber") // Used consistent naming

  @@index([articleId], map: "fkikbercmart")
  @@index([objectId], map: "fkikbercmobj")
  @@index([orderId], map: "fkikberikbeh")
  @@index([linkedOrderRowId], map: "fkikberikber2")
}