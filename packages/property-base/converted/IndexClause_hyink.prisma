model IndexClause {
  @@map("hyink")

  indexClauseId String @id(map: "pkhyink") @map("keyhyink") @db.Char(15)
  description String? @map("hyinkben") @db.Char(30)
  minimumChange Decimal @map("minstfor") @db.Decimal(6, 2)
  baseMinimumChange Decimal? @map("minstforba") @db.Decimal(6, 2)
  decimalRounding Int? @map("kalkavr") @db.TinyInt
  percentRounding Int @map("procentavr") @db.TinyInt
  rentRounding Int @map("hyraavr") @db.SmallInt
  baseRent Int @map("bashyra") @db.SmallInt
  alwaysCalculate Int @default(0, map: "DF__hyink__alwayscal__055490C6") @map("alwayscalc") @db.TinyInt
  annualIncrease Float? @map("alwaysainc") @db.Money
  maximumPercentageChange Float? @map("maxperchan") @db.Money
  systemStandard Int @map("repabkod") @db.TinyInt
  onlyIncrease Int @map("endasthoj") @db.TinyInt
  calculateFromBaseIndex Int @default(1, map: "DF__hyink__calcfrbas__0648B4FF") @map("calcfrbase") @db.TinyInt
  usePreviousYearIndex Int @default(0, map: "DF__hyink__usepreyea__073CD938") @map("usepreyear") @db.TinyInt
  setBaseIndexNewIfUnder Int @default(0, map: "DF__hyink__barenifde__0830FD71") @map("barenifdec") @db.TinyInt
  enumerationInterval Int @default(12, map: "DF__hyink__enuminter__092521AA") @map("enuminterv") @db.TinyInt
  sortOrder Int? @map("sortorder") @db.SmallInt
  inUse Int @default(1, map: "DF__hyink__isinuse__0A1945E3") @map("isinuse") @db.TinyInt
  timestamp String @map("timestamp") @db.Char(10) // TODO: Determine if a different naming is needed

  // Relations
  regulatedAmounts RegulatedAmount[] @relation("fkhyingkeyhyink")
  rentalRows RentalRow[] @relation("fkhyradkeyhyink")
  // The following are TODOs as their new names were not determined yet
  hying hying[] // TODO: Determine new model name for hying
  hyrad hyrad[] // TODO: Determine new model name for hyrad
}