model Resource {
  @@map("cmres")

  resourceId String @id(map: "pkcmres") @map("keycmres") @db.Char(15)
  contactId String @map("keycmctc") @db.Char(15) // Assuming cmctc maps to Contact
  routeId String? @map("keyatway") @db.Char(15) // TODO: May need renaming based on specific route context
  professionalCategoryId String? @map("keyskyrk") @db.Char(15)
  resourceCode String @map("code") @db.VarChar(30)
  isExternalResource Int @default(0, map: "DF__cmres__externres__2B12A512") @map("externres") @db.TinyInt
  reference String? @map("reference") @db.VarChar(30)
  message String? @map("resmessage") @db.VarChar(60)
  employmentFromDate DateTime? @map("emplfdate") @db.Date
  employmentToDate DateTime? @map("empltdate") @db.Date
  timestamp String @map("timestamp") @db.Char(10) // TODO: Confirm if 'timestamp' needs a different naming convention or purpose

  contact Contact @relation(fields: [contactId], references: [contactId], onDelete: Cascade, onUpdate: NoAction, map: "fkcmreskeycmctc")
  professionalCategory ProfessionalCategory? @relation(fields: [professionalCategoryId], references: [professionCategoryId], onUpdate: NoAction, map: "fkcmreskeyskyrk")

  @@index([contactId], map: "fkcmrescmctc")
  @@index([professionalCategoryId], map: "fkcmresskyrk")
  @@index([resourceCode], map: "incmres_code")
}