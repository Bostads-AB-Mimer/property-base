model SupplierInvoice {
  @@map("lrfkh")

  supplierInvoiceId String @id(map: "pklrfkh") @map("keylrfkh") @db.Char(15)
  companyId String @map("keycmcmp") @db.Char(15) // Maps to Company
  transactionTypeId String @map("keyrevrt") @db.Char(15)
  secondaryTransactionTypeId String? @map("keyrevrt2") @db.Char(15)
  supplierId String? @map("keycmctc") @db.Char(15) // Maps to Contact
  factoringCompanyId String? @map("keycmctc2") @db.Char(15)
  ourReferenceId String? @map("keycmctc3") @db.Char(15)
  exportImportId String? @map("keycmeid") @db.Char(15) // Maps to ExportImport
  currencyId String? @map("keycmcuh") @db.Char(15)
  measurementPointId String? @map("keydrmpt") @db.Char(15) // Maps to MeasurementPoint
  transportRouteId String? @map("keyatway") @db.Char(15)
  bankAccountId String? @map("keylrbac") @db.Char(15)
  reserveBankAccountId String? @map("keylrbac2") @db.Char(15)
  invoiceDescriptionId String? @map("keylrfkd") @db.Char(15)
  createdById String @map("keysyusr") @db.Char(15) // Maps to User
  updatedById String? @map("keysyusr2") @db.Char(15)
  invoiceNumber String? @map("invoice") @db.Char(25)
  invoiceType Int @map("type") @db.TinyInt
  registrationStatus Int @map("regstatus") @db.TinyInt
  paymentStatus Int @map("paystatus") @db.TinyInt
  journalStatus Int @map("jrnlstatus") @db.TinyInt
  approvalStatus Int @default(0, map: "DF__lrfkh__atstatus__4F6BEA49") @map("atstatus") @db.TinyInt
  approvalReference String? @map("reference") @db.Char(30)
  ocrNumber String? @map("ocr") @db.Char(25)
  orderId String? @map("orderid") @db.Char(15)
  inwardId String? @map("inwardid") @db.VarChar(80)
  invoiceAmount Float @map("amount") @db.Money
  invoiceVatAmount Float @map("vat") @db.Money
  foreignInvoiceAmount Float @map("famount") @db.Money
  foreignInvoiceVatAmount Float @map("fvat") @db.Money
  additionalVatAmount Float @default(0, map: "DF__lrfkh__addvat__50600E82") @map("addvat") @db.Money
  reservedAmount Float @default(0, map: "DF__lrfkh__blcamount__515432BB") @map("blcamount") @db.Money
  invoiceDate DateTime @map("invdate") @db.DateTime
  dueDate DateTime? @map("expdate") @db.DateTime
  fromDate DateTime? @map("fromdate") @db.DateTime
  toDate DateTime? @map("todate") @db.DateTime
  registrationDate DateTime @map("regdate") @db.DateTime
  isFactoring Int @map("factoring") @db.TinyInt
  blockedForPaymentMethod Int @default(0, map: "DF__lrfkh__blockpaym__524856F4") @map("blockpaymd") @db.TinyInt
  expressPaymentUsage Int @default(0, map: "DF__lrfkh__expayuse__533C7B2D") @map("expayuse") @db.TinyInt
  isBlocked Int @map("blocked") @db.TinyInt
  isDefinitivelyBlocked Int @default(0, map: "DF__lrfkh__blockedde__54309F66") @map("blockeddef") @db.TinyInt
  allocationStatus Int? @map("allocated") @db.TinyInt
  securedAccountStatus Int @default(0, map: "DF__lrfkh__blc__5524C39F") @map("blc") @db.TinyInt
  btw Int @default(0, map: "DF__lrfkh__btw__5618E7D8") @map("btw") @db.TinyInt
  totalCostIncludingVat Int @default(0, map: "DF__lrfkh__btwcost__570D0C11") @map("btwcost") @db.TinyInt
  exportStatus Int @map("expstatus") @db.TinyInt
  subscriptionStatus Int @default(0, map: "DF__lrfkh__subscript__5801304A") @map("subscript") @db.TinyInt
  timestamp String @map("timestamp") @db.Char(10) // TODO: Confirm if 'timestamp' needs a different naming convention or purpose

  // Relations; update these virtual fields when new model names are determined
  projectTransaction ProjectTransaction[] @relation("fkprmtrkeylrfkh")

  @@index([companyId], map: "fklrfkhcmcmp")
  @@index([supplierId], map: "fklrfkhcmctc")
  @@index([factoringCompanyId], map: "fklrfkhcmctc2")
  @@index([ourReferenceId], map: "fklrfkhcmctc3")
  @@index([currencyId], map: "fklrfkhcmcuh")
  @@index([exportImportId], map: "fklrfkhcmeid")
  @@index([measurementPointId], map: "fklrfkhdrmpt")
  @@index([reserveBankAccountId], map: "fklrfkhlrbac2")
  @@index([transactionTypeId], map: "fklrfkhrevrt")
  @@index([secondaryTransactionTypeId], map: "fklrfkhrevrt2")
  @@index([createdById], map: "fklrfkhsyusr")
  @@index([updatedById], map: "fklrfkhsyusr2")
  @@index([companyId, supplierInvoiceId, invoiceType], map: "inlrfkh_1")
}