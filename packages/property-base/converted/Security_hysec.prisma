model Security {
  @@map("hysec")
  
  securityId String @id(map: "pkhysec") @map("keyhysec") @db.Char(15)
  contractId String @map("keyhyobj") @db.Char(15)
  securityTypeId String @map("keyhyset") @db.Char(15)
  securityCategoryId String? @map("keyhyscy") @db.Char(15)
  contactId String? @map("keycmctc") @db.Char(15)
  regulatedAmountId String @map("keyhying") @db.Char(15)
  securityCodingId String? @map("keyhysma") @db.Char(15)

  // TODO: Comment out these lines due to missing cmuni model definition
  // claimPeriodLeaseId String? @map("keycmuni") @db.Char(15)
  // claimPeriodTerminatedId String? @map("keycmuni2") @db.Char(15)
  // claimPeriodCeasedId String? @map("keycmuni3") @db.Char(15)

  amount Float? @map("amount") @db.Money
  setAmount Float? @map("actamount") @db.Money
  fromDate DateTime @map("fdate") @db.DateTime
  toDate DateTime? @map("tdate") @db.DateTime
  noticeMonth Int? @map("noticemon") @db.TinyInt
  noticeDate DateTime? @map("noticedate") @db.DateTime
  account String? @map("account") @db.Char(20)
  note String? @map("comment") @db.VarChar(500)
  info String? @map("terms") @db.VarChar(200)
  createdDate DateTime? @map("createdate") @db.Date
  dueDate DateTime? @map("duedate") @db.Date
  receivedDate DateTime? @map("recvddate") @db.Date
  returnedDate DateTime? @map("returndate") @db.Date
  validClaimPeriod Int? @map("nvalidper") @db.SmallInt
  expiredClaimPeriod Int? @map("nexpper") @db.SmallInt
  ceasedClaimPeriod Int? @map("nceasedper") @db.SmallInt
  noticeOfClaim DateTime? @map("warnclaim") @db.Date
  claimSignature String? @map("claimsign") @db.VarChar(80)
  claimNote String? @map("claimcmmnt") @db.VarChar(500)
  timestamp String @map("timestamp") @db.Char(10)

  // Relations
  contact Contact? @relation(fields: [contactId], references: [contactId], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeycmctc")
  
  // TODO: Comment out these relation definitions due to missing cmuni model
  // cmuni_hysec_keycmuniTocmuni cmuni? @relation("hysec_keycmuniTocmuni", fields: [keycmuni], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeycmuni ")
  // cmuni_hysec_keycmuni2Tocmuni cmuni? @relation("hysec_keycmuni2Tocmuni", fields: [keycmuni2], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeycmuni2 ")
  // cmuni_hysec_keycmuni3Tocmuni cmuni? @relation("hysec_keycmuni3Tocmuni", fields: [keycmuni3], references: [keycmuni], onDelete: NoAction, onUpdate: NoAction, map: "fkhyseckeycmuni3 ")

  regulatedAmountEntity RegulatedAmount @relation(fields: [regulatedAmountId], references: [regulatedAmountId], onUpdate: NoAction, map: "fkhyseckeyhying")
  contract Contract @relation(fields: [contractId], references: [contractId], onDelete: Cascade, onUpdate: NoAction, map: "fkhyseckeyhyobj")
  securityType SecurityType @relation(fields: [securityTypeId], references: [securityTypeId], onUpdate: NoAction, map: "fkhyseckeyhyset")

  @@index([contactId], map: "fkhyseccmctc")
  // @@index([claimPeriodLeaseId], map: "fkhyseccmuni") // TODO: Commented out due to missing cmuni model
  // @@index([claimPeriodTerminatedId], map: "fkhyseccmuni2") // TODO: Commented out due to missing cmuni model
  // @@index([claimPeriodCeasedId], map: "fkhyseccmuni3") // TODO: Commented out due to missing cmuni model
  @@index([regulatedAmountId], map: "fkhysechying")
  @@index([contractId], map: "fkhysechyobj")
  @@index([securityTypeId], map: "fkhysechyset")
}